{"version":3,"file":"static/chunks/43.aa2a6be52bcd0767.js","mappings":"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","sources":["webpack://_N_E/./node_modules/.pnpm/chalk@5.3.0/node_modules/chalk/source/vendor/ansi-styles/index.js","webpack://_N_E/./node_modules/.pnpm/chalk@5.3.0/node_modules/chalk/source/vendor/supports-color/browser.js","webpack://_N_E/./node_modules/.pnpm/chalk@5.3.0/node_modules/chalk/source/utilities.js","webpack://_N_E/./node_modules/.pnpm/chalk@5.3.0/node_modules/chalk/source/index.js","webpack://_N_E/./components/riddle/keyframes.ts","webpack://_N_E/./components/riddle/terminal.tsx","webpack://_N_E/./node_modules/.pnpm/xterm-addon-fit@0.7.0_xterm@5.2.1/node_modules/xterm-addon-fit/lib/xterm-addon-fit.js","webpack://_N_E/<anon>"],"sourcesContent":["const ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi16 = (offset = 0) => code => `\\u001B[${code + offset}m`;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nconst styles = {\n\tmodifier: {\n\t\treset: [0, 0],\n\t\t// 21 isn't widely supported and 22 does the same thing\n\t\tbold: [1, 22],\n\t\tdim: [2, 22],\n\t\titalic: [3, 23],\n\t\tunderline: [4, 24],\n\t\toverline: [53, 55],\n\t\tinverse: [7, 27],\n\t\thidden: [8, 28],\n\t\tstrikethrough: [9, 29],\n\t},\n\tcolor: {\n\t\tblack: [30, 39],\n\t\tred: [31, 39],\n\t\tgreen: [32, 39],\n\t\tyellow: [33, 39],\n\t\tblue: [34, 39],\n\t\tmagenta: [35, 39],\n\t\tcyan: [36, 39],\n\t\twhite: [37, 39],\n\n\t\t// Bright color\n\t\tblackBright: [90, 39],\n\t\tgray: [90, 39], // Alias of `blackBright`\n\t\tgrey: [90, 39], // Alias of `blackBright`\n\t\tredBright: [91, 39],\n\t\tgreenBright: [92, 39],\n\t\tyellowBright: [93, 39],\n\t\tblueBright: [94, 39],\n\t\tmagentaBright: [95, 39],\n\t\tcyanBright: [96, 39],\n\t\twhiteBright: [97, 39],\n\t},\n\tbgColor: {\n\t\tbgBlack: [40, 49],\n\t\tbgRed: [41, 49],\n\t\tbgGreen: [42, 49],\n\t\tbgYellow: [43, 49],\n\t\tbgBlue: [44, 49],\n\t\tbgMagenta: [45, 49],\n\t\tbgCyan: [46, 49],\n\t\tbgWhite: [47, 49],\n\n\t\t// Bright color\n\t\tbgBlackBright: [100, 49],\n\t\tbgGray: [100, 49], // Alias of `bgBlackBright`\n\t\tbgGrey: [100, 49], // Alias of `bgBlackBright`\n\t\tbgRedBright: [101, 49],\n\t\tbgGreenBright: [102, 49],\n\t\tbgYellowBright: [103, 49],\n\t\tbgBlueBright: [104, 49],\n\t\tbgMagentaBright: [105, 49],\n\t\tbgCyanBright: [106, 49],\n\t\tbgWhiteBright: [107, 49],\n\t},\n};\n\nexport const modifierNames = Object.keys(styles.modifier);\nexport const foregroundColorNames = Object.keys(styles.color);\nexport const backgroundColorNames = Object.keys(styles.bgColor);\nexport const colorNames = [...foregroundColorNames, ...backgroundColorNames];\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`,\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false,\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false,\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = wrapAnsi16();\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi = wrapAnsi16(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue(red, green, blue) {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16\n\t\t\t\t\t+ (36 * Math.round(red / 255 * 5))\n\t\t\t\t\t+ (6 * Math.round(green / 255 * 5))\n\t\t\t\t\t+ Math.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue(hex) {\n\t\t\t\tconst matches = /[a-f\\d]{6}|[a-f\\d]{3}/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet [colorString] = matches;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = [...colorString].map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t/* eslint-disable no-bitwise */\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF,\n\t\t\t\t\t/* eslint-enable no-bitwise */\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t\tansi256ToAnsi: {\n\t\t\tvalue(code) {\n\t\t\t\tif (code < 8) {\n\t\t\t\t\treturn 30 + code;\n\t\t\t\t}\n\n\t\t\t\tif (code < 16) {\n\t\t\t\t\treturn 90 + (code - 8);\n\t\t\t\t}\n\n\t\t\t\tlet red;\n\t\t\t\tlet green;\n\t\t\t\tlet blue;\n\n\t\t\t\tif (code >= 232) {\n\t\t\t\t\tred = (((code - 232) * 10) + 8) / 255;\n\t\t\t\t\tgreen = red;\n\t\t\t\t\tblue = red;\n\t\t\t\t} else {\n\t\t\t\t\tcode -= 16;\n\n\t\t\t\t\tconst remainder = code % 36;\n\n\t\t\t\t\tred = Math.floor(code / 36) / 5;\n\t\t\t\t\tgreen = Math.floor(remainder / 6) / 5;\n\t\t\t\t\tblue = (remainder % 6) / 5;\n\t\t\t\t}\n\n\t\t\t\tconst value = Math.max(red, green, blue) * 2;\n\n\t\t\t\tif (value === 0) {\n\t\t\t\t\treturn 30;\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tlet result = 30 + ((Math.round(blue) << 2) | (Math.round(green) << 1) | Math.round(red));\n\n\t\t\t\tif (value === 2) {\n\t\t\t\t\tresult += 60;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\trgbToAnsi: {\n\t\t\tvalue: (red, green, blue) => styles.ansi256ToAnsi(styles.rgbToAnsi256(red, green, blue)),\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi: {\n\t\t\tvalue: hex => styles.ansi256ToAnsi(styles.hexToAnsi256(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t});\n\n\treturn styles;\n}\n\nconst ansiStyles = assembleStyles();\n\nexport default ansiStyles;\n","/* eslint-env browser */\n\nconst level = (() => {\n\tif (navigator.userAgentData) {\n\t\tconst brand = navigator.userAgentData.brands.find(({brand}) => brand === 'Chromium');\n\t\tif (brand && brand.version > 93) {\n\t\t\treturn 3;\n\t\t}\n\t}\n\n\tif (/\\b(Chrome|Chromium)\\//.test(navigator.userAgent)) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n})();\n\nconst colorSupport = level !== 0 && {\n\tlevel,\n\thasBasic: true,\n\thas256: level >= 2,\n\thas16m: level >= 3,\n};\n\nconst supportsColor = {\n\tstdout: colorSupport,\n\tstderr: colorSupport,\n};\n\nexport default supportsColor;\n","// TODO: When targeting Node.js 16, use `String.prototype.replaceAll`.\nexport function stringReplaceAll(string, substring, replacer) {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.slice(endIndex, index) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n\nexport function stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.slice(endIndex, (gotCR ? index - 1 : index)) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n","import ansiStyles from '#ansi-styles';\nimport supportsColor from '#supports-color';\nimport { // eslint-disable-line import/order\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex,\n} from './utilities.js';\n\nconst {stdout: stdoutColor, stderr: stderrColor} = supportsColor;\n\nconst GENERATOR = Symbol('GENERATOR');\nconst STYLER = Symbol('STYLER');\nconst IS_EMPTY = Symbol('IS_EMPTY');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m',\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nexport class Chalk {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = (...strings) => strings.join(' ');\n\tapplyOptions(chalk, options);\n\n\tObject.setPrototypeOf(chalk, createChalk.prototype);\n\n\treturn chalk;\n};\n\nfunction createChalk(options) {\n\treturn chalkFactory(options);\n}\n\nObject.setPrototypeOf(createChalk.prototype, Function.prototype);\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this[STYLER]), this[IS_EMPTY]);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t},\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this[STYLER], true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t},\n};\n\nconst getModelAnsi = (model, level, type, ...arguments_) => {\n\tif (model === 'rgb') {\n\t\tif (level === 'ansi16m') {\n\t\t\treturn ansiStyles[type].ansi16m(...arguments_);\n\t\t}\n\n\t\tif (level === 'ansi256') {\n\t\t\treturn ansiStyles[type].ansi256(ansiStyles.rgbToAnsi256(...arguments_));\n\t\t}\n\n\t\treturn ansiStyles[type].ansi(ansiStyles.rgbToAnsi(...arguments_));\n\t}\n\n\tif (model === 'hex') {\n\t\treturn getModelAnsi('rgb', level, type, ...ansiStyles.hexToRgb(...arguments_));\n\t}\n\n\treturn ansiStyles[type][model](...arguments_);\n};\n\nconst usedModels = ['rgb', 'hex', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'color', ...arguments_), ansiStyles.color.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'bgColor', ...arguments_), ansiStyles.bgColor.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this[GENERATOR].level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis[GENERATOR].level = level;\n\t\t},\n\t},\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent,\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\t// Single argument is hot path, implicit coercion is faster than anything\n\t// eslint-disable-next-line no-implicit-coercion\n\tconst builder = (...arguments_) => applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder[GENERATOR] = self;\n\tbuilder[STYLER] = _styler;\n\tbuilder[IS_EMPTY] = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self[IS_EMPTY] ? '' : string;\n\t}\n\n\tlet styler = self[STYLER];\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.includes('\\u001B')) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nObject.defineProperties(createChalk.prototype, styles);\n\nconst chalk = createChalk();\nexport const chalkStderr = createChalk({level: stderrColor ? stderrColor.level : 0});\n\nexport {\n\tmodifierNames,\n\tforegroundColorNames,\n\tbackgroundColorNames,\n\tcolorNames,\n\n\t// TODO: Remove these aliases in the next major version\n\tmodifierNames as modifiers,\n\tforegroundColorNames as foregroundColors,\n\tbackgroundColorNames as backgroundColors,\n\tcolorNames as colors,\n} from './vendor/ansi-styles/index.js';\n\nexport {\n\tstdoutColor as supportsColor,\n\tstderrColor as supportsColorStderr,\n};\n\nexport default chalk;\n","import { keyframes } from '@emotion/react';\n\nexport const blink = keyframes`\n\t\tfrom,\n\t\tto {\n\t\t\topacity: 0;\n\t\t}\n\t\t50% {\n\t\t\topacity: 1;\n\t\t}\n`;\n\nexport const flicker = keyframes`\n\t 0% {\n\t\t opacity: 1401759986;\n\t}\n\t 5% {\n\t\t opacity: 1310178007;\n\t}\n\t 10% {\n\t\t opacity: 623983780;\n\t}\n\t 15% {\n\t\t opacity: 789961012;\n\t}\n\t 20% {\n\t\t opacity: 566310986;\n\t}\n\t 25% {\n\t\t opacity: 134590213;\n\t}\n\t 30% {\n\t\t opacity: 1229133229;\n\t}\n\t 35% {\n\t\t opacity: 2144974493;\n\t}\n\t 40% {\n\t\t opacity: 587001174;\n\t}\n\t 45% {\n\t\t opacity: 54491341;\n\t}\n\t 50% {\n\t\t opacity: 635106317;\n\t}\n\t 55% {\n\t\t opacity: 2041637725;\n\t}\n\t 60% {\n\t\t opacity: 1343043108;\n\t}\n\t 65% {\n\t\t opacity: 1763081334;\n\t}\n\t 70% {\n\t\t opacity: 743479678;\n\t}\n\t 75% {\n\t\t opacity: 925080358;\n\t}\n\t 80% {\n\t\t opacity: 1252565817;\n\t}\n\t 85% {\n\t\t opacity: 1136094834;\n\t}\n\t 90% {\n\t\t opacity: 1783802481;\n\t}\n\t 95% {\n\t\t opacity: 1929022493;\n\t}\n\t 100% {\n\t\t opacity: 672688511;\n\t}\n`;\n","import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { XTerm } from 'xterm-for-react';\nimport { FitAddon } from 'xterm-addon-fit';\n\nimport chalk from 'chalk';\n\nimport { flicker, blink } from './keyframes';\n\nconst Wrapper = styled.div`\n\tmin-height: 100vh;\n\tmin-width: 30rem;\n\tpadding: 3rem;\n\tdisplay: flex;\n\tbackground: black;\n\n\t&::before {\n\t\tcontent: ' ';\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\tbackground: linear-gradient(\n\t\t\t\trgba(18, 16, 16, 0) 50%,\n\t\t\t\trgba(0, 0, 0, 0.25) 50%\n\t\t\t),\n\t\t\tlinear-gradient(\n\t\t\t\t90deg,\n\t\t\t\trgba(255, 0, 0, 0.06),\n\t\t\t\trgba(0, 255, 0, 0.02),\n\t\t\t\trgba(0, 0, 255, 0.06)\n\t\t\t);\n\t\tz-index: 2;\n\t\tbackground-size: 100% 2px, 3px 100%;\n\t\tpointer-events: none;\n\t}\n\n\t&:after {\n\t\tcontent: ' ';\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\tbackground: rgba(18, 16, 16, 0.1);\n\t\topacity: 0;\n\t\tz-index: 2;\n\t\tpointer-events: none;\n\t\tanimation-name: ${flicker};\n\t\tanimation-duration: 0.15s;\n\t\tanimation-iteration-count: infinite;\n\t}\n\n\t.scrollbar::-webkit-scrollbar {\n\t\tbackground-color: #fff;\n\t\twidth: 16px;\n\t}\n\n\t> div {\n\t\tflex: 1;\n\t}\n\n\t.xterm-rows {\n\t\tfilter: drop-shadow(rgba(34, 255, 143, 1) 0px 0px 3px);\n\t}\n\n\t.xterm-viewport {\n\t\t&::-webkit-scrollbar {\n\t\t\tbackground-color: transparent;\n\t\t\twidth: 10px;\n\t\t}\n\n\t\t&::-webkit-scrollbar-track {\n\t\t\tbackground-color: transparent;\n\t\t}\n\n\t\t&::-webkit-scrollbar-thumb {\n\t\t\tbackground-color: white;\n\t\t\tborder-radius: 10px;\n\t\t}\n\t\t&::-webkit-scrollbar-thumb:hover {\n\t\t\tbackground-color: #a0a0a5;\n\t\t\tborder: 4px solid #f4f4f4;\n\t\t}\n\n\t\t&::-webkit-scrollbar-button {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t.xterm-cursor-bar {\n\t\tanimation-name: ${blink};\n\t\tanimation-duration: 1s;\n\t\tanimation-iteration-count: infinite;\n\t\tanimation-timing-function: step-end;\n\t}\n`;\n\nconst wait = async (ms: number) =>\n\tnew Promise(resolve => {\n\t\tsetTimeout(resolve, ms);\n\t});\n\nexport const Terminal = () => {\n\tconst xtermRef = React.useRef<XTerm>(null);\n\tconst fitAddon = React.useRef(new FitAddon());\n\n\tconst [, setValue] = useState('');\n\tconst [disableInput] = useState(true);\n\n\tconst writeWithPause = async (text: string, time: number) => {\n\t\tfor (const c of text) {\n\t\t\txtermRef.current?.terminal.write(c);\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\tawait wait(time);\n\t\t}\n\t};\n\n\t// const clear = () => xtermRef.current?.terminal.write('\\x1bc');\n\n\tuseEffect(() => {\n\t\tconst handleResize = () => fitAddon.current.fit();\n\t\twindow.addEventListener('resize', handleResize);\n\t\tconsole.clear();\n\t\treturn () => window.removeEventListener('resize', handleResize);\n\t});\n\n\tuseEffect(() => {\n\t\tconst xterm = xtermRef.current;\n\t\tfitAddon.current.fit();\n\n\t\tconst intro = async () => {\n\t\t\tawait writeWithPause(\n\t\t\t\tchalk.hex('#00ff09')(\"You're finally awake...\"),\n\t\t\t\t200,\n\t\t\t);\n\t\t\tawait wait(2000);\n\t\t\txterm?.terminal.writeln('');\n\t\t\tawait writeWithPause(\n\t\t\t\tchalk.hex('#00ff09')(\n\t\t\t\t\t'You might think you have come far, but this is only the beginning...',\n\t\t\t\t),\n\t\t\t\t50,\n\t\t\t);\n\n\t\t\tawait writeWithPause(\n\t\t\t\tchalk.hex('#00ff09')(\n\t\t\t\t\t`We want the best,  \nnot the followers.  Thus, the first few there will receive\nthe prize.`,\n\t\t\t\t),\n\t\t\t\t50,\n\t\t\t);\n\n\t\t\tawait writeWithPause(\n\t\t\t\tchalk.hex('#00ff09')(\n\t\t\t\t\t// eslint-disable-next-line no-irregular-whitespace\n\t\t\t\t\t`Yo​u​​ w​ill ​se​​​e m​e, w​here​ th​e​re i​​s​ ​​no d​arkn​ess`,\n\t\t\t\t),\n\t\t\t\t50,\n\t\t\t);\n\t\t};\n\n\t\tif (xterm) {\n\t\t\tvoid intro();\n\t\t}\n\n\t\treturn () => {\n\t\t\txterm?.terminal.reset();\n\t\t\tsetValue('');\n\t\t};\n\t}, [xtermRef]);\n\n\tconst onData = (data: string) => {\n\t\tif (disableInput) return;\n\n\t\tconsole.log(data.charCodeAt(0));\n\t\tif (data.charCodeAt(0) === 13) {\n\t\t\treturn;\n\t\t}\n\n\t\txtermRef?.current?.terminal.write(data);\n\n\t\tsetValue(v => v + data);\n\t};\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<XTerm\n\t\t\t\taddons={[fitAddon.current]}\n\t\t\t\toptions={{\n\t\t\t\t\tlineHeight: 1,\n\t\t\t\t\tcursorStyle: 'bar',\n\t\t\t\t\trendererType: 'dom',\n\t\t\t\t\tfontFamily: 'Roboto Mono',\n\t\t\t\t\twindowOptions: {\n\t\t\t\t\t\tfullscreenWin: true,\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t\tref={xtermRef}\n\t\t\t\tonData={onData}\n\t\t\t/>\n\t\t</Wrapper>\n\t);\n};\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.FitAddon=t():e.FitAddon=t()}(self,(function(){return(()=>{\"use strict\";var e={};return(()=>{var t=e;Object.defineProperty(t,\"__esModule\",{value:!0}),t.FitAddon=void 0,t.FitAddon=class{constructor(){}activate(e){this._terminal=e}dispose(){}fit(){const e=this.proposeDimensions();if(!e||!this._terminal||isNaN(e.cols)||isNaN(e.rows))return;const t=this._terminal._core;this._terminal.rows===e.rows&&this._terminal.cols===e.cols||(t._renderService.clear(),this._terminal.resize(e.cols,e.rows))}proposeDimensions(){if(!this._terminal)return;if(!this._terminal.element||!this._terminal.element.parentElement)return;const e=this._terminal._core,t=e._renderService.dimensions;if(0===t.css.cell.width||0===t.css.cell.height)return;const r=0===this._terminal.options.scrollback?0:e.viewport.scrollBarWidth,i=window.getComputedStyle(this._terminal.element.parentElement),o=parseInt(i.getPropertyValue(\"height\")),s=Math.max(0,parseInt(i.getPropertyValue(\"width\"))),n=window.getComputedStyle(this._terminal.element),l=o-(parseInt(n.getPropertyValue(\"padding-top\"))+parseInt(n.getPropertyValue(\"padding-bottom\"))),a=s-(parseInt(n.getPropertyValue(\"padding-right\"))+parseInt(n.getPropertyValue(\"padding-left\")))-r;return{cols:Math.max(2,Math.floor(a/t.css.cell.width)),rows:Math.max(1,Math.floor(l/t.css.cell.height))}}}})(),e})()}));\n//# sourceMappingURL=xterm-addon-fit.js.map"],"names":["wrapAnsi16","offset","code","wrapAnsi256","wrapAnsi16m","red","green","blue","styles","modifier","reset","bold","dim","italic","underline","overline","inverse","hidden","strikethrough","color","black","yellow","magenta","cyan","white","blackBright","gray","grey","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgColor","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgGray","bgGrey","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","Object","keys","foregroundColorNames","backgroundColorNames","ansiStyles","assembleStyles","codes","Map","groupName","group","entries","styleName","style","open","close","set","defineProperty","value","enumerable","ansi","ansi256","ansi16m","defineProperties","rgbToAnsi256","Math","round","hexToRgb","hex","matches","exec","toString","colorString","length","map","character","join","integer","Number","parseInt","hexToAnsi256","ansi256ToAnsi","remainder","floor","max","result","rgbToAnsi","hexToAnsi","level","navigator","userAgentData","brand","brands","find","version","test","userAgent","colorSupport","hasBasic","has256","has16m","stdout","stdoutColor","stderr","stderrColor","GENERATOR","Symbol","STYLER","IS_EMPTY","levelMapping","source_styles","create","applyOptions","object","options","isInteger","colorLevel","undefined","chalkFactory","chalk","strings","setPrototypeOf","createChalk","prototype","Function","get","builder","createBuilder","createStyler","visible","getModelAnsi","model","type","arguments_","ansi_styles","styler","bgModel","toUpperCase","slice","proto","parent","openAll","closeAll","self","_styler","_isEmpty","applyStyle","string","includes","stringReplaceAll","substring","replacer","index","indexOf","substringLength","endIndex","returnValue","lfIndex","stringEncaseCRLFWithFirstIndex","prefix","postfix","gotCR","blink","keyframes","flicker","Wrapper","styled","wait","ms","Promise","resolve","setTimeout","Terminal","xtermRef","React","fitAddon","FitAddon","setValue","useState","disableInput","writeWithPause","text","time","c","current","terminal","write","useEffect","handleResize","fit","window","addEventListener","console","clear","removeEventListener","xterm","intro","writeln","emotion_react_jsx_runtime_browser_esm","tZ","XTerm","addons","lineHeight","cursorStyle","rendererType","fontFamily","windowOptions","fullscreenWin","ref","onData","log","data","charCodeAt","v","e","module","exports","t","constructor","activate","_terminal","dispose","proposeDimensions","isNaN","cols","rows","_core","_renderService","resize","element","parentElement","dimensions","css","cell","width","height","r","scrollback","viewport","scrollBarWidth","i","getComputedStyle","o","getPropertyValue","s","n","l","a"],"sourceRoot":""}