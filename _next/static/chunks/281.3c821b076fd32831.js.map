{"version":3,"file":"static/chunks/281.3c821b076fd32831.js","mappings":"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","sources":["webpack://_N_E/./node_modules/.pnpm/chalk@5.2.0/node_modules/chalk/source/vendor/ansi-styles/index.js","webpack://_N_E/./node_modules/.pnpm/chalk@5.2.0/node_modules/chalk/source/vendor/supports-color/browser.js","webpack://_N_E/./node_modules/.pnpm/chalk@5.2.0/node_modules/chalk/source/utilities.js","webpack://_N_E/./node_modules/.pnpm/chalk@5.2.0/node_modules/chalk/source/index.js","webpack://_N_E/./components/riddle/keyframes.ts","webpack://_N_E/./components/riddle/terminal.tsx","webpack://_N_E/./node_modules/.pnpm/xterm-addon-fit@0.6.0_xterm@5.0.0/node_modules/xterm-addon-fit/lib/xterm-addon-fit.js","webpack://_N_E/<anon>"],"sourcesContent":["const ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi16 = (offset = 0) => code => `\\u001B[${code + offset}m`;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nconst styles = {\n\tmodifier: {\n\t\treset: [0, 0],\n\t\t// 21 isn't widely supported and 22 does the same thing\n\t\tbold: [1, 22],\n\t\tdim: [2, 22],\n\t\titalic: [3, 23],\n\t\tunderline: [4, 24],\n\t\toverline: [53, 55],\n\t\tinverse: [7, 27],\n\t\thidden: [8, 28],\n\t\tstrikethrough: [9, 29],\n\t},\n\tcolor: {\n\t\tblack: [30, 39],\n\t\tred: [31, 39],\n\t\tgreen: [32, 39],\n\t\tyellow: [33, 39],\n\t\tblue: [34, 39],\n\t\tmagenta: [35, 39],\n\t\tcyan: [36, 39],\n\t\twhite: [37, 39],\n\n\t\t// Bright color\n\t\tblackBright: [90, 39],\n\t\tgray: [90, 39], // Alias of `blackBright`\n\t\tgrey: [90, 39], // Alias of `blackBright`\n\t\tredBright: [91, 39],\n\t\tgreenBright: [92, 39],\n\t\tyellowBright: [93, 39],\n\t\tblueBright: [94, 39],\n\t\tmagentaBright: [95, 39],\n\t\tcyanBright: [96, 39],\n\t\twhiteBright: [97, 39],\n\t},\n\tbgColor: {\n\t\tbgBlack: [40, 49],\n\t\tbgRed: [41, 49],\n\t\tbgGreen: [42, 49],\n\t\tbgYellow: [43, 49],\n\t\tbgBlue: [44, 49],\n\t\tbgMagenta: [45, 49],\n\t\tbgCyan: [46, 49],\n\t\tbgWhite: [47, 49],\n\n\t\t// Bright color\n\t\tbgBlackBright: [100, 49],\n\t\tbgGray: [100, 49], // Alias of `bgBlackBright`\n\t\tbgGrey: [100, 49], // Alias of `bgBlackBright`\n\t\tbgRedBright: [101, 49],\n\t\tbgGreenBright: [102, 49],\n\t\tbgYellowBright: [103, 49],\n\t\tbgBlueBright: [104, 49],\n\t\tbgMagentaBright: [105, 49],\n\t\tbgCyanBright: [106, 49],\n\t\tbgWhiteBright: [107, 49],\n\t},\n};\n\nexport const modifierNames = Object.keys(styles.modifier);\nexport const foregroundColorNames = Object.keys(styles.color);\nexport const backgroundColorNames = Object.keys(styles.bgColor);\nexport const colorNames = [...foregroundColorNames, ...backgroundColorNames];\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`,\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false,\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false,\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = wrapAnsi16();\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi = wrapAnsi16(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue(red, green, blue) {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16\n\t\t\t\t\t+ (36 * Math.round(red / 255 * 5))\n\t\t\t\t\t+ (6 * Math.round(green / 255 * 5))\n\t\t\t\t\t+ Math.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue(hex) {\n\t\t\t\tconst matches = /[a-f\\d]{6}|[a-f\\d]{3}/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet [colorString] = matches;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = [...colorString].map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t/* eslint-disable no-bitwise */\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF,\n\t\t\t\t\t/* eslint-enable no-bitwise */\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t\tansi256ToAnsi: {\n\t\t\tvalue(code) {\n\t\t\t\tif (code < 8) {\n\t\t\t\t\treturn 30 + code;\n\t\t\t\t}\n\n\t\t\t\tif (code < 16) {\n\t\t\t\t\treturn 90 + (code - 8);\n\t\t\t\t}\n\n\t\t\t\tlet red;\n\t\t\t\tlet green;\n\t\t\t\tlet blue;\n\n\t\t\t\tif (code >= 232) {\n\t\t\t\t\tred = (((code - 232) * 10) + 8) / 255;\n\t\t\t\t\tgreen = red;\n\t\t\t\t\tblue = red;\n\t\t\t\t} else {\n\t\t\t\t\tcode -= 16;\n\n\t\t\t\t\tconst remainder = code % 36;\n\n\t\t\t\t\tred = Math.floor(code / 36) / 5;\n\t\t\t\t\tgreen = Math.floor(remainder / 6) / 5;\n\t\t\t\t\tblue = (remainder % 6) / 5;\n\t\t\t\t}\n\n\t\t\t\tconst value = Math.max(red, green, blue) * 2;\n\n\t\t\t\tif (value === 0) {\n\t\t\t\t\treturn 30;\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tlet result = 30 + ((Math.round(blue) << 2) | (Math.round(green) << 1) | Math.round(red));\n\n\t\t\t\tif (value === 2) {\n\t\t\t\t\tresult += 60;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\trgbToAnsi: {\n\t\t\tvalue: (red, green, blue) => styles.ansi256ToAnsi(styles.rgbToAnsi256(red, green, blue)),\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi: {\n\t\t\tvalue: hex => styles.ansi256ToAnsi(styles.hexToAnsi256(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t});\n\n\treturn styles;\n}\n\nconst ansiStyles = assembleStyles();\n\nexport default ansiStyles;\n","/* eslint-env browser */\n\nconst level = (() => {\n\tif (navigator.userAgentData) {\n\t\tconst brand = navigator.userAgentData.brands.find(({brand}) => brand === 'Chromium');\n\t\tif (brand && brand.version > 93) {\n\t\t\treturn 3;\n\t\t}\n\t}\n\n\tif (/\\b(Chrome|Chromium)\\//.test(navigator.userAgent)) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n})();\n\nconst colorSupport = level !== 0 && {\n\tlevel,\n\thasBasic: true,\n\thas256: level >= 2,\n\thas16m: level >= 3,\n};\n\nconst supportsColor = {\n\tstdout: colorSupport,\n\tstderr: colorSupport,\n};\n\nexport default supportsColor;\n","// TODO: When targeting Node.js 16, use `String.prototype.replaceAll`.\nexport function stringReplaceAll(string, substring, replacer) {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.slice(endIndex, index) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n\nexport function stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.slice(endIndex, (gotCR ? index - 1 : index)) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n","import ansiStyles from '#ansi-styles';\nimport supportsColor from '#supports-color';\nimport { // eslint-disable-line import/order\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex,\n} from './utilities.js';\n\nconst {stdout: stdoutColor, stderr: stderrColor} = supportsColor;\n\nconst GENERATOR = Symbol('GENERATOR');\nconst STYLER = Symbol('STYLER');\nconst IS_EMPTY = Symbol('IS_EMPTY');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m',\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nexport class Chalk {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = (...strings) => strings.join(' ');\n\tapplyOptions(chalk, options);\n\n\tObject.setPrototypeOf(chalk, createChalk.prototype);\n\n\treturn chalk;\n};\n\nfunction createChalk(options) {\n\treturn chalkFactory(options);\n}\n\nObject.setPrototypeOf(createChalk.prototype, Function.prototype);\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this[STYLER]), this[IS_EMPTY]);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t},\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this[STYLER], true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t},\n};\n\nconst getModelAnsi = (model, level, type, ...arguments_) => {\n\tif (model === 'rgb') {\n\t\tif (level === 'ansi16m') {\n\t\t\treturn ansiStyles[type].ansi16m(...arguments_);\n\t\t}\n\n\t\tif (level === 'ansi256') {\n\t\t\treturn ansiStyles[type].ansi256(ansiStyles.rgbToAnsi256(...arguments_));\n\t\t}\n\n\t\treturn ansiStyles[type].ansi(ansiStyles.rgbToAnsi(...arguments_));\n\t}\n\n\tif (model === 'hex') {\n\t\treturn getModelAnsi('rgb', level, type, ...ansiStyles.hexToRgb(...arguments_));\n\t}\n\n\treturn ansiStyles[type][model](...arguments_);\n};\n\nconst usedModels = ['rgb', 'hex', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'color', ...arguments_), ansiStyles.color.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'bgColor', ...arguments_), ansiStyles.bgColor.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this[GENERATOR].level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis[GENERATOR].level = level;\n\t\t},\n\t},\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent,\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\t// Single argument is hot path, implicit coercion is faster than anything\n\t// eslint-disable-next-line no-implicit-coercion\n\tconst builder = (...arguments_) => applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder[GENERATOR] = self;\n\tbuilder[STYLER] = _styler;\n\tbuilder[IS_EMPTY] = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self[IS_EMPTY] ? '' : string;\n\t}\n\n\tlet styler = self[STYLER];\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.includes('\\u001B')) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nObject.defineProperties(createChalk.prototype, styles);\n\nconst chalk = createChalk();\nexport const chalkStderr = createChalk({level: stderrColor ? stderrColor.level : 0});\n\nexport {\n\tmodifierNames,\n\tforegroundColorNames,\n\tbackgroundColorNames,\n\tcolorNames,\n\n\t// TODO: Remove these aliases in the next major version\n\tmodifierNames as modifiers,\n\tforegroundColorNames as foregroundColors,\n\tbackgroundColorNames as backgroundColors,\n\tcolorNames as colors,\n} from './vendor/ansi-styles/index.js';\n\nexport {\n\tstdoutColor as supportsColor,\n\tstderrColor as supportsColorStderr,\n};\n\nexport default chalk;\n","import { keyframes } from '@emotion/react';\n\nexport const blink = keyframes`\n\t\tfrom,\n\t\tto {\n\t\t\topacity: 0;\n\t\t}\n\t\t50% {\n\t\t\topacity: 1;\n\t\t}\n`;\n\nexport const flicker = keyframes`\n\t 0% {\n\t\t opacity: 1401759986;\n\t}\n\t 5% {\n\t\t opacity: 1310178007;\n\t}\n\t 10% {\n\t\t opacity: 623983780;\n\t}\n\t 15% {\n\t\t opacity: 789961012;\n\t}\n\t 20% {\n\t\t opacity: 566310986;\n\t}\n\t 25% {\n\t\t opacity: 134590213;\n\t}\n\t 30% {\n\t\t opacity: 1229133229;\n\t}\n\t 35% {\n\t\t opacity: 2144974493;\n\t}\n\t 40% {\n\t\t opacity: 587001174;\n\t}\n\t 45% {\n\t\t opacity: 54491341;\n\t}\n\t 50% {\n\t\t opacity: 635106317;\n\t}\n\t 55% {\n\t\t opacity: 2041637725;\n\t}\n\t 60% {\n\t\t opacity: 1343043108;\n\t}\n\t 65% {\n\t\t opacity: 1763081334;\n\t}\n\t 70% {\n\t\t opacity: 743479678;\n\t}\n\t 75% {\n\t\t opacity: 925080358;\n\t}\n\t 80% {\n\t\t opacity: 1252565817;\n\t}\n\t 85% {\n\t\t opacity: 1136094834;\n\t}\n\t 90% {\n\t\t opacity: 1783802481;\n\t}\n\t 95% {\n\t\t opacity: 1929022493;\n\t}\n\t 100% {\n\t\t opacity: 672688511;\n\t}\n`;\n","import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { XTerm } from 'xterm-for-react';\nimport { FitAddon } from 'xterm-addon-fit';\n\nimport chalk from 'chalk';\n\nimport { flicker, blink } from './keyframes';\n\nconst Wrapper = styled.div`\n\tmin-height: 100vh;\n\tmin-width: 30rem;\n\tpadding: 3rem;\n\tdisplay: flex;\n\tbackground: black;\n\n\t&::before {\n\t\tcontent: ' ';\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\tbackground: linear-gradient(\n\t\t\t\trgba(18, 16, 16, 0) 50%,\n\t\t\t\trgba(0, 0, 0, 0.25) 50%\n\t\t\t),\n\t\t\tlinear-gradient(\n\t\t\t\t90deg,\n\t\t\t\trgba(255, 0, 0, 0.06),\n\t\t\t\trgba(0, 255, 0, 0.02),\n\t\t\t\trgba(0, 0, 255, 0.06)\n\t\t\t);\n\t\tz-index: 2;\n\t\tbackground-size: 100% 2px, 3px 100%;\n\t\tpointer-events: none;\n\t}\n\n\t&:after {\n\t\tcontent: ' ';\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\tbackground: rgba(18, 16, 16, 0.1);\n\t\topacity: 0;\n\t\tz-index: 2;\n\t\tpointer-events: none;\n\t\tanimation-name: ${flicker};\n\t\tanimation-duration: 0.15s;\n\t\tanimation-iteration-count: infinite;\n\t}\n\n\t.scrollbar::-webkit-scrollbar {\n\t\tbackground-color: #fff;\n\t\twidth: 16px;\n\t}\n\n\t> div {\n\t\tflex: 1;\n\t}\n\n\t.xterm-rows {\n\t\tfilter: drop-shadow(rgba(34, 255, 143, 1) 0px 0px 3px);\n\t}\n\n\t.xterm-viewport {\n\t\t&::-webkit-scrollbar {\n\t\t\tbackground-color: transparent;\n\t\t\twidth: 10px;\n\t\t}\n\n\t\t&::-webkit-scrollbar-track {\n\t\t\tbackground-color: transparent;\n\t\t}\n\n\t\t&::-webkit-scrollbar-thumb {\n\t\t\tbackground-color: white;\n\t\t\tborder-radius: 10px;\n\t\t}\n\t\t&::-webkit-scrollbar-thumb:hover {\n\t\t\tbackground-color: #a0a0a5;\n\t\t\tborder: 4px solid #f4f4f4;\n\t\t}\n\n\t\t&::-webkit-scrollbar-button {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t.xterm-cursor-bar {\n\t\tanimation-name: ${blink};\n\t\tanimation-duration: 1s;\n\t\tanimation-iteration-count: infinite;\n\t\tanimation-timing-function: step-end;\n\t}\n`;\n\nconst wait = async (ms: number) =>\n\tnew Promise(resolve => {\n\t\tsetTimeout(resolve, ms);\n\t});\n\nexport const Terminal = () => {\n\tconst xtermRef = React.useRef<XTerm>(null);\n\tconst fitAddon = React.useRef(new FitAddon());\n\n\tconst [, setValue] = useState('');\n\tconst [disableInput] = useState(true);\n\n\tconst writeWithPause = async (text: string, time: number) => {\n\t\tfor (const c of text) {\n\t\t\txtermRef.current?.terminal.write(c);\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\tawait wait(time);\n\t\t}\n\t};\n\n\t// const clear = () => xtermRef.current?.terminal.write('\\x1bc');\n\n\tuseEffect(() => {\n\t\tconst handleResize = () => fitAddon.current.fit();\n\t\twindow.addEventListener('resize', handleResize);\n\t\tconsole.clear();\n\t\treturn () => window.removeEventListener('resize', handleResize);\n\t});\n\n\tuseEffect(() => {\n\t\tconst xterm = xtermRef.current;\n\t\tfitAddon.current.fit();\n\n\t\tconst intro = async () => {\n\t\t\tawait writeWithPause(\n\t\t\t\tchalk.hex('#00ff09')(\"You're finally awake...\"),\n\t\t\t\t200,\n\t\t\t);\n\t\t\tawait wait(2000);\n\t\t\txterm?.terminal.writeln('');\n\t\t\tawait writeWithPause(\n\t\t\t\tchalk.hex('#00ff09')(\n\t\t\t\t\t'You might think you have come far, but this is only the beginning...',\n\t\t\t\t),\n\t\t\t\t50,\n\t\t\t);\n\n\t\t\tawait writeWithPause(\n\t\t\t\tchalk.hex('#00ff09')(\n\t\t\t\t\t`We want the best,  \nnot the followers.  Thus, the first few there will receive\nthe prize.`,\n\t\t\t\t),\n\t\t\t\t50,\n\t\t\t);\n\n\t\t\tawait writeWithPause(\n\t\t\t\tchalk.hex('#00ff09')(\n\t\t\t\t\t// eslint-disable-next-line no-irregular-whitespace\n\t\t\t\t\t`Yo​u​​ w​ill ​se​​​e m​e, w​here​ th​e​re i​​s​ ​​no d​arkn​ess`,\n\t\t\t\t),\n\t\t\t\t50,\n\t\t\t);\n\t\t};\n\n\t\tif (xterm) {\n\t\t\tvoid intro();\n\t\t}\n\n\t\treturn () => {\n\t\t\txterm?.terminal.reset();\n\t\t\tsetValue('');\n\t\t};\n\t}, [xtermRef]);\n\n\tconst onData = (data: string) => {\n\t\tif (disableInput) return;\n\n\t\tconsole.log(data.charCodeAt(0));\n\t\tif (data.charCodeAt(0) === 13) {\n\t\t\treturn;\n\t\t}\n\n\t\txtermRef?.current?.terminal.write(data);\n\n\t\tsetValue(v => v + data);\n\t};\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<XTerm\n\t\t\t\taddons={[fitAddon.current]}\n\t\t\t\toptions={{\n\t\t\t\t\tlineHeight: 1,\n\t\t\t\t\tcursorStyle: 'bar',\n\t\t\t\t\trendererType: 'dom',\n\t\t\t\t\tfontFamily: 'Roboto Mono',\n\t\t\t\t\twindowOptions: {\n\t\t\t\t\t\tfullscreenWin: true,\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t\tref={xtermRef}\n\t\t\t\tonData={onData}\n\t\t\t/>\n\t\t</Wrapper>\n\t);\n};\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.FitAddon=t():e.FitAddon=t()}(self,(function(){return(()=>{\"use strict\";var e={};return(()=>{var t=e;Object.defineProperty(t,\"__esModule\",{value:!0}),t.FitAddon=void 0,t.FitAddon=class{constructor(){}activate(e){this._terminal=e}dispose(){}fit(){const e=this.proposeDimensions();if(!e||!this._terminal||isNaN(e.cols)||isNaN(e.rows))return;const t=this._terminal._core;this._terminal.rows===e.rows&&this._terminal.cols===e.cols||(t._renderService.clear(),this._terminal.resize(e.cols,e.rows))}proposeDimensions(){if(!this._terminal)return;if(!this._terminal.element||!this._terminal.element.parentElement)return;const e=this._terminal._core;if(0===e._renderService.dimensions.actualCellWidth||0===e._renderService.dimensions.actualCellHeight)return;const t=0===this._terminal.options.scrollback?0:e.viewport.scrollBarWidth,r=window.getComputedStyle(this._terminal.element.parentElement),i=parseInt(r.getPropertyValue(\"height\")),n=Math.max(0,parseInt(r.getPropertyValue(\"width\"))),o=window.getComputedStyle(this._terminal.element),s=i-(parseInt(o.getPropertyValue(\"padding-top\"))+parseInt(o.getPropertyValue(\"padding-bottom\"))),a=n-(parseInt(o.getPropertyValue(\"padding-right\"))+parseInt(o.getPropertyValue(\"padding-left\")))-t;return{cols:Math.max(2,Math.floor(a/e._renderService.dimensions.actualCellWidth)),rows:Math.max(1,Math.floor(s/e._renderService.dimensions.actualCellHeight))}}}})(),e})()}));\n//# sourceMappingURL=xterm-addon-fit.js.map","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[281],{\n\n/***/ 5281:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"Terminal\": function() { return /* binding */ Terminal; }\n});\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/@emotion+react@11.10.5_xl5my4wapvq2ctl7qwehtbgorq/node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\nvar emotion_react_jsx_runtime_browser_esm = __webpack_require__(9857);\n// EXTERNAL MODULE: ./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js\nvar react = __webpack_require__(959);\n// EXTERNAL MODULE: ./node_modules/.pnpm/@emotion+styled@11.10.5_3djhvnr4jirfvebjqpipo7gthy/node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js + 2 modules\nvar emotion_styled_browser_esm = __webpack_require__(1773);\n// EXTERNAL MODULE: ./node_modules/.pnpm/xterm-for-react@1.0.4_biqbaboplfbrettd7655fr4n2y/node_modules/xterm-for-react/dist/bundle.js\nvar bundle = __webpack_require__(8126);\n// EXTERNAL MODULE: ./node_modules/.pnpm/xterm-addon-fit@0.6.0_xterm@5.0.0/node_modules/xterm-addon-fit/lib/xterm-addon-fit.js\nvar xterm_addon_fit = __webpack_require__(7642);\n;// CONCATENATED MODULE: ./node_modules/.pnpm/chalk@5.2.0/node_modules/chalk/source/vendor/ansi-styles/index.js\nconst ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi16 = (offset = 0) => code => `\\u001B[${code + offset}m`;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nconst styles = {\n\tmodifier: {\n\t\treset: [0, 0],\n\t\t// 21 isn't widely supported and 22 does the same thing\n\t\tbold: [1, 22],\n\t\tdim: [2, 22],\n\t\titalic: [3, 23],\n\t\tunderline: [4, 24],\n\t\toverline: [53, 55],\n\t\tinverse: [7, 27],\n\t\thidden: [8, 28],\n\t\tstrikethrough: [9, 29],\n\t},\n\tcolor: {\n\t\tblack: [30, 39],\n\t\tred: [31, 39],\n\t\tgreen: [32, 39],\n\t\tyellow: [33, 39],\n\t\tblue: [34, 39],\n\t\tmagenta: [35, 39],\n\t\tcyan: [36, 39],\n\t\twhite: [37, 39],\n\n\t\t// Bright color\n\t\tblackBright: [90, 39],\n\t\tgray: [90, 39], // Alias of `blackBright`\n\t\tgrey: [90, 39], // Alias of `blackBright`\n\t\tredBright: [91, 39],\n\t\tgreenBright: [92, 39],\n\t\tyellowBright: [93, 39],\n\t\tblueBright: [94, 39],\n\t\tmagentaBright: [95, 39],\n\t\tcyanBright: [96, 39],\n\t\twhiteBright: [97, 39],\n\t},\n\tbgColor: {\n\t\tbgBlack: [40, 49],\n\t\tbgRed: [41, 49],\n\t\tbgGreen: [42, 49],\n\t\tbgYellow: [43, 49],\n\t\tbgBlue: [44, 49],\n\t\tbgMagenta: [45, 49],\n\t\tbgCyan: [46, 49],\n\t\tbgWhite: [47, 49],\n\n\t\t// Bright color\n\t\tbgBlackBright: [100, 49],\n\t\tbgGray: [100, 49], // Alias of `bgBlackBright`\n\t\tbgGrey: [100, 49], // Alias of `bgBlackBright`\n\t\tbgRedBright: [101, 49],\n\t\tbgGreenBright: [102, 49],\n\t\tbgYellowBright: [103, 49],\n\t\tbgBlueBright: [104, 49],\n\t\tbgMagentaBright: [105, 49],\n\t\tbgCyanBright: [106, 49],\n\t\tbgWhiteBright: [107, 49],\n\t},\n};\n\nconst modifierNames = Object.keys(styles.modifier);\nconst foregroundColorNames = Object.keys(styles.color);\nconst backgroundColorNames = Object.keys(styles.bgColor);\nconst colorNames = [...foregroundColorNames, ...backgroundColorNames];\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`,\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false,\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false,\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = wrapAnsi16();\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi = wrapAnsi16(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue(red, green, blue) {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16\n\t\t\t\t\t+ (36 * Math.round(red / 255 * 5))\n\t\t\t\t\t+ (6 * Math.round(green / 255 * 5))\n\t\t\t\t\t+ Math.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue(hex) {\n\t\t\t\tconst matches = /[a-f\\d]{6}|[a-f\\d]{3}/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet [colorString] = matches;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = [...colorString].map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t/* eslint-disable no-bitwise */\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF,\n\t\t\t\t\t/* eslint-enable no-bitwise */\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t\tansi256ToAnsi: {\n\t\t\tvalue(code) {\n\t\t\t\tif (code < 8) {\n\t\t\t\t\treturn 30 + code;\n\t\t\t\t}\n\n\t\t\t\tif (code < 16) {\n\t\t\t\t\treturn 90 + (code - 8);\n\t\t\t\t}\n\n\t\t\t\tlet red;\n\t\t\t\tlet green;\n\t\t\t\tlet blue;\n\n\t\t\t\tif (code >= 232) {\n\t\t\t\t\tred = (((code - 232) * 10) + 8) / 255;\n\t\t\t\t\tgreen = red;\n\t\t\t\t\tblue = red;\n\t\t\t\t} else {\n\t\t\t\t\tcode -= 16;\n\n\t\t\t\t\tconst remainder = code % 36;\n\n\t\t\t\t\tred = Math.floor(code / 36) / 5;\n\t\t\t\t\tgreen = Math.floor(remainder / 6) / 5;\n\t\t\t\t\tblue = (remainder % 6) / 5;\n\t\t\t\t}\n\n\t\t\t\tconst value = Math.max(red, green, blue) * 2;\n\n\t\t\t\tif (value === 0) {\n\t\t\t\t\treturn 30;\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t\tlet result = 30 + ((Math.round(blue) << 2) | (Math.round(green) << 1) | Math.round(red));\n\n\t\t\t\tif (value === 2) {\n\t\t\t\t\tresult += 60;\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t},\n\t\trgbToAnsi: {\n\t\t\tvalue: (red, green, blue) => styles.ansi256ToAnsi(styles.rgbToAnsi256(red, green, blue)),\n\t\t\tenumerable: false,\n\t\t},\n\t\thexToAnsi: {\n\t\t\tvalue: hex => styles.ansi256ToAnsi(styles.hexToAnsi256(hex)),\n\t\t\tenumerable: false,\n\t\t},\n\t});\n\n\treturn styles;\n}\n\nconst ansiStyles = assembleStyles();\n\n/* harmony default export */ var ansi_styles = (ansiStyles);\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/chalk@5.2.0/node_modules/chalk/source/vendor/supports-color/browser.js\n/* eslint-env browser */\n\nconst level = (() => {\n\tif (navigator.userAgentData) {\n\t\tconst brand = navigator.userAgentData.brands.find(({brand}) => brand === 'Chromium');\n\t\tif (brand && brand.version > 93) {\n\t\t\treturn 3;\n\t\t}\n\t}\n\n\tif (/\\b(Chrome|Chromium)\\//.test(navigator.userAgent)) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n})();\n\nconst colorSupport = level !== 0 && {\n\tlevel,\n\thasBasic: true,\n\thas256: level >= 2,\n\thas16m: level >= 3,\n};\n\nconst supportsColor = {\n\tstdout: colorSupport,\n\tstderr: colorSupport,\n};\n\n/* harmony default export */ var browser = (supportsColor);\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/chalk@5.2.0/node_modules/chalk/source/utilities.js\n// TODO: When targeting Node.js 16, use `String.prototype.replaceAll`.\nfunction stringReplaceAll(string, substring, replacer) {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.slice(endIndex, index) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n\nfunction stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.slice(endIndex, (gotCR ? index - 1 : index)) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n\n;// CONCATENATED MODULE: ./node_modules/.pnpm/chalk@5.2.0/node_modules/chalk/source/index.js\n\n\n\n\nconst {stdout: stdoutColor, stderr: stderrColor} = browser;\n\nconst GENERATOR = Symbol('GENERATOR');\nconst STYLER = Symbol('STYLER');\nconst IS_EMPTY = Symbol('IS_EMPTY');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m',\n];\n\nconst source_styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass Chalk {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = (...strings) => strings.join(' ');\n\tapplyOptions(chalk, options);\n\n\tObject.setPrototypeOf(chalk, createChalk.prototype);\n\n\treturn chalk;\n};\n\nfunction createChalk(options) {\n\treturn chalkFactory(options);\n}\n\nObject.setPrototypeOf(createChalk.prototype, Function.prototype);\n\nfor (const [styleName, style] of Object.entries(ansi_styles)) {\n\tsource_styles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this[STYLER]), this[IS_EMPTY]);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t},\n\t};\n}\n\nsource_styles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this[STYLER], true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t},\n};\n\nconst getModelAnsi = (model, level, type, ...arguments_) => {\n\tif (model === 'rgb') {\n\t\tif (level === 'ansi16m') {\n\t\t\treturn ansi_styles[type].ansi16m(...arguments_);\n\t\t}\n\n\t\tif (level === 'ansi256') {\n\t\t\treturn ansi_styles[type].ansi256(ansi_styles.rgbToAnsi256(...arguments_));\n\t\t}\n\n\t\treturn ansi_styles[type].ansi(ansi_styles.rgbToAnsi(...arguments_));\n\t}\n\n\tif (model === 'hex') {\n\t\treturn getModelAnsi('rgb', level, type, ...ansi_styles.hexToRgb(...arguments_));\n\t}\n\n\treturn ansi_styles[type][model](...arguments_);\n};\n\nconst usedModels = ['rgb', 'hex', 'ansi256'];\n\nfor (const model of usedModels) {\n\tsource_styles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'color', ...arguments_), ansi_styles.color.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tsource_styles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(getModelAnsi(model, levelMapping[level], 'bgColor', ...arguments_), ansi_styles.bgColor.close, this[STYLER]);\n\t\t\t\treturn createBuilder(this, styler, this[IS_EMPTY]);\n\t\t\t};\n\t\t},\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...source_styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this[GENERATOR].level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis[GENERATOR].level = level;\n\t\t},\n\t},\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent,\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\t// Single argument is hot path, implicit coercion is faster than anything\n\t// eslint-disable-next-line no-implicit-coercion\n\tconst builder = (...arguments_) => applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder[GENERATOR] = self;\n\tbuilder[STYLER] = _styler;\n\tbuilder[IS_EMPTY] = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self[IS_EMPTY] ? '' : string;\n\t}\n\n\tlet styler = self[STYLER];\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.includes('\\u001B')) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nObject.defineProperties(createChalk.prototype, source_styles);\n\nconst chalk = createChalk();\nconst chalkStderr = createChalk({level: stderrColor ? stderrColor.level : 0});\n\n\n\n\n\n/* harmony default export */ var source = (chalk);\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/@emotion+react@11.10.5_xl5my4wapvq2ctl7qwehtbgorq/node_modules/@emotion/react/dist/emotion-react.browser.esm.js\nvar emotion_react_browser_esm = __webpack_require__(1456);\n;// CONCATENATED MODULE: ./components/riddle/keyframes.ts\n\nconst blink = /*#__PURE__*/ (0,emotion_react_browser_esm/* keyframes */.F4)(\"\t\tfrom,to{opacity:0;}50%{opacity:1;}\");\nconst flicker = /*#__PURE__*/ (0,emotion_react_browser_esm/* keyframes */.F4)(\"\t 0%{opacity:1401759986;}5%{opacity:1310178007;}10%{opacity:623983780;}15%{opacity:789961012;}20%{opacity:566310986;}25%{opacity:134590213;}30%{opacity:1229133229;}35%{opacity:2144974493;}40%{opacity:587001174;}45%{opacity:54491341;}50%{opacity:635106317;}55%{opacity:2041637725;}60%{opacity:1343043108;}65%{opacity:1763081334;}70%{opacity:743479678;}75%{opacity:925080358;}80%{opacity:1252565817;}85%{opacity:1136094834;}90%{opacity:1783802481;}95%{opacity:1929022493;}100%{opacity:672688511;}\");\n\n;// CONCATENATED MODULE: ./components/riddle/terminal.tsx\n\n\n\n\n\n\n\nconst Wrapper = /*#__PURE__*/ (0,emotion_styled_browser_esm/* default */.Z)(\"div\", {\n    target: \"e10e8rl60\"\n})(\"\tmin-height:100vh;min-width:30rem;padding:3rem;display:flex;background:black;&::before{content:' ';display:block;position:absolute;top:0;left:0;bottom:0;right:0;background:linear-gradient(\\n\t\t\t\trgba(18,16,16,0) 50%,rgba(0,0,0,0.25) 50%\\n\t\t\t),linear-gradient(\\n\t\t\t\t90deg,rgba(255,0,0,0.06),rgba(0,255,0,0.02),rgba(0,0,255,0.06)\\n\t\t\t);z-index:2;background-size:100% 2px,3px 100%;pointer-events:none;}&:after{content:' ';display:block;position:absolute;top:0;left:0;bottom:0;right:0;background:rgba(18,16,16,0.1);opacity:0;z-index:2;pointer-events:none;animation-name:\", flicker, \";animation-duration:0.15s;animation-iteration-count:infinite;}.scrollbar::-webkit-scrollbar{background-color:#fff;width:16px;}> div{flex:1;}.xterm-rows{filter:drop-shadow(rgba(34,255,143,1) 0px 0px 3px);}.xterm-viewport{&::-webkit-scrollbar{background-color:transparent;width:10px;}&::-webkit-scrollbar-track{background-color:transparent;}&::-webkit-scrollbar-thumb{background-color:white;border-radius:10px;}&::-webkit-scrollbar-thumb:hover{background-color:#a0a0a5;border:4px solid #f4f4f4;}&::-webkit-scrollbar-button{display:none;}}.xterm-cursor-bar{animation-name:\", blink, \";animation-duration:1s;animation-iteration-count:infinite;animation-timing-function:step-end;}\");\nconst wait = async (ms)=>new Promise((resolve)=>{\n        setTimeout(resolve, ms);\n    });\nconst Terminal = ()=>{\n    const xtermRef = react.useRef(null);\n    const fitAddon = react.useRef(new xterm_addon_fit.FitAddon());\n    const [, setValue] = (0,react.useState)(\"\");\n    const [disableInput] = (0,react.useState)(true);\n    const writeWithPause = async (text, time)=>{\n        for (const c of text){\n            var _xtermRef_current;\n            (_xtermRef_current = xtermRef.current) === null || _xtermRef_current === void 0 ? void 0 : _xtermRef_current.terminal.write(c);\n            // eslint-disable-next-line no-await-in-loop\n            await wait(time);\n        }\n    };\n    // const clear = () => xtermRef.current?.terminal.write('\\x1bc');\n    (0,react.useEffect)(()=>{\n        const handleResize = ()=>fitAddon.current.fit();\n        window.addEventListener(\"resize\", handleResize);\n        console.clear();\n        return ()=>window.removeEventListener(\"resize\", handleResize);\n    });\n    (0,react.useEffect)(()=>{\n        const xterm = xtermRef.current;\n        fitAddon.current.fit();\n        const intro = async ()=>{\n            await writeWithPause(source.hex(\"#00ff09\")(\"You're finally awake...\"), 200);\n            await wait(2000);\n            xterm === null || xterm === void 0 ? void 0 : xterm.terminal.writeln(\"\");\n            await writeWithPause(source.hex(\"#00ff09\")(\"You might think you have come far, but this is only the beginning...\"), 50);\n            await writeWithPause(source.hex(\"#00ff09\")(\"We want the best,  \\nnot the followers.  Thus, the first few there will receive\\nthe prize.\"), 50);\n            await writeWithPause(source.hex(\"#00ff09\")(\"Yo​u​​ w​ill ​se​​​e m​e, w​here​ th​e​re i​​s​ ​​no d​arkn​ess\"), 50);\n        };\n        if (xterm) {\n            void intro();\n        }\n        return ()=>{\n            xterm === null || xterm === void 0 ? void 0 : xterm.terminal.reset();\n            setValue(\"\");\n        };\n    }, [\n        xtermRef\n    ]);\n    const onData = (data)=>{\n        var _xtermRef_current;\n        if (disableInput) return;\n        console.log(data.charCodeAt(0));\n        if (data.charCodeAt(0) === 13) {\n            return;\n        }\n        xtermRef === null || xtermRef === void 0 ? void 0 : (_xtermRef_current = xtermRef.current) === null || _xtermRef_current === void 0 ? void 0 : _xtermRef_current.terminal.write(data);\n        setValue((v)=>v + data);\n    };\n    return /*#__PURE__*/ (0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)(Wrapper, {\n        children: /*#__PURE__*/ (0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)(bundle/* XTerm */.O, {\n            addons: [\n                fitAddon.current\n            ],\n            options: {\n                lineHeight: 1,\n                cursorStyle: \"bar\",\n                rendererType: \"dom\",\n                fontFamily: \"Roboto Mono\",\n                windowOptions: {\n                    fullscreenWin: true\n                }\n            },\n            ref: xtermRef,\n            onData: onData\n        })\n    });\n};\n\n\n/***/ }),\n\n/***/ 7642:\n/***/ (function(module) {\n\n!function(e,t){ true?module.exports=t():0}(self,(function(){return(()=>{\"use strict\";var e={};return(()=>{var t=e;Object.defineProperty(t,\"__esModule\",{value:!0}),t.FitAddon=void 0,t.FitAddon=class{constructor(){}activate(e){this._terminal=e}dispose(){}fit(){const e=this.proposeDimensions();if(!e||!this._terminal||isNaN(e.cols)||isNaN(e.rows))return;const t=this._terminal._core;this._terminal.rows===e.rows&&this._terminal.cols===e.cols||(t._renderService.clear(),this._terminal.resize(e.cols,e.rows))}proposeDimensions(){if(!this._terminal)return;if(!this._terminal.element||!this._terminal.element.parentElement)return;const e=this._terminal._core;if(0===e._renderService.dimensions.actualCellWidth||0===e._renderService.dimensions.actualCellHeight)return;const t=0===this._terminal.options.scrollback?0:e.viewport.scrollBarWidth,r=window.getComputedStyle(this._terminal.element.parentElement),i=parseInt(r.getPropertyValue(\"height\")),n=Math.max(0,parseInt(r.getPropertyValue(\"width\"))),o=window.getComputedStyle(this._terminal.element),s=i-(parseInt(o.getPropertyValue(\"padding-top\"))+parseInt(o.getPropertyValue(\"padding-bottom\"))),a=n-(parseInt(o.getPropertyValue(\"padding-right\"))+parseInt(o.getPropertyValue(\"padding-left\")))-t;return{cols:Math.max(2,Math.floor(a/e._renderService.dimensions.actualCellWidth)),rows:Math.max(1,Math.floor(s/e._renderService.dimensions.actualCellHeight))}}}})(),e})()}));\n//# sourceMappingURL=xterm-addon-fit.js.map\n\n/***/ })\n\n}]);"],"names":["self","push","__unused_webpack_module","__webpack_exports__","__webpack_require__","r","d","Terminal","emotion_react_jsx_runtime_browser_esm","react","emotion_styled_browser_esm","bundle","xterm_addon_fit","wrapAnsi16","offset","code","wrapAnsi256","wrapAnsi16m","red","green","blue","styles","modifier","reset","bold","dim","italic","underline","overline","inverse","hidden","strikethrough","color","black","yellow","magenta","cyan","white","blackBright","gray","grey","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgColor","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgGray","bgGrey","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","Object","keys","foregroundColorNames","backgroundColorNames","ansiStyles","assembleStyles","codes","Map","groupName","group","entries","styleName","style","open","close","set","defineProperty","value","enumerable","ansi","ansi256","ansi16m","defineProperties","rgbToAnsi256","Math","round","hexToRgb","hex","matches","exec","toString","colorString","length","map","character","join","integer","Number","parseInt","hexToAnsi256","ansi256ToAnsi","remainder","floor","max","result","rgbToAnsi","hexToAnsi","level","navigator","userAgentData","brand","brands","find","version","test","userAgent","colorSupport","hasBasic","has256","has16m","stdout","stdoutColor","stderr","stderrColor","GENERATOR","Symbol","STYLER","IS_EMPTY","levelMapping","source_styles","create","applyOptions","object","options","isInteger","colorLevel","undefined","chalkFactory","chalk","strings","setPrototypeOf","createChalk","prototype","Function","get","builder","createBuilder","createStyler","visible","getModelAnsi","model","type","arguments_","ansi_styles","styler","bgModel","toUpperCase","slice","proto","parent","openAll","closeAll","_styler","_isEmpty","applyStyle","string","includes","stringReplaceAll","substring","replacer","index","indexOf","substringLength","endIndex","returnValue","lfIndex","stringEncaseCRLFWithFirstIndex","prefix","postfix","gotCR","emotion_react_browser_esm","blink","F4","flicker","Wrapper","Z","target","wait","ms","Promise","setTimeout","resolve","xtermRef","useRef","fitAddon","FitAddon","setValue","useState","disableInput","writeWithPause","text","time","c","_xtermRef_current","current","terminal","write","useEffect","handleResize","fit","window","addEventListener","console","clear","removeEventListener","xterm","intro","source","writeln","onData","log","data","charCodeAt","v","tZ","children","O","addons","lineHeight","cursorStyle","rendererType","fontFamily","windowOptions","fullscreenWin","ref","module","e","t","exports","constructor","activate","_terminal","dispose","proposeDimensions","isNaN","cols","rows","_core","_renderService","resize","element","parentElement","dimensions","actualCellWidth","actualCellHeight","scrollback","viewport","scrollBarWidth","getComputedStyle","i","getPropertyValue","n","o","s","a"],"sourceRoot":""}