{"version":3,"file":"static/chunks/319.6ffb889b8e5535f2.js","mappings":"2QAWMA,GAAUC,EAAAA,EAAAA,GAAM,O,oBAANA,C,+DAShB,SAASC,EAAUC,GAClB,IAAMC,GAAMC,EAAAA,EAAAA,UAELC,GAAUC,EAAAA,EAAAA,WAAS,W,OACzBC,EAAAA,EAAAA,IAAS,IAAIC,aAAa,KAAO,CAAEC,OAAQ,SAC3C,GAaD,OAXAC,EAAAA,EAAAA,IAAS,SAACC,EAAQC,GACjBT,EAAIU,QAAQC,SAASC,GAAKH,EAAQ,GAClCT,EAAIU,QAAQC,SAASE,GAAKJ,EAAQ,OAGnCF,EAAAA,EAAAA,IAAS,Y,IAAGO,EAAK,EAALA,MACLC,EAAUC,KAAKC,KAAKH,EAAMI,iBAAmB,IAAO,EAAG,GACzDH,EAAU,GAAKI,MAAMC,QAAQpB,EAAIU,QAAQW,YAC7CrB,EAAIU,QAAQW,SAASN,QAAUA,OAI/B,QAACO,EAAAA,IAAM,gBACNtB,IAAKA,EACLuB,UAAWrB,EACXsB,OAAQ,EACRC,eAAe,GACX1B,GAAK,C,UAET,QAAC2B,EAAAA,EAAa,CACbC,aAAW,EACXC,MAAM,UACNC,KAAM,KACNC,iBAAe,EACfC,YAAY,OAMT,IAAMC,EAAa,W,OACzB,QAACpC,EAAO,C,UACP,QAACqC,EAAAA,GAAM,CAACC,OAAQ,CAAEC,SAAU,CAAC,EAAG,EAAG,I,WAClC,QAACrC,EAAS,KAMV,QAACsC,EAAAA,GAAc,CAACC,cAAe,E,UAC9B,QAACC,EAAAA,GAAK,CACLC,WAAYC,EAAAA,GAAAA,KACZC,mBAAoB,EACpBC,mBAAoB,EACpBC,UAAW,aAOhB","sources":["webpack://_N_E/./components/background.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport styled from '@emotion/styled';\n\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { Bloom, EffectComposer } from '@react-three/postprocessing';\nimport { PointMaterial, Points } from '@react-three/drei';\n\nimport { inSphere } from 'maath/random';\nimport { KernelSize } from 'postprocessing';\nimport type * as THREE from 'three';\n\nconst Wrapper = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tbottom: 0;\n\tleft: 0;\n\tright: 0;\n\twidth: 100vw;\n`;\n\nfunction Starfield(props) {\n\tconst ref = useRef<THREE.Points>();\n\n\tconst [sphere] = useState(() =>\n\t\tinSphere(new Float32Array(5000), { radius: 1.5 }),\n\t);\n\n\tuseFrame((_state, delta) => {\n\t\tref.current.rotation.x -= delta / 10;\n\t\tref.current.rotation.y -= delta / 15;\n\t});\n\n\tuseFrame(({ clock }) => {\n\t\tconst opacity = Math.max((clock.getElapsedTime() - 0.3) / 5, 0);\n\t\tif (opacity > 1 || Array.isArray(ref.current.material)) return;\n\t\tref.current.material.opacity = opacity;\n\t});\n\n\treturn (\n\t\t<Points\n\t\t\tref={ref}\n\t\t\tpositions={sphere}\n\t\t\tstride={3}\n\t\t\tfrustumCulled={false}\n\t\t\t{...props}\n\t\t>\n\t\t\t<PointMaterial\n\t\t\t\ttransparent\n\t\t\t\tcolor=\"#a0ffff\"\n\t\t\t\tsize={0.005}\n\t\t\t\tsizeAttenuation\n\t\t\t\tdepthWrite={false}\n\t\t\t/>\n\t\t</Points>\n\t);\n}\n\nexport const Background = () => (\n\t<Wrapper>\n\t\t<Canvas camera={{ position: [0, 0, 1] }}>\n\t\t\t<Starfield />\n\t\t\t{/* <OrbitControls\n\t\t\t\tenableZoom={false}\n\t\t\t\tenablePan={false}\n\t\t\t\tenableRotate={false}\n\t\t\t/> */}\n\t\t\t<EffectComposer multisampling={8}>\n\t\t\t\t<Bloom\n\t\t\t\t\tkernelSize={KernelSize.HUGE}\n\t\t\t\t\tluminanceThreshold={0}\n\t\t\t\t\tluminanceSmoothing={0}\n\t\t\t\t\tintensity={0.5}\n\t\t\t\t/>\n\t\t\t</EffectComposer>\n\t\t</Canvas>\n\t</Wrapper>\n);\n\nexport default Background;\n"],"names":["Wrapper","styled","Starfield","props","ref","useRef","sphere","useState","inSphere","Float32Array","radius","useFrame","_state","delta","current","rotation","x","y","clock","opacity","Math","max","getElapsedTime","Array","isArray","material","Points","positions","stride","frustumCulled","PointMaterial","transparent","color","size","sizeAttenuation","depthWrite","Background","Canvas","camera","position","EffectComposer","multisampling","Bloom","kernelSize","KernelSize","luminanceThreshold","luminanceSmoothing","intensity"],"sourceRoot":""}