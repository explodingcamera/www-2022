(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[60],{9585:function(e,t,n){"use strict";function i(e,t,n){n=n||{};var i=e.ownerDocument,r=i.defaultView.CustomEvent;"function"===typeof r?r=new r(t,{detail:n}):((r=i.createEvent("Event")).initEvent(t,!1,!1),r.detail=n),e.dispatchEvent(r)}function r(e){return Array.isArray(e)||e instanceof Int8Array||e instanceof Int16Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Uint16Array||e instanceof Uint32Array||e instanceof Float32Array||e instanceof Float64Array}function o(e){return e===(0|e)+""}function a(e){const t=document.createElement("span");return t.className="observablehq--cellname",t.textContent=`${e} = `,t}n.d(t,{lj:function(){return de},r_:function(){return dn}});const s=Symbol.prototype.toString;function l(e){return s.call(e)}const{getOwnPropertySymbols:c,prototype:{hasOwnProperty:f}}=Object,{toStringTag:d}=Symbol,h={},u=c;function p(e,t){return f.call(e,t)}function m(e){return e[d]||e.constructor&&e.constructor.name||"Object"}function g(e,t){try{const n=e[t];return n&&n.constructor,n}catch(n){return h}}const y=[{symbol:"@@__IMMUTABLE_INDEXED__@@",name:"Indexed",modifier:!0},{symbol:"@@__IMMUTABLE_KEYED__@@",name:"Keyed",modifier:!0},{symbol:"@@__IMMUTABLE_LIST__@@",name:"List",arrayish:!0},{symbol:"@@__IMMUTABLE_MAP__@@",name:"Map"},{symbol:"@@__IMMUTABLE_ORDERED__@@",name:"Ordered",modifier:!0,prefix:!0},{symbol:"@@__IMMUTABLE_RECORD__@@",name:"Record"},{symbol:"@@__IMMUTABLE_SET__@@",name:"Set",arrayish:!0,setish:!0},{symbol:"@@__IMMUTABLE_STACK__@@",name:"Stack",arrayish:!0}];function x(e){try{let t=y.filter((({symbol:t})=>!0===e[t]));if(!t.length)return;const n=t.find((e=>!e.modifier)),i="Map"===n.name&&t.find((e=>e.modifier&&e.prefix)),r=t.some((e=>e.arrayish)),o=t.some((e=>e.setish));return{name:`${i?i.name:""}${n.name}`,symbols:t,arrayish:r&&!o,setish:o}}catch(t){return null}}const{getPrototypeOf:w,getOwnPropertyDescriptors:v}=Object,b=w({});function k(e,t,n,o){let s,l,c,f,d=r(e);e instanceof Map?e instanceof e.constructor?(s=`Map(${e.size})`,l=_):(s="Map()",l=T):e instanceof Set?e instanceof e.constructor?(s=`Set(${e.size})`,l=j):(s="Set()",l=T):d?(s=`${e.constructor.name}(${e.length})`,l=E):(f=x(e))?(s=`Immutable.${f.name}${"Record"===f.name?"":`(${e.size})`}`,d=f.arrayish,l=f.arrayish?O:f.setish?S:A):o?(s=m(e),l=z):(s=m(e),l=T);const h=document.createElement("span");h.className="observablehq--expanded",n&&h.appendChild(a(n));const u=h.appendChild(document.createElement("a"));u.innerHTML="<svg width=8 height=8 class='observablehq--caret'>\n    <path d='M4 7L0 1h8z' fill='currentColor' />\n  </svg>",u.appendChild(document.createTextNode(`${s}${d?" [":" {"}`)),u.addEventListener("mouseup",(function(t){t.stopPropagation(),ce(h,M(e,null,n,o))})),l=l(e);for(let i=0;!(c=l.next()).done&&i<20;++i)h.appendChild(c.value);if(!c.done){const e=h.appendChild(document.createElement("a"));e.className="observablehq--field",e.style.display="block",e.appendChild(document.createTextNode("  \u2026 more")),e.addEventListener("mouseup",(function(e){e.stopPropagation(),h.insertBefore(c.value,h.lastChild.previousSibling);for(let t=0;!(c=l.next()).done&&t<19;++t)h.insertBefore(c.value,h.lastChild.previousSibling);c.done&&h.removeChild(h.lastChild.previousSibling),i(h,"load")}))}return h.appendChild(document.createTextNode(d?"]":"}")),h}function*_(e){for(const[t,n]of e)yield Z(t,n);yield*T(e)}function*j(e){for(const t of e)yield V(t);yield*T(e)}function*S(e){for(const t of e)yield V(t)}function*E(e){for(let t=0,n=e.length;t<n;++t)t in e&&(yield L(t,g(e,t),"observablehq--index"));for(const t in e)!o(t)&&p(e,t)&&(yield L(t,g(e,t),"observablehq--key"));for(const t of u(e))yield L(l(t),g(e,t),"observablehq--symbol")}function*O(e){let t=0;for(const n=e.size;t<n;++t)yield L(t,e.get(t),!0)}function*z(e){for(const n in v(e))yield L(n,g(e,n),"observablehq--key");for(const n of u(e))yield L(l(n),g(e,n),"observablehq--symbol");const t=w(e);t&&t!==b&&(yield C(t))}function*T(e){for(const n in e)p(e,n)&&(yield L(n,g(e,n),"observablehq--key"));for(const n of u(e))yield L(l(n),g(e,n),"observablehq--symbol");const t=w(e);t&&t!==b&&(yield C(t))}function*A(e){for(const[t,n]of e)yield L(t,n,"observablehq--key")}function C(e){const t=document.createElement("div"),n=t.appendChild(document.createElement("span"));return t.className="observablehq--field",n.className="observablehq--prototype-key",n.textContent="  <prototype>",t.appendChild(document.createTextNode(": ")),t.appendChild(le(e,void 0,void 0,void 0,!0)),t}function L(e,t,n){const i=document.createElement("div"),r=i.appendChild(document.createElement("span"));return i.className="observablehq--field",r.className=n,r.textContent=`  ${e}`,i.appendChild(document.createTextNode(": ")),i.appendChild(le(t)),i}function Z(e,t){const n=document.createElement("div");return n.className="observablehq--field",n.appendChild(document.createTextNode("  ")),n.appendChild(le(e)),n.appendChild(document.createTextNode(" => ")),n.appendChild(le(t)),n}function V(e){const t=document.createElement("div");return t.className="observablehq--field",t.appendChild(document.createTextNode("  ")),t.appendChild(le(e)),t}function q(e){const t=window.getSelection();return"Range"===t.type&&(t.containsNode(e,!0)||t.anchorNode.isSelfOrDescendant(e)||t.focusNode.isSelfOrDescendant(e))}function M(e,t,n,i){let o,s,l,c,f=r(e);if(e instanceof Map?e instanceof e.constructor?(o=`Map(${e.size})`,s=D):(o="Map()",s=G):e instanceof Set?e instanceof e.constructor?(o=`Set(${e.size})`,s=F):(o="Set()",s=G):f?(o=`${e.constructor.name}(${e.length})`,s=H):(c=x(e))?(o=`Immutable.${c.name}${"Record"===c.name?"":`(${e.size})`}`,f=c.arrayish,s=c.arrayish?B:c.setish?R:P):(o=m(e),s=G),t){const t=document.createElement("span");return t.className="observablehq--shallow",n&&t.appendChild(a(n)),t.appendChild(document.createTextNode(o)),t.addEventListener("mouseup",(function(n){q(t)||(n.stopPropagation(),ce(t,M(e)))})),t}const d=document.createElement("span");d.className="observablehq--collapsed",n&&d.appendChild(a(n));const h=d.appendChild(document.createElement("a"));h.innerHTML="<svg width=8 height=8 class='observablehq--caret'>\n    <path d='M7 4L1 8V0z' fill='currentColor' />\n  </svg>",h.appendChild(document.createTextNode(`${o}${f?" [":" {"}`)),d.addEventListener("mouseup",(function(t){q(d)||(t.stopPropagation(),ce(d,k(e,0,n,i)))}),!0),s=s(e);for(let r=0;!(l=s.next()).done&&r<20;++r)r>0&&d.appendChild(document.createTextNode(", ")),d.appendChild(l.value);return l.done||d.appendChild(document.createTextNode(", \u2026")),d.appendChild(document.createTextNode(f?"]":"}")),d}function*D(e){for(const[t,n]of e)yield $(t,n);yield*G(e)}function*F(e){for(const t of e)yield le(t,!0);yield*G(e)}function*R(e){for(const t of e)yield le(t,!0)}function*B(e){let t=-1,n=0;for(const i=e.size;n<i;++n)n>t+1&&(yield N(n-t-1)),yield le(e.get(n),!0),t=n;n>t+1&&(yield N(n-t-1))}function*H(e){let t=-1,n=0;for(const i=e.length;n<i;++n)n in e&&(n>t+1&&(yield N(n-t-1)),yield le(g(e,n),!0),t=n);n>t+1&&(yield N(n-t-1));for(const i in e)!o(i)&&p(e,i)&&(yield I(i,g(e,i),"observablehq--key"));for(const i of u(e))yield I(l(i),g(e,i),"observablehq--symbol")}function*G(e){for(const t in e)p(e,t)&&(yield I(t,g(e,t),"observablehq--key"));for(const t of u(e))yield I(l(t),g(e,t),"observablehq--symbol")}function*P(e){for(const[t,n]of e)yield I(t,n,"observablehq--key")}function N(e){const t=document.createElement("span");return t.className="observablehq--empty",t.textContent=1===e?"empty":`empty \xd7 ${e}`,t}function I(e,t,n){const i=document.createDocumentFragment(),r=i.appendChild(document.createElement("span"));return r.className=n,r.textContent=e,i.appendChild(document.createTextNode(": ")),i.appendChild(le(t,!0)),i}function $(e,t){const n=document.createDocumentFragment();return n.appendChild(le(e,!0)),n.appendChild(document.createTextNode(" => ")),n.appendChild(le(t,!0)),n}function U(e,t){var n=e+"",i=n.length;return i<t?new Array(t-i+1).join(0)+n:n}function W(e){return e<0?"-"+U(-e,6):e>9999?"+"+U(e,6):U(e,4)}var Q=Error.prototype.toString;var X=RegExp.prototype.toString;function Y(e){return e.replace(/[\\`\x00-\x09\x0b-\x19]|\${/g,K)}function K(e){var t=e.charCodeAt(0);switch(t){case 8:return"\\b";case 9:return"\\t";case 11:return"\\v";case 12:return"\\f";case 13:return"\\r"}return t<16?"\\x0"+t.toString(16):t<32?"\\x"+t.toString(16):"\\"+e}function J(e,t){for(var n=0;t.exec(e);)++n;return n}var ee=Function.prototype.toString,te={prefix:"async \u0192"},ne={prefix:"async \u0192*"},ie={prefix:"class"},re={prefix:"\u0192"},oe={prefix:"\u0192*"};function ae(e,t,n){var i=document.createElement("span");i.className="observablehq--function",n&&i.appendChild(a(n));var r=i.appendChild(document.createElement("span"));return r.className="observablehq--keyword",r.textContent=e.prefix,i.appendChild(document.createTextNode(t)),i}const{prototype:{toString:se}}=Object;function le(e,t,n,i,r){let o=typeof e;switch(o){case"boolean":case"undefined":e+="";break;case"number":e=0===e&&1/e<0?"-0":e+"";break;case"bigint":e+="n";break;case"symbol":e=l(e);break;case"function":return function(e,t){var n,i,r=ee.call(e);switch(e.constructor&&e.constructor.name){case"AsyncFunction":n=te;break;case"AsyncGeneratorFunction":n=ne;break;case"GeneratorFunction":n=oe;break;default:n=/^class\b/.test(r)?ie:re}return n===ie?ae(n,"",t):(i=/^(?:async\s*)?(\w+)\s*=>/.exec(r))?ae(n,"("+i[1]+")",t):(i=/^(?:async\s*)?\(\s*(\w+(?:\s*,\s*\w+)*)?\s*\)/.exec(r))||(i=/^(?:async\s*)?function(?:\s*\*)?(?:\s*\w+)?\s*\(\s*(\w+(?:\s*,\s*\w+)*)?\s*\)/.exec(r))?ae(n,i[1]?"("+i[1].replace(/\s*,\s*/g,", ")+")":"()",t):ae(n,"(\u2026)",t)}(e,i);case"string":return function(e,t,n,i){if(!1===t){if(J(e,/["\n]/g)<=J(e,/`|\${/g)){const t=document.createElement("span");i&&t.appendChild(a(i));const n=t.appendChild(document.createElement("span"));return n.className="observablehq--string",n.textContent=JSON.stringify(e),t}const r=e.split("\n");if(r.length>20&&!n){const n=document.createElement("div");i&&n.appendChild(a(i));const o=n.appendChild(document.createElement("span"));o.className="observablehq--string",o.textContent="`"+Y(r.slice(0,20).join("\n"));const s=n.appendChild(document.createElement("span")),l=r.length-20;return s.textContent=`Show ${l} truncated line${l>1?"s":""}`,s.className="observablehq--string-expand",s.addEventListener("mouseup",(function(r){r.stopPropagation(),ce(n,le(e,t,!0,i))})),n}const o=document.createElement("span");i&&o.appendChild(a(i));const s=o.appendChild(document.createElement("span"));return s.className="observablehq--string"+(n?" observablehq--expanded":""),s.textContent="`"+Y(e)+"`",o}const r=document.createElement("span");i&&r.appendChild(a(i));const o=r.appendChild(document.createElement("span"));return o.className="observablehq--string",o.textContent=JSON.stringify(e.length>100?`${e.slice(0,50)}\u2026${e.slice(-49)}`:e),r}(e,t,n,i);default:if(null===e){o=null,e="null";break}if(e instanceof Date){o="date",s=e,e=isNaN(s)?"Invalid Date":function(e){return 0===e.getUTCMilliseconds()&&0===e.getUTCSeconds()&&0===e.getUTCMinutes()&&0===e.getUTCHours()}(s)?W(s.getUTCFullYear())+"-"+U(s.getUTCMonth()+1,2)+"-"+U(s.getUTCDate(),2):W(s.getFullYear())+"-"+U(s.getMonth()+1,2)+"-"+U(s.getDate(),2)+"T"+U(s.getHours(),2)+":"+U(s.getMinutes(),2)+(s.getMilliseconds()?":"+U(s.getSeconds(),2)+"."+U(s.getMilliseconds(),3):s.getSeconds()?":"+U(s.getSeconds(),2):"");break}if(e===h){o="forbidden",e="[forbidden]";break}switch(se.call(e)){case"[object RegExp]":o="regexp",e=function(e){return X.call(e)}(e);break;case"[object Error]":case"[object DOMException]":o="error",e=function(e){return e.stack||Q.call(e)}(e);break;default:return(n?k:M)(e,t,i,r)}}var s;const c=document.createElement("span");i&&c.appendChild(a(i));const f=c.appendChild(document.createElement("span"));return f.className=`observablehq--${o}`,f.textContent=e,c}function ce(e,t){e.classList.contains("observablehq--inspect")&&t.classList.add("observablehq--inspect"),e.parentNode.replaceChild(t,e),i(t,"load")}const fe=/\s+\(\d+:\d+\)$/m;class de{constructor(e){if(!e)throw new Error("invalid node");this._node=e,e.classList.add("observablehq")}pending(){const{_node:e}=this;e.classList.remove("observablehq--error"),e.classList.add("observablehq--running")}fulfilled(e,t){const{_node:n}=this;if((!function(e){return(e instanceof Element||e instanceof Text)&&e instanceof e.constructor}(e)||e.parentNode&&e.parentNode!==n)&&(e=le(e,!1,n.firstChild&&n.firstChild.classList&&n.firstChild.classList.contains("observablehq--expanded"),t)).classList.add("observablehq--inspect"),n.classList.remove("observablehq--running","observablehq--error"),n.firstChild!==e)if(n.firstChild){for(;n.lastChild!==n.firstChild;)n.removeChild(n.lastChild);n.replaceChild(e,n.firstChild)}else n.appendChild(e);i(n,"update")}rejected(e,t){const{_node:n}=this;for(n.classList.remove("observablehq--running"),n.classList.add("observablehq--error");n.lastChild;)n.removeChild(n.lastChild);var r=document.createElement("div");r.className="observablehq--inspect",t&&r.appendChild(a(t)),r.appendChild(document.createTextNode((e+"").replace(fe,""))),n.appendChild(r),i(n,"error",{error:e})}}de.into=function(e){if("string"===typeof e&&null==(e=document.querySelector(e)))throw new Error("container not found");return function(){return new de(e.appendChild(document.createElement("div")))}};var he={},ue={};function pe(e){return new Function("d","return {"+e.map((function(e,t){return JSON.stringify(e)+": d["+t+'] || ""'})).join(",")+"}")}function me(e){var t=Object.create(null),n=[];return e.forEach((function(e){for(var i in e)i in t||n.push(t[i]=i)})),n}function ge(e,t){var n=e+"",i=n.length;return i<t?new Array(t-i+1).join(0)+n:n}function ye(e){var t,n=e.getUTCHours(),i=e.getUTCMinutes(),r=e.getUTCSeconds(),o=e.getUTCMilliseconds();return isNaN(e)?"Invalid Date":((t=e.getUTCFullYear())<0?"-"+ge(-t,6):t>9999?"+"+ge(t,6):ge(t,4))+"-"+ge(e.getUTCMonth()+1,2)+"-"+ge(e.getUTCDate(),2)+(o?"T"+ge(n,2)+":"+ge(i,2)+":"+ge(r,2)+"."+ge(o,3)+"Z":r?"T"+ge(n,2)+":"+ge(i,2)+":"+ge(r,2)+"Z":i||n?"T"+ge(n,2)+":"+ge(i,2)+"Z":"")}function xe(e){var t=new RegExp('["'+e+"\n\r]"),n=e.charCodeAt(0);function i(e,t){var i,r=[],o=e.length,a=0,s=0,l=o<=0,c=!1;function f(){if(l)return ue;if(c)return c=!1,he;var t,i,r=a;if(34===e.charCodeAt(r)){for(;a++<o&&34!==e.charCodeAt(a)||34===e.charCodeAt(++a););return(t=a)>=o?l=!0:10===(i=e.charCodeAt(a++))?c=!0:13===i&&(c=!0,10===e.charCodeAt(a)&&++a),e.slice(r+1,t-1).replace(/""/g,'"')}for(;a<o;){if(10===(i=e.charCodeAt(t=a++)))c=!0;else if(13===i)c=!0,10===e.charCodeAt(a)&&++a;else if(i!==n)continue;return e.slice(r,t)}return l=!0,e.slice(r,o)}for(10===e.charCodeAt(o-1)&&--o,13===e.charCodeAt(o-1)&&--o;(i=f())!==ue;){for(var d=[];i!==he&&i!==ue;)d.push(i),i=f();t&&null==(d=t(d,s++))||r.push(d)}return r}function r(t,n){return t.map((function(t){return n.map((function(e){return a(t[e])})).join(e)}))}function o(t){return t.map(a).join(e)}function a(e){return null==e?"":e instanceof Date?ye(e):t.test(e+="")?'"'+e.replace(/"/g,'""')+'"':e}return{parse:function(e,t){var n,r,o=i(e,(function(e,i){if(n)return n(e,i-1);r=e,n=t?function(e,t){var n=pe(e);return function(i,r){return t(n(i),r,e)}}(e,t):pe(e)}));return o.columns=r||[],o},parseRows:i,format:function(t,n){return null==n&&(n=me(t)),[n.map(a).join(e)].concat(r(t,n)).join("\n")},formatBody:function(e,t){return null==t&&(t=me(e)),r(e,t).join("\n")},formatRows:function(e){return e.map(o).join("\n")},formatRow:o,formatValue:a}}var we=xe("\t"),ve=we.parse,be=we.parseRows,ke=(we.format,we.formatBody,we.formatRows,we.formatRow,we.formatValue,xe(",")),_e=ke.parse,je=ke.parseRows;ke.format,ke.formatBody,ke.formatRows,ke.formatRow,ke.formatValue;function Se(e){for(var t in e){var n,i,r=e[t].trim();if(r)if("true"===r)r=!0;else if("false"===r)r=!1;else if("NaN"===r)r=NaN;else if(isNaN(n=+r)){if(!(i=r.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)))continue;Ee&&i[4]&&!i[7]&&(r=r.replace(/-/g,"/").replace(/T/," ")),r=new Date(r)}else r=n;else r=null;e[t]=r}return e}const Ee=new Date("2019-01-01T00:00").getHours()||new Date("2019-07-01T00:00").getHours(),Oe=new Map,ze=[],Te=ze.map,Ae=ze.some,Ce=ze.hasOwnProperty,Le="https://cdn.jsdelivr.net/npm/",Ze=/^((?:@[^/@]+\/)?[^/@]+)(?:@([^/]+))?(?:\/(.*))?$/,Ve=/^\d+\.\d+\.\d+(-[\w-.+]+)?$/,qe=/\.[^/]*$/,Me=["unpkg","jsdelivr","browser","main"];class De extends Error{constructor(e){super(e)}}function Fe(e){const t=Ze.exec(e);return t&&{name:t[1],version:t[2],path:t[3]}}function Re(e){const t=`${Le}${e.name}${e.version?`@${e.version}`:""}/package.json`;let n=Oe.get(t);return n||Oe.set(t,n=fetch(t).then((e=>{if(!e.ok)throw new De("unable to load package.json");return e.redirected&&!Oe.has(e.url)&&Oe.set(e.url,n),e.json()}))),n}De.prototype.name=De.name;var Be=He((async function(e,t){if(e.startsWith(Le)&&(e=e.substring(Le.length)),/^(\w+:)|\/\//i.test(e))return e;if(/^[.]{0,2}\//i.test(e))return new URL(e,null==t?location:t).href;if(!e.length||/^[\s._]/.test(e)||/\s$/.test(e))throw new De("illegal name");const n=Fe(e);if(!n)return`${Le}${e}`;if(!n.version&&null!=t&&t.startsWith(Le)){const e=await Re(Fe(t.substring(Le.length)));n.version=e.dependencies&&e.dependencies[n.name]||e.peerDependencies&&e.peerDependencies[n.name]}if(n.path&&!qe.test(n.path)&&(n.path+=".js"),n.path&&n.version&&Ve.test(n.version))return`${Le}${n.name}@${n.version}/${n.path}`;const i=await Re(n);return`${Le}${i.name}@${i.version}/${n.path||function(e){for(const t of Me){const n=e[t];if("string"===typeof n)return qe.test(n)?n:`${n}.js`}}(i)||"index.js"}`}));function He(e){const t=new Map,n=r(null);function i(e){if("string"!==typeof e)return e;let n=t.get(e);return n||t.set(e,n=new Promise(((t,n)=>{const i=document.createElement("script");i.onload=()=>{try{t(ze.pop()(r(e)))}catch(o){n(new De("invalid module"))}i.remove()},i.onerror=()=>{n(new De("unable to load module")),i.remove()},i.async=!0,i.src=e,window.define=Ie,document.head.appendChild(i)}))),n}function r(t){return n=>Promise.resolve(e(n,t)).then(i)}function o(e){return arguments.length>1?Promise.all(Te.call(arguments,n)).then(Ge):n(e)}return o.alias=function(t){return He(((n,i)=>n in t&&(i=null,"string"!==typeof(n=t[n]))?n:e(n,i)))},o.resolve=e,o}function Ge(e){const t={};for(const n of e)for(const e in n)Ce.call(n,e)&&(null==n[e]?Object.defineProperty(t,e,{get:Pe(n,e)}):t[e]=n[e]);return t}function Pe(e,t){return()=>e[t]}function Ne(e){return"exports"===(e+="")||"module"===e}function Ie(e,t,n){const i=arguments.length;i<2?(n=e,t=[]):i<3&&(n=t,t="string"===typeof e?[]:e),ze.push(Ae.call(t,Ne)?e=>{const i={},r={exports:i};return Promise.all(Te.call(t,(t=>"exports"===(t+="")?i:"module"===t?r:e(t)))).then((e=>(n.apply(null,e),r.exports)))}:e=>Promise.all(Te.call(t,e)).then((e=>"function"===typeof n?n.apply(null,e):n)))}function $e(e,t,n){return{resolve:(i=n)=>`https://cdn.jsdelivr.net/npm/${e}@${t}/${i}`}}Ie.amd={};const Ue=$e("d3","7.0.1","dist/d3.min.js"),We=$e("@observablehq/inputs","0.9.1","dist/inputs.min.js"),Qe=$e("@observablehq/plot","0.2.0","dist/plot.umd.min.js"),Xe=$e("@observablehq/graphviz","0.2.1","dist/graphviz.min.js"),Ye=$e("@observablehq/highlight.js","2.0.0","highlight.min.js"),Ke=$e("@observablehq/katex","0.11.1","dist/katex.min.js"),Je=$e("lodash","4.17.21","lodash.min.js"),et=$e("htl","0.3.0","dist/htl.min.js"),tt=$e("jszip","3.7.1","dist/jszip.min.js"),nt=$e("marked","0.3.12","marked.min.js"),it=$e("sql.js","1.6.1","dist/sql-wasm.js"),rt=$e("vega","5.20.2","build/vega.min.js"),ot=$e("vega-lite","5.1.0","build/vega-lite.min.js"),at=$e("vega-lite-api","5.0.0","build/vega-lite-api.min.js"),st=$e("apache-arrow","4.0.1","Arrow.es2015.min.js"),lt=$e("arquero","4.8.4","dist/arquero.min.js"),ct=$e("topojson-client","3.1.0","dist/topojson-client.min.js");async function ft(e){return(await e(it.resolve()))({locateFile:e=>it.resolve(`dist/${e}`)})}class dt{constructor(e){Object.defineProperties(this,{_db:{value:e}})}static async open(e){const[t,n]=await Promise.all([ft(Be),Promise.resolve(e).then(ht)]);return new dt(new t.Database(n))}async query(e,t){return await async function(e,t,n){const[i]=await e.exec(t,n);if(!i)return[];const{columns:r,values:o}=i,a=o.map((e=>Object.fromEntries(e.map(((e,t)=>[r[t],e])))));return a.columns=r,a}(this._db,e,t)}async queryRow(e,t){return(await this.query(e,t))[0]||null}async explain(e,t){return ut("pre",{className:"observablehq--inspect"},[pt((await this.query(`EXPLAIN QUERY PLAN ${e}`,t)).map((e=>e.detail)).join("\n"))])}async describe(e){const t=await(void 0===e?this.query("SELECT name FROM sqlite_master WHERE type = 'table'"):this.query("SELECT * FROM pragma_table_info(?)",[e]));if(!t.length)throw new Error("Not found");const{columns:n}=t;return ut("table",{value:t},[ut("thead",[ut("tr",n.map((e=>ut("th",[pt(e)]))))]),ut("tbody",t.map((e=>ut("tr",n.map((t=>ut("td",[pt(e[t])])))))))])}}function ht(e){return"string"===typeof e?fetch(e).then(ht):e instanceof Response||e instanceof Blob?e.arrayBuffer().then(ht):e instanceof ArrayBuffer?new Uint8Array(e):e}function ut(e,t,n){2===arguments.length&&(n=t,t=void 0);const i=document.createElement(e);if(void 0!==t)for(const r in t)i[r]=t[r];if(void 0!==n)for(const r of n)i.appendChild(r);return i}function pt(e){return document.createTextNode(e)}async function mt(e){const t=await fetch(await e.url());if(!t.ok)throw new Error(`Unable to load file: ${e.name}`);return t}async function gt(e,t,{array:n=!1,typed:i=!1}={}){const r=await e.text();return("\t"===t?n?be:ve:n?je:_e)(r,i&&Se)}class yt{constructor(e){Object.defineProperty(this,"name",{value:e,enumerable:!0})}async blob(){return(await mt(this)).blob()}async arrayBuffer(){return(await mt(this)).arrayBuffer()}async text(){return(await mt(this)).text()}async json(){return(await mt(this)).json()}async stream(){return(await mt(this)).body}async csv(e){return gt(this,",",e)}async tsv(e){return gt(this,"\t",e)}async image(){const e=await this.url();return new Promise(((t,n)=>{const i=new Image;new URL(e,document.baseURI).origin!==new URL(location).origin&&(i.crossOrigin="anonymous"),i.onload=()=>t(i),i.onerror=()=>n(new Error(`Unable to load file: ${this.name}`)),i.src=e}))}async arrow(){const[e,t]=await Promise.all([Be(st.resolve()),mt(this)]);return e.Table.from(t)}async sqlite(){return dt.open(mt(this))}async zip(){const[e,t]=await Promise.all([Be(tt.resolve()),this.arrayBuffer()]);return new vt(await e.loadAsync(t))}async xml(e="application/xml"){return(new DOMParser).parseFromString(await this.text(),e)}async html(){return this.xml("text/html")}}class xt extends yt{constructor(e,t){super(t),Object.defineProperty(this,"_url",{value:e})}async url(){return await this._url+""}}function wt(e){throw new Error(`File not found: ${e}`)}class vt{constructor(e){Object.defineProperty(this,"_",{value:e}),this.filenames=Object.keys(e.files).filter((t=>!e.files[t].dir))}file(e){const t=this._.file(e+="");if(!t||t.dir)throw new Error(`file not found: ${e}`);return new bt(t)}}class bt extends yt{constructor(e){super(e.name),Object.defineProperty(this,"_",{value:e}),Object.defineProperty(this,"_url",{writable:!0})}async url(){return this._url||(this._url=this.blob().then(URL.createObjectURL))}async blob(){return this._.async("blob")}async arrayBuffer(){return this._.async("arraybuffer")}async text(){return this._.async("text")}async json(){return JSON.parse(await this.text())}}var kt={math:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};var _t=0;function jt(e){this.id=e,this.href=new URL(`#${e}`,location)+""}jt.prototype.toString=function(){return"url("+this.href+")"};var St={canvas:function(e,t){var n=document.createElement("canvas");return n.width=e,n.height=t,n},context2d:function(e,t,n){null==n&&(n=devicePixelRatio);var i=document.createElement("canvas");i.width=e*n,i.height=t*n,i.style.width=e+"px";var r=i.getContext("2d");return r.scale(n,n),r},download:function(e,t="untitled",n="Save"){const i=document.createElement("a"),r=i.appendChild(document.createElement("button"));async function o(){await new Promise(requestAnimationFrame),URL.revokeObjectURL(i.href),i.removeAttribute("href"),r.textContent=n,r.disabled=!1}return r.textContent=n,i.download=t,i.onclick=async t=>{if(r.disabled=!0,i.href)return o();r.textContent="Saving\u2026";try{const t=await("function"===typeof e?e():e);r.textContent="Download",i.href=URL.createObjectURL(t)}catch(a){r.textContent=n}if(t.eventPhase)return o();r.disabled=!1},i},element:function(e,t){var n,i=e+="",r=i.indexOf(":");r>=0&&"xmlns"!==(i=e.slice(0,r))&&(e=e.slice(r+1));var o=kt.hasOwnProperty(i)?document.createElementNS(kt[i],e):document.createElement(e);if(t)for(var a in t)r=(i=a).indexOf(":"),n=t[a],r>=0&&"xmlns"!==(i=a.slice(0,r))&&(a=a.slice(r+1)),kt.hasOwnProperty(i)?o.setAttributeNS(kt[i],a,n):o.setAttribute(a,n);return o},input:function(e){var t=document.createElement("input");return null!=e&&(t.type=e),t},range:function(e,t,n){1===arguments.length&&(t=e,e=null);var i=document.createElement("input");return i.min=e=null==e?0:+e,i.max=t=null==t?1:+t,i.step=null==n?"any":n=+n,i.type="range",i},select:function(e){var t=document.createElement("select");return Array.prototype.forEach.call(e,(function(e){var n=document.createElement("option");n.value=n.textContent=e,t.appendChild(n)})),t},svg:function(e,t){var n=document.createElementNS("http://www.w3.org/2000/svg","svg");return n.setAttribute("viewBox",[0,0,e,t]),n.setAttribute("width",e),n.setAttribute("height",t),n},text:function(e){return document.createTextNode(e)},uid:function(e){return new jt("O-"+(null==e?"":e+"-")+ ++_t)}};var Et={buffer:function(e){return new Promise((function(t,n){var i=new FileReader;i.onload=function(){t(i.result)},i.onerror=n,i.readAsArrayBuffer(e)}))},text:function(e){return new Promise((function(t,n){var i=new FileReader;i.onload=function(){t(i.result)},i.onerror=n,i.readAsText(e)}))},url:function(e){return new Promise((function(t,n){var i=new FileReader;i.onload=function(){t(i.result)},i.onerror=n,i.readAsDataURL(e)}))}};function Ot(){return this}function zt(e,t){let n=!1;if("function"!==typeof t)throw new Error("dispose is not a function");return{[Symbol.iterator]:Ot,next:()=>n?{done:!0}:(n=!0,{done:!1,value:e}),return:()=>(n=!0,t(e),{done:!0}),throw:()=>({done:n=!0})}}function Tt(e){let t,n,i=!1;const r=e((function(e){n?(n(e),n=null):i=!0;return t=e}));if(null!=r&&"function"!==typeof r)throw new Error("function"===typeof r.then?"async initializers are not supported":"initializer returned something, but not a dispose function");return{[Symbol.iterator]:Ot,throw:()=>({done:!0}),return:()=>(null!=r&&r(),{done:!0}),next:function(){return{done:!1,value:i?(i=!1,Promise.resolve(t)):new Promise((e=>n=e))}}}}function At(e){switch(e.type){case"range":case"number":return e.valueAsNumber;case"date":return e.valueAsDate;case"checkbox":return e.checked;case"file":return e.multiple?e.files:e.files[0];case"select-multiple":return Array.from(e.selectedOptions,(e=>e.value));default:return e.value}}var Ct={disposable:zt,filter:function*(e,t){for(var n,i=-1;!(n=e.next()).done;)t(n.value,++i)&&(yield n.value)},input:function(e){return Tt((function(t){var n=function(e){switch(e.type){case"button":case"submit":case"checkbox":return"click";case"file":return"change";default:return"input"}}(e),i=At(e);function r(){t(At(e))}return e.addEventListener(n,r),void 0!==i&&t(i),function(){e.removeEventListener(n,r)}}))},map:function*(e,t){for(var n,i=-1;!(n=e.next()).done;)yield t(n.value,++i)},observe:Tt,queue:function(e){let t;const n=[],i=e((function(e){n.push(e),t&&(t(n.shift()),t=null);return e}));if(null!=i&&"function"!==typeof i)throw new Error("function"===typeof i.then?"async initializers are not supported":"initializer returned something, but not a dispose function");return{[Symbol.iterator]:Ot,throw:()=>({done:!0}),return:()=>(null!=i&&i(),{done:!0}),next:function(){return{done:!1,value:n.length?Promise.resolve(n.shift()):new Promise((e=>t=e))}}}},range:function*(e,t,n){e=+e,t=+t,n=(r=arguments.length)<2?(t=e,e=0,1):r<3?1:+n;for(var i=-1,r=0|Math.max(0,Math.ceil((t-e)/n));++i<r;)yield e+i*n},valueAt:function(e,t){if(!(!isFinite(t=+t)||t<0||t!==t|0))for(var n,i=-1;!(n=e.next()).done;)if(++i===t)return n.value},worker:function(e){const t=URL.createObjectURL(new Blob([e],{type:"text/javascript"})),n=new Worker(t);return zt(n,(()=>{n.terminate(),URL.revokeObjectURL(t)}))}};function Lt(e,t){return function(n){var i,r,o,a,s,l,c,f,d=n[0],h=[],u=null,p=-1;for(s=1,l=arguments.length;s<l;++s){if((i=arguments[s])instanceof Node)h[++p]=i,d+="\x3c!--o:"+p+"--\x3e";else if(Array.isArray(i)){for(c=0,f=i.length;c<f;++c)(r=i[c])instanceof Node?(null===u&&(h[++p]=u=document.createDocumentFragment(),d+="\x3c!--o:"+p+"--\x3e"),u.appendChild(r)):(u=null,d+=r);u=null}else d+=i;d+=n[s]}if(u=e(d),++p>0){for(o=new Array(p),a=document.createTreeWalker(u,NodeFilter.SHOW_COMMENT,null,!1);a.nextNode();)r=a.currentNode,/^o:/.test(r.nodeValue)&&(o[+r.nodeValue.slice(2)]=r);for(s=0;s<p;++s)(r=o[s])&&r.parentNode.replaceChild(h[s],r)}return 1===u.childNodes.length?u.removeChild(u.firstChild):11===u.nodeType?((r=t()).appendChild(u),r):u}}var Zt=Lt((function(e){var t=document.createElement("template");return t.innerHTML=e.trim(),document.importNode(t.content,!0)}),(function(){return document.createElement("span")}));function Vt(e){let t;Object.defineProperties(this,{generator:{value:Tt((e=>{t=e}))},value:{get:()=>e,set:n=>t(e=n)}}),void 0!==e&&t(e)}function*qt(){for(;;)yield Date.now()}var Mt=new Map;function Dt(e,t){var n;return(n=Mt.get(e=+e))?n.then((()=>t)):(n=Date.now())>=e?Promise.resolve(t):function(e,t){var n=new Promise((function(n){Mt.delete(t);var i=t-e;if(!(i>0))throw new Error("invalid time");if(i>2147483647)throw new Error("too long to wait");setTimeout(n,i)}));return Mt.set(t,n),n}(n,e).then((()=>t))}var Ft={delay:function(e,t){return new Promise((function(n){setTimeout((function(){n(t)}),e)}))},tick:function(e,t){return Dt(Math.ceil((Date.now()+1)/e)*e,t)},when:Dt};function Rt(e,t){if(/^(\w+:)|\/\//i.test(e))return e;if(/^[.]{0,2}\//i.test(e))return new URL(e,null==t?location:t).href;if(!e.length||/^[\s._]/.test(e)||/\s$/.test(e))throw new Error("illegal name");return"https://unpkg.com/"+e}var Bt=Lt((function(e){var t=document.createElementNS("http://www.w3.org/2000/svg","g");return t.innerHTML=e.trim(),t}),(function(){return document.createElementNS("http://www.w3.org/2000/svg","g")})),Ht=String.raw;function Gt(){return Tt((function(e){var t=e(document.body.clientWidth);function n(){var n=document.body.clientWidth;n!==t&&e(t=n)}return window.addEventListener("resize",n),function(){window.removeEventListener("resize",n)}}))}var Pt=Object.assign((function(e){const t=function(e){return null==e?Be:He(e)}(e);var n;Object.defineProperties(this,(n={FileAttachment:()=>wt,Arrow:()=>t(st.resolve()),Inputs:()=>t(We.resolve()),Mutable:()=>Vt,Plot:()=>t(Qe.resolve()),SQLite:()=>ft(t),SQLiteDatabaseClient:()=>dt,_:()=>t(Je.resolve()),aq:()=>t.alias({"apache-arrow":st.resolve()})(lt.resolve()),d3:()=>t(Ue.resolve()),dot:()=>t(Xe.resolve()),htl:()=>t(et.resolve()),html:()=>Zt,md:()=>function(e){return e(nt.resolve()).then((function(t){return Lt((function(n){var i=document.createElement("div");i.innerHTML=t(n,{langPrefix:""}).trim();var r=i.querySelectorAll("pre code[class]");return r.length>0&&e(Ye.resolve()).then((function(t){r.forEach((function(n){function i(){t.highlightBlock(n),n.parentNode.classList.add("observablehq--md-pre")}t.getLanguage(n.className)?i():e(Ye.resolve("async-languages/index.js")).then((i=>{if(i.has(n.className))return e(Ye.resolve("async-languages/"+i.get(n.className))).then((e=>{t.registerLanguage(n.className,e)}))})).then(i,i)}))})),i}),(function(){return document.createElement("div")}))}))}(t),now:qt,require:()=>t,resolve:()=>Rt,svg:()=>Bt,tex:()=>function(e){return Promise.all([e(Ke.resolve()),(t=Ke.resolve("dist/katex.min.css"),new Promise((function(e,n){var i=document.createElement("link");i.rel="stylesheet",i.href=t,i.onerror=n,i.onload=e,document.head.appendChild(i)})))]).then((function(e){var t=e[0],n=i();function i(e){return function(){var n=document.createElement("div");return t.render(Ht.apply(String,arguments),n,e),n.removeChild(n.firstChild)}}return n.options=i,n.block=i({displayMode:!0}),n}));var t}(t),topojson:()=>t(ct.resolve()),vl:()=>async function(e){const[t,n,i]=await Promise.all([rt,ot,at].map((t=>e(t.resolve()))));return i.register(t,n)}(t),width:Gt,DOM:St,Files:Et,Generators:Ct,Promises:Ft},Object.fromEntries(Object.entries(n).map(Nt))))}),{resolve:Be.resolve});function Nt([e,t]){return[e,{value:t,writable:!0,enumerable:!0}]}function It(e,t){this.message=e+"",this.input=t}It.prototype=Object.create(Error.prototype),It.prototype.name="RuntimeError",It.prototype.constructor=It;var $t=Array.prototype,Ut=$t.map,Wt=$t.forEach;function Qt(e){return function(){return e}}function Xt(e){return e}function Yt(){}var Kt={};function Jt(e,t,n){var i;n||(n=Kt),Object.defineProperties(this,{_observer:{value:n,writable:!0},_definition:{value:nn,writable:!0},_duplicate:{value:void 0,writable:!0},_duplicates:{value:void 0,writable:!0},_indegree:{value:NaN,writable:!0},_inputs:{value:[],writable:!0},_invalidate:{value:Yt,writable:!0},_module:{value:t},_name:{value:null,writable:!0},_outputs:{value:new Set,writable:!0},_promise:{value:Promise.resolve(void 0),writable:!0},_reachable:{value:n!==Kt,writable:!0},_rejector:{value:(i=this,function(e){if(e===nn)throw new It(i._name+" is not defined",i._name);if(e instanceof Error&&e.message)throw new It(e.message,i._name);throw new It(i._name+" could not be resolved",i._name)})},_type:{value:e},_value:{value:void 0,writable:!0},_version:{value:0,writable:!0}})}function en(e){e._module._runtime._dirty.add(e),e._outputs.add(this)}function tn(e){e._module._runtime._dirty.add(e),e._outputs.delete(this)}function nn(){throw nn}function rn(e){return function(){throw new It(e+" is defined more than once")}}function on(e,t,n){var i=this._module._scope,r=this._module._runtime;if(this._inputs.forEach(tn,this),t.forEach(en,this),this._inputs=t,this._definition=n,this._value=void 0,n===Yt?r._variables.delete(this):r._variables.add(this),e!==this._name||i.get(e)!==this){var o,a;if(this._name)if(this._outputs.size)i.delete(this._name),(a=this._module._resolve(this._name))._outputs=this._outputs,this._outputs=new Set,a._outputs.forEach((function(e){e._inputs[e._inputs.indexOf(this)]=a}),this),a._outputs.forEach(r._updates.add,r._updates),r._dirty.add(a).add(this),i.set(this._name,a);else if((a=i.get(this._name))===this)i.delete(this._name);else{if(3!==a._type)throw new Error;a._duplicates.delete(this),this._duplicate=void 0,1===a._duplicates.size&&(a=a._duplicates.keys().next().value,o=i.get(this._name),a._outputs=o._outputs,o._outputs=new Set,a._outputs.forEach((function(e){e._inputs[e._inputs.indexOf(o)]=a})),a._definition=a._duplicate,a._duplicate=void 0,r._dirty.add(o).add(a),r._updates.add(a),i.set(this._name,a))}if(this._outputs.size)throw new Error;e&&((a=i.get(e))?3===a._type?(this._definition=rn(e),this._duplicate=n,a._duplicates.add(this)):2===a._type?(this._outputs=a._outputs,a._outputs=new Set,this._outputs.forEach((function(e){e._inputs[e._inputs.indexOf(a)]=this}),this),r._dirty.add(a).add(this),i.set(e,this)):(a._duplicate=a._definition,this._duplicate=n,(o=new Jt(3,this._module))._name=e,o._definition=this._definition=a._definition=rn(e),o._outputs=a._outputs,a._outputs=new Set,o._outputs.forEach((function(e){e._inputs[e._inputs.indexOf(a)]=o})),o._duplicates=new Set([this,a]),r._dirty.add(a).add(o),r._updates.add(a).add(o),i.set(e,o)):i.set(e,this)),this._name=e}return r._updates.add(this),r._compute(),this}function an(e,t=[]){Object.defineProperties(this,{_runtime:{value:e},_scope:{value:new Map},_builtins:{value:new Map([["invalidation",cn],["visibility",fn],...t])},_source:{value:null,writable:!0}})}function sn(e){return e._name}Object.defineProperties(Jt.prototype,{_pending:{value:function(){this._observer.pending&&this._observer.pending()},writable:!0,configurable:!0},_fulfilled:{value:function(e){this._observer.fulfilled&&this._observer.fulfilled(e,this._name)},writable:!0,configurable:!0},_rejected:{value:function(e){this._observer.rejected&&this._observer.rejected(e,this._name)},writable:!0,configurable:!0},define:{value:function(e,t,n){switch(arguments.length){case 1:n=e,e=t=null;break;case 2:n=t,"string"===typeof e?t=null:(t=e,e=null)}return on.call(this,null==e?null:e+"",null==t?[]:Ut.call(t,this._module._resolve,this._module),"function"===typeof n?n:Qt(n))},writable:!0,configurable:!0},delete:{value:function(){return on.call(this,null,[],Yt)},writable:!0,configurable:!0},import:{value:function(e,t,n){arguments.length<3&&(n=t,t=e);return on.call(this,t+"",[n._resolve(e+"")],Xt)},writable:!0,configurable:!0}}),Object.defineProperties(an.prototype,{_copy:{value:function(e,t){e._source=this,t.set(this,e);for(const[o,a]of this._scope){var n=e._scope.get(o);if(!n||1!==n._type)if(a._definition===Xt){var i=a._inputs[0],r=i._module;e.import(i._name,o,t.get(r)||(r._source?r._copy(new an(e._runtime,e._builtins),t):r))}else e.define(o,a._inputs.map(sn),a._definition)}return e},writable:!0,configurable:!0},_resolve:{value:function(e){var t,n=this._scope.get(e);if(!n)if(n=new Jt(2,this),this._builtins.has(e))n.define(e,Qt(this._builtins.get(e)));else if(this._runtime._builtin._scope.has(e))n.import(e,this._runtime._builtin);else{try{t=this._runtime._global(e)}catch(r){return n.define(e,(i=r,function(){throw i}))}void 0===t?this._scope.set(n._name=e,n):n.define(e,Qt(t))}var i;return n},writable:!0,configurable:!0},redefine:{value:function(e){var t=this._scope.get(e);if(!t)throw new It(e+" is not defined");if(3===t._type)throw new It(e+" is defined more than once");return t.define.apply(t,arguments)},writable:!0,configurable:!0},define:{value:function(){var e=new Jt(1,this);return e.define.apply(e,arguments)},writable:!0,configurable:!0},derive:{value:function(e,t){var n=new an(this._runtime,this._builtins);return n._source=this,Wt.call(e,(function(e){"object"!==typeof e&&(e={name:e+""}),null==e.alias&&(e.alias=e.name),n.import(e.name,e.alias,t)})),Promise.resolve().then((()=>{const e=new Set([this]);for(const t of e)for(const n of t._scope.values())if(n._definition===Xt){const t=n._inputs[0]._module,i=t._source||t;if(i===this)return void console.warn("circular module definition; ignoring");e.add(i)}this._copy(n,new Map)})),n},writable:!0,configurable:!0},import:{value:function(){var e=new Jt(1,this);return e.import.apply(e,arguments)},writable:!0,configurable:!0},value:{value:async function(e){var t=this._scope.get(e);if(!t)throw new It(e+" is not defined");t._observer===Kt&&(t._observer=!0,this._runtime._dirty.add(t));return await this._runtime._compute(),t._promise},writable:!0,configurable:!0},variable:{value:function(e){return new Jt(1,this,e)},writable:!0,configurable:!0},builtin:{value:function(e,t){this._builtins.set(e,t)},writable:!0,configurable:!0}});const ln="function"===typeof requestAnimationFrame?requestAnimationFrame:setImmediate;var cn={},fn={};function dn(e=new Pt,t=bn){var n=this.module();if(Object.defineProperties(this,{_dirty:{value:new Set},_updates:{value:new Set},_computing:{value:null,writable:!0},_init:{value:null,writable:!0},_modules:{value:new Map},_variables:{value:new Set},_disposed:{value:!1,writable:!0},_builtin:{value:n},_global:{value:t}}),e)for(var i in e)new Jt(2,n).define(i,[],e[i])}function hn(e){const t=new Set(e._inputs);for(const n of t){if(n===e)return!0;n._inputs.forEach(t.add,t)}return!1}function un(e){++e._indegree}function pn(e){--e._indegree}function mn(e){return e._promise.catch(e._rejector)}function gn(e){return new Promise((function(t){e._invalidate=t}))}function yn(e,t){let n,i,r="function"===typeof IntersectionObserver&&t._observer&&t._observer._node,o=!r,a=Yt,s=Yt;return r&&(i=new IntersectionObserver((([e])=>(o=e.isIntersecting)&&(n=null,a()))),i.observe(r),e.then((()=>(i.disconnect(),i=null,s())))),function(e){return o?Promise.resolve(e):i?(n||(n=new Promise(((e,t)=>(a=e,s=t)))),n.then((()=>e))):Promise.reject()}}function xn(e){e._invalidate(),e._invalidate=Yt,e._pending();var t=e._value,n=++e._version,i=null,r=e._promise=Promise.all(e._inputs.map(mn)).then((function(r){if(e._version===n){for(var o=0,a=r.length;o<a;++o)switch(r[o]){case cn:r[o]=i=gn(e);break;case fn:i||(i=gn(e)),r[o]=yn(i,e)}return e._definition.apply(t,r)}})).then((function(t){return function(e){return e&&"function"===typeof e.next&&"function"===typeof e.return}(t)?e._version!==n?void t.return():((i||gn(e)).then((o=t,function(){o.return()})),function(e,t,n,i){function r(){var n=new Promise((function(e){e(i.next())})).then((function(i){return i.done?void 0:Promise.resolve(i.value).then((function(i){if(e._version===t)return wn(e,i,n).then(r),e._fulfilled(i),i}))}));n.catch((function(i){e._version===t&&(wn(e,void 0,n),e._rejected(i))}))}return new Promise((function(e){e(i.next())})).then((function(e){if(!e.done)return n.then(r),e.value}))}(e,n,r,t)):t;var o}));r.then((function(t){e._version===n&&(e._value=t,e._fulfilled(t))}),(function(t){e._version===n&&(e._value=void 0,e._rejected(t))}))}function wn(e,t,n){var i=e._module._runtime;return e._value=t,e._promise=n,e._outputs.forEach(i._updates.add,i._updates),i._compute()}function vn(e,t){e._invalidate(),e._invalidate=Yt,e._pending(),++e._version,e._indegree=NaN,(e._promise=Promise.reject(t)).catch(Yt),e._value=void 0,e._rejected(t)}function bn(e){return window[e]}Object.defineProperties(dn,{load:{value:function(e,t,n){if("function"==typeof t&&(n=t,t=null),"function"!==typeof n)throw new Error("invalid observer");null==t&&(t=new Pt);const{modules:i,id:r}=e,o=new Map,a=new dn(t),s=l(r);function l(e){let t=o.get(e);return t||o.set(e,t=a.module()),t}for(const c of i){const e=l(c.id);let t=0;for(const i of c.variables)i.from?e.import(i.remote,i.name,l(i.from)):e===s?e.variable(n(i,t,c.variables)).define(i.name,i.inputs,i.value):e.define(i.name,i.inputs,i.value),++t}return a},writable:!0,configurable:!0}}),Object.defineProperties(dn.prototype,{_compute:{value:function(){return this._computing||(this._computing=this._computeSoon())},writable:!0,configurable:!0},_computeSoon:{value:function(){var e=this;return new Promise((function(t){ln((function(){t(),e._disposed||e._computeNow()}))}))},writable:!0,configurable:!0},_computeNow:{value:function(){var e,t,n=[];(e=new Set(this._dirty)).forEach((function(t){t._inputs.forEach(e.add,e);const n=function(e){if(e._observer!==Kt)return!0;var t=new Set(e._outputs);for(const n of t){if(n._observer!==Kt)return!0;n._outputs.forEach(t.add,t)}return!1}(t);n>t._reachable?this._updates.add(t):n<t._reachable&&t._invalidate(),t._reachable=n}),this),(e=new Set(this._updates)).forEach((function(t){t._reachable?(t._indegree=0,t._outputs.forEach(e.add,e)):(t._indegree=NaN,e.delete(t))})),this._computing=null,this._updates.clear(),this._dirty.clear(),e.forEach((function(e){e._outputs.forEach(un)}));do{for(e.forEach((function(e){0===e._indegree&&n.push(e)}));t=n.pop();)xn(t),t._outputs.forEach(i),e.delete(t);e.forEach((function(t){hn(t)&&(vn(t,new It("circular definition")),t._outputs.forEach(pn),e.delete(t))}))}while(e.size);function i(e){0===--e._indegree&&n.push(e)}},writable:!0,configurable:!0},dispose:{value:function(){this._computing=Promise.resolve(),this._disposed=!0,this._variables.forEach((e=>{e._invalidate(),e._version=NaN}))},writable:!0,configurable:!0},module:{value:function(e,t=Yt){let n;if(void 0===e)return(n=this._init)?(this._init=null,n):new an(this);if(n=this._modules.get(e),n)return n;this._init=n=new an(this),this._modules.set(e,n);try{e(this,t)}finally{this._init=null}return n},writable:!0,configurable:!0},fileAttachments:{value:function(e){return Object.assign((t=>{const n=e(t+="");if(null==n)throw new Error(`File not found: ${t}`);return new xt(n,t)}),{prototype:xt.prototype})},writable:!0,configurable:!0}})},1879:function(e){"use strict";e.exports=function e(t,n){if(t===n)return!0;if(t&&n&&"object"==typeof t&&"object"==typeof n){if(t.constructor!==n.constructor)return!1;var i,r,o;if(Array.isArray(t)){if((i=t.length)!=n.length)return!1;for(r=i;0!==r--;)if(!e(t[r],n[r]))return!1;return!0}if(t instanceof Map&&n instanceof Map){if(t.size!==n.size)return!1;for(r of t.entries())if(!n.has(r[0]))return!1;for(r of t.entries())if(!e(r[1],n.get(r[0])))return!1;return!0}if(t instanceof Set&&n instanceof Set){if(t.size!==n.size)return!1;for(r of t.entries())if(!n.has(r[0]))return!1;return!0}if(ArrayBuffer.isView(t)&&ArrayBuffer.isView(n)){if((i=t.length)!=n.length)return!1;for(r=i;0!==r--;)if(t[r]!==n[r])return!1;return!0}if(t.constructor===RegExp)return t.source===n.source&&t.flags===n.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===n.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===n.toString();if((i=(o=Object.keys(t)).length)!==Object.keys(n).length)return!1;for(r=i;0!==r--;)if(!Object.prototype.hasOwnProperty.call(n,o[r]))return!1;for(r=i;0!==r--;){var a=o[r];if(("_owner"!==a||!t.$$typeof)&&!e(t[a],n[a]))return!1}return!0}return t!==t&&n!==n}},3465:function(e,t,n){e=n.nmd(e);var i="__lodash_hash_undefined__",r=9007199254740991,o="[object Arguments]",a="[object Boolean]",s="[object Date]",l="[object Function]",c="[object GeneratorFunction]",f="[object Map]",d="[object Number]",h="[object Object]",u="[object Promise]",p="[object RegExp]",m="[object Set]",g="[object String]",y="[object Symbol]",x="[object WeakMap]",w="[object ArrayBuffer]",v="[object DataView]",b="[object Float32Array]",k="[object Float64Array]",_="[object Int8Array]",j="[object Int16Array]",S="[object Int32Array]",E="[object Uint8Array]",O="[object Uint8ClampedArray]",z="[object Uint16Array]",T="[object Uint32Array]",A=/\w*$/,C=/^\[object .+?Constructor\]$/,L=/^(?:0|[1-9]\d*)$/,Z={};Z[o]=Z["[object Array]"]=Z[w]=Z[v]=Z[a]=Z[s]=Z[b]=Z[k]=Z[_]=Z[j]=Z[S]=Z[f]=Z[d]=Z[h]=Z[p]=Z[m]=Z[g]=Z[y]=Z[E]=Z[O]=Z[z]=Z[T]=!0,Z["[object Error]"]=Z[l]=Z[x]=!1;var V="object"==typeof n.g&&n.g&&n.g.Object===Object&&n.g,q="object"==typeof self&&self&&self.Object===Object&&self,M=V||q||Function("return this")(),D=t&&!t.nodeType&&t,F=D&&e&&!e.nodeType&&e,R=F&&F.exports===D;function B(e,t){return e.set(t[0],t[1]),e}function H(e,t){return e.add(t),e}function G(e,t,n,i){var r=-1,o=e?e.length:0;for(i&&o&&(n=e[++r]);++r<o;)n=t(n,e[r],r,e);return n}function P(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(n){}return t}function N(e){var t=-1,n=Array(e.size);return e.forEach((function(e,i){n[++t]=[i,e]})),n}function I(e,t){return function(n){return e(t(n))}}function $(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}var U=Array.prototype,W=Function.prototype,Q=Object.prototype,X=M["__core-js_shared__"],Y=function(){var e=/[^.]+$/.exec(X&&X.keys&&X.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}(),K=W.toString,J=Q.hasOwnProperty,ee=Q.toString,te=RegExp("^"+K.call(J).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ne=R?M.Buffer:void 0,ie=M.Symbol,re=M.Uint8Array,oe=I(Object.getPrototypeOf,Object),ae=Object.create,se=Q.propertyIsEnumerable,le=U.splice,ce=Object.getOwnPropertySymbols,fe=ne?ne.isBuffer:void 0,de=I(Object.keys,Object),he=De(M,"DataView"),ue=De(M,"Map"),pe=De(M,"Promise"),me=De(M,"Set"),ge=De(M,"WeakMap"),ye=De(Object,"create"),xe=Ge(he),we=Ge(ue),ve=Ge(pe),be=Ge(me),ke=Ge(ge),_e=ie?ie.prototype:void 0,je=_e?_e.valueOf:void 0;function Se(e){var t=-1,n=e?e.length:0;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function Ee(e){var t=-1,n=e?e.length:0;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function Oe(e){var t=-1,n=e?e.length:0;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function ze(e){this.__data__=new Ee(e)}function Te(e,t){var n=Ne(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&Ie(e)}(e)&&J.call(e,"callee")&&(!se.call(e,"callee")||ee.call(e)==o)}(e)?function(e,t){for(var n=-1,i=Array(e);++n<e;)i[n]=t(n);return i}(e.length,String):[],i=n.length,r=!!i;for(var a in e)!t&&!J.call(e,a)||r&&("length"==a||Be(a,i))||n.push(a);return n}function Ae(e,t,n){var i=e[t];J.call(e,t)&&Pe(i,n)&&(void 0!==n||t in e)||(e[t]=n)}function Ce(e,t){for(var n=e.length;n--;)if(Pe(e[n][0],t))return n;return-1}function Le(e,t,n,i,r,u,x){var C;if(i&&(C=u?i(e,r,u,x):i(e)),void 0!==C)return C;if(!We(e))return e;var L=Ne(e);if(L){if(C=function(e){var t=e.length,n=e.constructor(t);t&&"string"==typeof e[0]&&J.call(e,"index")&&(n.index=e.index,n.input=e.input);return n}(e),!t)return function(e,t){var n=-1,i=e.length;t||(t=Array(i));for(;++n<i;)t[n]=e[n];return t}(e,C)}else{var V=Re(e),q=V==l||V==c;if($e(e))return function(e,t){if(t)return e.slice();var n=new e.constructor(e.length);return e.copy(n),n}(e,t);if(V==h||V==o||q&&!u){if(P(e))return u?e:{};if(C=function(e){return"function"!=typeof e.constructor||He(e)?{}:(t=oe(e),We(t)?ae(t):{});var t}(q?{}:e),!t)return function(e,t){return qe(e,Fe(e),t)}(e,function(e,t){return e&&qe(t,Qe(t),e)}(C,e))}else{if(!Z[V])return u?e:{};C=function(e,t,n,i){var r=e.constructor;switch(t){case w:return Ve(e);case a:case s:return new r(+e);case v:return function(e,t){var n=t?Ve(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}(e,i);case b:case k:case _:case j:case S:case E:case O:case z:case T:return function(e,t){var n=t?Ve(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}(e,i);case f:return function(e,t,n){return G(t?n(N(e),!0):N(e),B,new e.constructor)}(e,i,n);case d:case g:return new r(e);case p:return function(e){var t=new e.constructor(e.source,A.exec(e));return t.lastIndex=e.lastIndex,t}(e);case m:return function(e,t,n){return G(t?n($(e),!0):$(e),H,new e.constructor)}(e,i,n);case y:return o=e,je?Object(je.call(o)):{}}var o}(e,V,Le,t)}}x||(x=new ze);var M=x.get(e);if(M)return M;if(x.set(e,C),!L)var D=n?function(e){return function(e,t,n){var i=t(e);return Ne(e)?i:function(e,t){for(var n=-1,i=t.length,r=e.length;++n<i;)e[r+n]=t[n];return e}(i,n(e))}(e,Qe,Fe)}(e):Qe(e);return function(e,t){for(var n=-1,i=e?e.length:0;++n<i&&!1!==t(e[n],n,e););}(D||e,(function(r,o){D&&(r=e[o=r]),Ae(C,o,Le(r,t,n,i,o,e,x))})),C}function Ze(e){return!(!We(e)||(t=e,Y&&Y in t))&&(Ue(e)||P(e)?te:C).test(Ge(e));var t}function Ve(e){var t=new e.constructor(e.byteLength);return new re(t).set(new re(e)),t}function qe(e,t,n,i){n||(n={});for(var r=-1,o=t.length;++r<o;){var a=t[r],s=i?i(n[a],e[a],a,n,e):void 0;Ae(n,a,void 0===s?e[a]:s)}return n}function Me(e,t){var n=e.__data__;return function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}(t)?n["string"==typeof t?"string":"hash"]:n.map}function De(e,t){var n=function(e,t){return null==e?void 0:e[t]}(e,t);return Ze(n)?n:void 0}Se.prototype.clear=function(){this.__data__=ye?ye(null):{}},Se.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},Se.prototype.get=function(e){var t=this.__data__;if(ye){var n=t[e];return n===i?void 0:n}return J.call(t,e)?t[e]:void 0},Se.prototype.has=function(e){var t=this.__data__;return ye?void 0!==t[e]:J.call(t,e)},Se.prototype.set=function(e,t){return this.__data__[e]=ye&&void 0===t?i:t,this},Ee.prototype.clear=function(){this.__data__=[]},Ee.prototype.delete=function(e){var t=this.__data__,n=Ce(t,e);return!(n<0)&&(n==t.length-1?t.pop():le.call(t,n,1),!0)},Ee.prototype.get=function(e){var t=this.__data__,n=Ce(t,e);return n<0?void 0:t[n][1]},Ee.prototype.has=function(e){return Ce(this.__data__,e)>-1},Ee.prototype.set=function(e,t){var n=this.__data__,i=Ce(n,e);return i<0?n.push([e,t]):n[i][1]=t,this},Oe.prototype.clear=function(){this.__data__={hash:new Se,map:new(ue||Ee),string:new Se}},Oe.prototype.delete=function(e){return Me(this,e).delete(e)},Oe.prototype.get=function(e){return Me(this,e).get(e)},Oe.prototype.has=function(e){return Me(this,e).has(e)},Oe.prototype.set=function(e,t){return Me(this,e).set(e,t),this},ze.prototype.clear=function(){this.__data__=new Ee},ze.prototype.delete=function(e){return this.__data__.delete(e)},ze.prototype.get=function(e){return this.__data__.get(e)},ze.prototype.has=function(e){return this.__data__.has(e)},ze.prototype.set=function(e,t){var n=this.__data__;if(n instanceof Ee){var i=n.__data__;if(!ue||i.length<199)return i.push([e,t]),this;n=this.__data__=new Oe(i)}return n.set(e,t),this};var Fe=ce?I(ce,Object):function(){return[]},Re=function(e){return ee.call(e)};function Be(e,t){return!!(t=null==t?r:t)&&("number"==typeof e||L.test(e))&&e>-1&&e%1==0&&e<t}function He(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||Q)}function Ge(e){if(null!=e){try{return K.call(e)}catch(t){}try{return e+""}catch(t){}}return""}function Pe(e,t){return e===t||e!==e&&t!==t}(he&&Re(new he(new ArrayBuffer(1)))!=v||ue&&Re(new ue)!=f||pe&&Re(pe.resolve())!=u||me&&Re(new me)!=m||ge&&Re(new ge)!=x)&&(Re=function(e){var t=ee.call(e),n=t==h?e.constructor:void 0,i=n?Ge(n):void 0;if(i)switch(i){case xe:return v;case we:return f;case ve:return u;case be:return m;case ke:return x}return t});var Ne=Array.isArray;function Ie(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=r}(e.length)&&!Ue(e)}var $e=fe||function(){return!1};function Ue(e){var t=We(e)?ee.call(e):"";return t==l||t==c}function We(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function Qe(e){return Ie(e)?Te(e):function(e){if(!He(e))return de(e);var t=[];for(var n in Object(e))J.call(e,n)&&"constructor"!=n&&t.push(n);return t}(e)}e.exports=function(e){return Le(e,!0,!0)}},2673:function(e,t,n){"use strict";n.d(t,{Z:function(){return kn}});var i=n(6586);var r=n(6988);function o(e){return function(e){if(Array.isArray(e))return(0,i.Z)(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||(0,r.Z)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var a,s,l,c,f,d,h,u,p,m,g,y,x,w,v,b,k,_,j,S,E,O,z,T,A,C,L,Z,V,q,M,D,F,R,B,H,G,P,N,I,$,U,W,Q,X,Y,K,J,ee,te,ne,ie,re,oe,ae,se,le,ce,fe,de,he,ue,pe,me,ge,ye,xe,we,ve,be,ke,_e,je,Se,Ee,Oe,ze,Te,Ae,Ce,Le,Ze,Ve,qe,Me,De,Fe,Re,Be,He,Ge,Pe,Ne,Ie,$e,Ue,We,Qe,Xe,Ye,Ke,Je,et,tt,nt,it,rt,ot,at,st,lt,ct,ft,dt,ht,ut,pt,mt,gt,yt,xt,wt,vt,bt,kt,_t,jt,St,Et,Ot,zt,Tt,At,Ct,Lt,Zt,Vt,qt,Mt,Dt,Ft,Rt,Bt,Ht,Gt,Pt,Nt,It,$t,Ut,Wt,Qt,Xt,Yt,Kt,Jt,en,tn,nn,rn,on,an,sn,ln,cn,fn,dn,hn,un,pn,mn,gn,yn=n(8216),xn=n(5997),wn=n(2209);function vn(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return bn(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return bn(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var i=0,r=function(){};return{s:r,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,a=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return a=e.done,e},e:function(e){s=!0,o=e},f:function(){try{a||null==n.return||n.return()}finally{if(s)throw o}}}}function bn(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function kn(e,t){var n=e.module();return n.variable(t("intro")).define("intro",["md"],(function(e){return e(a||(a=(0,wn.Z)(["# Algorithms and Data Structures \n## *by* Henry Gressmann\n<br>\n\n## Table of Contents\n\n> [Abstract](#abstract)<br>\n\n1. [Time Complexity](#timecomplexity)<br>\n1.1 [Bubble Sort](#bubblesort)<br>\n1.2 [Euclid's algorithm](#euclid)\n\n2. [Basic Data Structures](#basic)<br>\n  2.1 [Arrays](#array)<br>\n  2.2 [Linked Lists](#ll)<br>\n  2.3 [Stacks](#stacks)<br>\n  2.4 [Queues](#queues)<br>\n  2.5 [Hash Tables](#hash)\n\n3. [Graphs](#graphs)<br>\n  3.1 [Trees](#trees)<br>\n  3.2 [Depth-First Search](#dfs)\n\n4. [Advanced Algorithms and Data Structures](#advanced)<br>\n  4.1 [Bloom Filters](#bloom)<br>\n  4.2 [Radix Sort](#radix)"])))})),n.variable(t("abstract")).define("abstract",["md"],(function(e){return e(s||(s=(0,wn.Z)(["<br>\n\n# Abstract\nWelcome to my portfolio for *SE_02*, Algorithms and Data Structures. In this portfoilo, I will give an overview of important and practically relevant Algorithms and Data Structures. Going beond just the basics, I will guide you through the process of analysing some of their time complexities and provide you with interactive implementations and videos to better understand the inner workings and show how advanced concepts can be beautifully broken down.\n\nThis portfolio also acts as a starting point for many interesting topics and includes linked references to great resources that provide more in-depth knowledge about specific subjects. \n"])))})),n.variable(t("timecomplexity")).define("timecomplexity",["md","tex","bigOChart"],(function(e,t,n){return e(l||(l=(0,wn.Z)(["\n# 1. Time Complexity\n\nTime Complexity describes the amount of time it takes to run an algorithm.\nAfter implementing an algorithm, we often want a way to know more about its *execution time* based on any given input.\n\nOne way to estimate the time complexity is looking at the number of elementary operations performed by an algorithm. Commonly, we look at the *worst* and *average-case* time complexity, which describe the maximum and average time required by an algorithm respectively.\nHere, "," describes the actual running time of an algorithm, with "," commonly expressing the size of an input (for example the length of an array).\n\nSince generally, this is difficult to calculate exactly, time complexity is often expressed through **","**, the big O notation. This doesn't describe the exact time required but instead how the complexity behaves when the size of the input **","** changes.\n\nUsually, the big O notation describes an upper bound, however it can also be used to describe other properties of algorithms like the average or best-case time-complexity. These might also be described with "," and "," respectively.\n\nThe term inside of these is typically *asymptotical*. This means that it refers to a very large value of ",", allowing us to omit constants and any terms but the one with the largest rate of growth.\n\nAs an example, if we have a function ",", the resulting big O notation would be ",".\n\n<center>\n","<br>\nBig-O Complexity Chart by [bigocheatsheet.com](https://www.bigocheatsheet.com/)\n</center>\n\nThere are many different classes of time complexities. Here are some commonly encoutered ones to give an insight about how the big O notation works:\n\nOur Scenario: Let's say we have 10 randomly sorded differently colored pencils. \n\n* "," - *Constant Time*<br/>\nConstant time algorithms always take the same time to execute.<br>\n  Here, if we want to take the third pencil, this will have a time complexity of ","\n\n* "," - *Linear Time*<br/>\n  For linear time complexity, the time will always be proportional to the input size ",". In our example, this could be searching for the red colored pencil. Here, the worst-case would be that we need to look through all pencils, and the red pencil is at the last place.\n\n\n* "," - *Quadratic Time*<br/>\n  For Quadratic Time, time complexity will exponentially grow. This would be the case if we go through the list of pencils and write down a list of all previous pencils for each one we encounter. Another example is bubble sort, which I've used below to give an idea how one might calculate the complexity of an algorithm.\n\n* "," - *Logarithmic Time*<br/>\n  Here, the time complexity will be proportional to the logarithm of the input size ",". This is the exact opposite of quadratic time complexity. Instead of being multiplied, here the size is divided at each step.\n"])),t(c||(c=(0,wn.Z)(["T(n)"]))),t(f||(f=(0,wn.Z)(["n"]))),t(d||(d=(0,wn.Z)(["O(n)"]))),t(h||(h=(0,wn.Z)(["n"]))),t(u||(u=(0,wn.Z)(["Omega"],["\\Omega"]))),t(p||(p=(0,wn.Z)(["Theta"],["\\Theta"]))),t(m||(m=(0,wn.Z)(["n"]))),t(g||(g=(0,wn.Z)(["T(n)=5n^4+n^2+5"]))),t(y||(y=(0,wn.Z)(["O(n^4)"]))),n,t(x||(x=(0,wn.Z)(["O(1)"]))),t(w||(w=(0,wn.Z)(["T(n)= 3 = O(1)"]))),t(v||(v=(0,wn.Z)(["O(n)"]))),"n",t(b||(b=(0,wn.Z)(["O(n^2)"]))),t(k||(k=(0,wn.Z)(["O(log{n})"],["O(\\log{n})"]))),"n")})),n.variable(t("bubblesort")).define("bubblesort",["md","tex","reference"],(function(e,t,n){return e(_||(_=(0,wn.Z)(["\n## 1.1 Bubble Sort\n\n|||\n| ---------------- | ----------------- |\n| Best-Case Time Complexity  | ","  |\n| Worst-Case Time Complexity  | ","  |\n| Average Time Complexity  | ","  |\n| Total Space Complexity | ","  |\n| Stability | It depends |\n\nBubble Sort is one of the first sorting algorithm many people encounter. Arguably this is a bad thing: even in comparison with other simple sorting algorithms, it is extremly inefficient. Some even make the case for banishing the algorithm from education"," since even for small values, simple and efficient sorting algorithms exits. Insertion sort for example, while having the same worst-case time complexity of ",", performs significantly better. Even when looking at the aparent strengths of bubble sort, it is outperformed or matched in all of thers by insertion sort.\n\nI've included it here to show how usefull knowing the time-complexity of algorithms can be to avoid wasting processing time. \n\nBubble sort works by starting on the left hand side of an array and comparing the first two elements, then the second and third and so on. If the left element is larger than the right element, they are swapped. This is repeated until the array is sorted.\n\nIn the example implementation below I have also implemented a small optimisation to keep track if an element has been swaped.\n\n### Analysis\n\nFor the worst and average case, bubble sort requires us to do "," iterations. The first iteration will have to do "," comparisons, the second ",", making the total amount of comparisons quadratic:\n\n","\n\nThis applies to both the worst and the average case, since even with our optimisation, while faster, the big O notation won't change. This is because, on average, the few saved iteratins won't make a noticable difference that is larger than a constant (which big O doesn't include).\n\nHowever the optimization does improve the best case time complexity: Since we will break after the first iteration without any swaps, the time complexity is linear: ","\n\nTo see how the time complexity grows, I've included an cost counter in the example below. I've assigned a cost to each operation, so as the input grows, the cost will also grow. This is essentially the growth described by the big O notation and by plotting this number as the input grows, you can actually the big O of this function.\n\n### Space Complexity\nAs you have probably noticed, I've also included something called space complexity for this algorithm in the table above. The space complexity of an algorithm describes the amount of memory uses to function.\n\nIn the case of bubble sort, the space complexity actually is "," since we don't need to allocate any new space outside of the input. This includes something called auxiliary space, which is temporary space alocated by our algorithm with respect to the input size. For this algorithm, while we do use temporary variables like *swapped* in the example below, the amount of these doesn't change when our input grows so bubble sort has an auxiliary space of ",".\n\n\n```js\nbubbleSort = arr => {\n  for (var i = 0; i < arr.length; i++) {\n    let swapped = false;\n\n    for (var j = 0; j < arr.length - i - 1; j++) {\n      if (arr[j] > arr[j + 1]) {\n        // swap values\n        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n        swapped = true;\n      }\n    }\n\n    if (!swapped) break;\n  }\n\n  return arr;\n}\n```\n\n"],["\n## 1.1 Bubble Sort\n\n|||\n| ---------------- | ----------------- |\n| Best-Case Time Complexity  | ","  |\n| Worst-Case Time Complexity  | ","  |\n| Average Time Complexity  | ","  |\n| Total Space Complexity | ","  |\n| Stability | It depends |\n\nBubble Sort is one of the first sorting algorithm many people encounter. Arguably this is a bad thing: even in comparison with other simple sorting algorithms, it is extremly inefficient. Some even make the case for banishing the algorithm from education"," since even for small values, simple and efficient sorting algorithms exits. Insertion sort for example, while having the same worst-case time complexity of ",", performs significantly better. Even when looking at the aparent strengths of bubble sort, it is outperformed or matched in all of thers by insertion sort.\n\nI've included it here to show how usefull knowing the time-complexity of algorithms can be to avoid wasting processing time. \n\nBubble sort works by starting on the left hand side of an array and comparing the first two elements, then the second and third and so on. If the left element is larger than the right element, they are swapped. This is repeated until the array is sorted.\n\nIn the example implementation below I have also implemented a small optimisation to keep track if an element has been swaped.\n\n### Analysis\n\nFor the worst and average case, bubble sort requires us to do "," iterations. The first iteration will have to do "," comparisons, the second ",", making the total amount of comparisons quadratic:\n\n","\n\nThis applies to both the worst and the average case, since even with our optimisation, while faster, the big O notation won't change. This is because, on average, the few saved iteratins won't make a noticable difference that is larger than a constant (which big O doesn't include).\n\nHowever the optimization does improve the best case time complexity: Since we will break after the first iteration without any swaps, the time complexity is linear: ","\n\nTo see how the time complexity grows, I've included an cost counter in the example below. I've assigned a cost to each operation, so as the input grows, the cost will also grow. This is essentially the growth described by the big O notation and by plotting this number as the input grows, you can actually the big O of this function.\n\n### Space Complexity\nAs you have probably noticed, I've also included something called space complexity for this algorithm in the table above. The space complexity of an algorithm describes the amount of memory uses to function.\n\nIn the case of bubble sort, the space complexity actually is "," since we don't need to allocate any new space outside of the input. This includes something called auxiliary space, which is temporary space alocated by our algorithm with respect to the input size. For this algorithm, while we do use temporary variables like *swapped* in the example below, the amount of these doesn't change when our input grows so bubble sort has an auxiliary space of ",".\n\n\n\\`\\`\\`js\nbubbleSort = arr => {\n  for (var i = 0; i < arr.length; i++) {\n    let swapped = false;\n\n    for (var j = 0; j < arr.length - i - 1; j++) {\n      if (arr[j] > arr[j + 1]) {\n        // swap values\n        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n        swapped = true;\n      }\n    }\n\n    if (!swapped) break;\n  }\n\n  return arr;\n}\n\\`\\`\\`\n\n"])),t(j||(j=(0,wn.Z)(["O(n)"]))),t(S||(S=(0,wn.Z)(["O(n^2)"]))),t(E||(E=(0,wn.Z)(["O(n^2)"]))),t(O||(O=(0,wn.Z)(["O(n)"]))),n("https://users.cs.duke.edu/~ola/papers/bubble.pdf"),t(z||(z=(0,wn.Z)(["O(n^2)"]))),t(T||(T=(0,wn.Z)(["n"]))),t(A||(A=(0,wn.Z)(["(N - 1)"]))),t(C||(C=(0,wn.Z)(["(N - 2)"]))),t(L||(L=(0,wn.Z)(["1 + 2 + 3 + ... + (n - 1) = {n(n-1)over 2} = O(n^2)"],["1 + 2 + 3 + ... + (n - 1) = {n(n-1)\\over 2} = O(n^2)"]))),t(Z||(Z=(0,wn.Z)(["O(n)"]))),t(V||(V=(0,wn.Z)(["O(n)"]))),t(q||(q=(0,wn.Z)(["O(1)"]))))})),n.variable(t("bubbleSort")).define("bubbleSort",(function(){return function(e){for(var t=0,n=0;n<e.length;n++){t++;for(var i=!1,r=0;r<e.length-n-1;r++)if(t++,e[r]>e[r+1]){t++;var o=[e[r+1],e[r]];e[r]=o[0],e[r+1]=o[1],i=!0}if(!i)break}return[e,t]}})),n.variable(t("viewof bubble")).define("viewof bubble",["html"],(function(e){var t=e(M||(M=(0,wn.Z)(['<form>\n<h4>Enter a comma seperated list of numbers:</h4>  \n<div><input name=a value="348, 12, 3, 2, 1, 3, 4, 5"></div>\n</form>'])));return t.oninput=function(){return(t.value=t.a.value.replace(/ /g,"").split(",").map((function(e){return parseInt(e)||0}))).filter(Boolean)},t.oninput(),t})),n.variable(t("bubble")).define("bubble",["Generators","viewof bubble"],(function(e,t){return e.input(t)})),n.variable(t("bubbleview")).define("bubbleview",["md","bubbleSort","bubble"],(function(e,t,n){return e(D||(D=(0,wn.Z)(["\n**Result:** ","<br>\n**Cost:** ","\n"])),t(n)[0].join(", "),t(n)[1])})),n.variable(t("euclid")).define("euclid",["md","tex","reference"],(function(e,t,n){return e(F||(F=(0,wn.Z)(["# 1.2 Euclid's algorithm\n<style>table {width: auto}</style>\n\n|||\n| ---------------- | ----------------- |\n| Worst-Case Time Complexity  | "," Where "," is the number of base-10 digits of the smaller number |\n| Space Complexity | "," |\n\nI want to start off with a seemingly simple algorithm, Euclid's algorithm for calculating the greatest common denominator (gcd) of two real numbers.\n\nEuklid calculated the gcd by continuously subtracting the smaller value "," from the bigger value ",". When this wasn't possible anymore (since the resulting value "," was smaller than ","), he repeated this process with "," as the new smallest value.\n\n### Analysis\n\nEuclid's algorithm's time complexity has been studied since the early 19th century.",", marking the beginning of computational complexity theory and actually making it one of the first use-cases for fibonacci numbers.\n\nWhen looking at our implementation below, we can induce that, after two itereations of our loop, "," will be no more than half of its original value: "," \n\nSince the "," operator (`%`) doesn't take constant time, but instead depends on the number of digits of the number, this results in a time complexity of ",":\n","\n\nSince here, "," is the value of our input and not the size, Euclid's algorithm runs in "," time when given "," bits/digits. This makes it quadratically related to the input size, so ",", where "," is the number of digits of the smaller number, in this case ","\n\nNow, let's look if theres actually a case where our algorithm has this complexity, or if we can improve it further: \nBy looking at the possible values for "," and ",", we can induce that the worst-case scenario are two consecutive fibonacci numbers "," and ","\n\nSince ",", the algorithm can take\n"," steps.\n\nTherefore, because the modulo operator doesn't take a constant amount of time, we can deduce that our result of "," is correct.\n\n### Implementation\n\nIn the example below I've implemented a more modern version of this, utilising the *mod* operator `%`. This calculates the remainder of "," which is the equivalent to continuing to subtract `b` (since dividing is essentially repeated substraction).\n"],["# 1.2 Euclid's algorithm\n<style>table {width: auto}</style>\n\n|||\n| ---------------- | ----------------- |\n| Worst-Case Time Complexity  | "," Where "," is the number of base-10 digits of the smaller number |\n| Space Complexity | "," |\n\nI want to start off with a seemingly simple algorithm, Euclid's algorithm for calculating the greatest common denominator (gcd) of two real numbers.\n\nEuklid calculated the gcd by continuously subtracting the smaller value "," from the bigger value ",". When this wasn't possible anymore (since the resulting value "," was smaller than ","), he repeated this process with "," as the new smallest value.\n\n### Analysis\n\nEuclid's algorithm's time complexity has been studied since the early 19th century.",", marking the beginning of computational complexity theory and actually making it one of the first use-cases for fibonacci numbers.\n\nWhen looking at our implementation below, we can induce that, after two itereations of our loop, "," will be no more than half of its original value: "," \n\nSince the "," operator (\\`%\\`) doesn't take constant time, but instead depends on the number of digits of the number, this results in a time complexity of ",":\n","\n\nSince here, "," is the value of our input and not the size, Euclid's algorithm runs in "," time when given "," bits/digits. This makes it quadratically related to the input size, so ",", where "," is the number of digits of the smaller number, in this case ","\n\nNow, let's look if theres actually a case where our algorithm has this complexity, or if we can improve it further: \nBy looking at the possible values for "," and ",", we can induce that the worst-case scenario are two consecutive fibonacci numbers "," and ","\n\nSince ",", the algorithm can take\n"," steps.\n\nTherefore, because the modulo operator doesn't take a constant amount of time, we can deduce that our result of "," is correct.\n\n### Implementation\n\nIn the example below I've implemented a more modern version of this, utilising the *mod* operator \\`%\\`. This calculates the remainder of "," which is the equivalent to continuing to subtract \\`b\\` (since dividing is essentially repeated substraction).\n"])),t(R||(R=(0,wn.Z)(["O(h^2)"]))),t(B||(B=(0,wn.Z)(["h"]))),t(H||(H=(0,wn.Z)(["O(1)"]))),t(G||(G=(0,wn.Z)(["b"]))),t(P||(P=(0,wn.Z)(["a"]))),t(N||(N=(0,wn.Z)(["h"]))),t(I||(I=(0,wn.Z)(["a"]))),t($||($=(0,wn.Z)(["h"]))),n("https://www.sciencedirect.com/science/article/pii/S0315086084710317?via%3Dihub"),t(U||(U=(0,wn.Z)(["a"]))),t(W||(W=(0,wn.Z)(["T(a) = T(\frac{a}{2}) + 2"],["T(a) = T(\\frac{a}{2}) + 2"]))),t(Q||(Q=(0,wn.Z)(["mod"]))),t(X||(X=(0,wn.Z)(["O(log^2{a})"],["O(\\log^2{a})"]))),t(Y||(Y=(0,wn.Z)(["T(a) = T(\frac{a}{2}) + 2 cdot log{a}\\\nT(a) = O(log^2{a})"],["T(a) = T(\\frac{a}{2}) + 2 \\cdot \\log{a}\\\\\nT(a) = O(\\log^2{a})"]))),t(K||(K=(0,wn.Z)(["a"]))),t(J||(J=(0,wn.Z)(["log^2{a}"],["\\log^2{a}"]))),t(ee||(ee=(0,wn.Z)(["log{a}"],["\\log{a}"]))),t(te||(te=(0,wn.Z)(["O(h^2)"]))),t(ne||(ne=(0,wn.Z)(["h"]))),t(ie||(ie=(0,wn.Z)(["a"]))),t(re||(re=(0,wn.Z)(["a"]))),t(oe||(oe=(0,wn.Z)(["b"]))),t(ae||(ae=(0,wn.Z)(["a = F_{n+2}"]))),t(se||(se=(0,wn.Z)(["b = F_{n+1}"]))),t(le||(le=(0,wn.Z)(["F_n = \frac{phi^n}{sqrt{5}}"],["F_n = \\frac{\\phi^n}{\\sqrt{5}}"]))),t(ce||(ce=(0,wn.Z)(["log{b}"],["\\log{b}"]))),t(fe||(fe=(0,wn.Z)(["O(h^2)"]))),t(de||(de=(0,wn.Z)(["adiv b"],["a\\div b"]))))})),n.variable(t("gcd")).define("gcd",(function(){return function(e,t){for(var n=0;0!=t;){n++;var i=[t,e%t];e=i[0],t=i[1]}return[e,n]}})),n.variable(t("gcdmd")).define("gcdmd",["md"],(function(e){return e(he||(he=(0,wn.Z)(["```js\ngcd = (a, b) => {\n  while (b != 0)\n    [a, b] = [b, a % b]\n  return a\n}\n```"],["\\`\\`\\`js\ngcd = (a, b) => {\n  while (b != 0)\n    [a, b] = [b, a % b]\n  return a\n}\n\\`\\`\\`"])))})),n.variable(t("viewof args")).define("viewof args",["html"],(function(e){var t=e(ue||(ue=(0,wn.Z)(["<form>\n<h4>Try it out:</h4>  \n<div><i>a</i> <input min=1 name=a value=348 type=number></div>\n  <div><i>b</i> <input min=1 name=b value=290 type=number></div>\n</form>"])));return t.oninput=function(){return t.value=[t.a.valueAsNumber,t.b.valueAsNumber]},t.oninput(),t})),n.variable(t("args")).define("args",["Generators","viewof args"],(function(e,t){return e.input(t)})),n.variable(t("gcdview")).define("gcdview",["md","args","gcd"],(function(e,t,n){return e(pe||(pe=(0,wn.Z)(["gcd(",", ",") === **","**\n\nIterations: ",""])),t[0]||1,t[1]||1,n(t[0]||1,t[1]||1)[0],n(t[0]||1,t[1]||1)[1])})),n.variable(t("basic")).define("basic",["md"],(function(e){return e(me||(me=(0,wn.Z)(["\n<br>\n# 2. Basic Datastructures"])))})),n.variable(t("array")).define("array",["md","tex"],(function(e,t){return e(ge||(ge=(0,wn.Z)(["## 2.1 Arrays\n\n|||\n|--|--|\n|Appending Values| ","|\n|Searching Values| ","|\n|Deleting Values| ","|\n|Accessing Values| ","|\n|Space Complexity|",'|\n\nArrays are a Data Structure that contains a group of elements where each element is identified by at least one *index* (typically starting at 0). They can be sorted and are usually stored continuously in memory.\n\n```js\n     // [ index 0, index 1 ]\narray = [ "hello", "world" ];\narray[0] === "hello"\n```\n\n#### One-dimensional arrays\nThe simplest type of arrays are linear/one-dimensional arrays, to which the closest mathematical equivalent would be tupels:\n\n```js\n// A 1-dimensional array\n[ 0, 1, 2, 3 ];\n\n// The equivelant tupel\n```\n\n',"\n<br>\n\n#### Multi-dimensional arrays\nBy nesting arrays (having arrays filled with arrays), you can also represent more dimensons, for example, a two-dimensions array would be the equivalent of a matrix:\n\n```js\n// A 2-dimensional array\n[ [0, 1], [2, 3] ];\n\n// The equivelant matrix\n```\n\n","\n\n<br>\n#### Static and dynamic arrays\nArrays can be static, meaning their size has to be defined when they are created and elements can't be added or removed later. A lot of languages also support dynamic arrays, which don't have a fixed capacity.\n\n#### Other use cases\nOutside of these use cases, arrays are often used to implement other data structures such as [queues](#queues), [stacks](#stacks), [hash tables](#hash) and strings\n\n#### Arrays in programming languages\nArrays work differently depending on the programming language they are used in.\nThe array data type in programming languages can be implemented using array structures, [linked lists](#ll), [hash tables](#hash) or other data structures.\n\n#### Lists\nLists are an *abstract data type*, essentially an abstraction layer on top of a data structures such as arrays, that contain a countable collection of elements. In most programming languages, lists are implemented using dynamic arrays or [linked lists](#ll). How they work exactly depends strongly on the specific implementation of the programming language."],["## 2.1 Arrays\n\n|||\n|--|--|\n|Appending Values| ","|\n|Searching Values| ","|\n|Deleting Values| ","|\n|Accessing Values| ","|\n|Space Complexity|",'|\n\nArrays are a Data Structure that contains a group of elements where each element is identified by at least one *index* (typically starting at 0). They can be sorted and are usually stored continuously in memory.\n\n\\`\\`\\`js\n     // [ index 0, index 1 ]\narray = [ "hello", "world" ];\narray[0] === "hello"\n\\`\\`\\`\n\n#### One-dimensional arrays\nThe simplest type of arrays are linear/one-dimensional arrays, to which the closest mathematical equivalent would be tupels:\n\n\\`\\`\\`js\n// A 1-dimensional array\n[ 0, 1, 2, 3 ];\n\n// The equivelant tupel\n\\`\\`\\`\n\n',"\n<br>\n\n#### Multi-dimensional arrays\nBy nesting arrays (having arrays filled with arrays), you can also represent more dimensons, for example, a two-dimensions array would be the equivalent of a matrix:\n\n\\`\\`\\`js\n// A 2-dimensional array\n[ [0, 1], [2, 3] ];\n\n// The equivelant matrix\n\\`\\`\\`\n\n","\n\n<br>\n#### Static and dynamic arrays\nArrays can be static, meaning their size has to be defined when they are created and elements can't be added or removed later. A lot of languages also support dynamic arrays, which don't have a fixed capacity.\n\n#### Other use cases\nOutside of these use cases, arrays are often used to implement other data structures such as [queues](#queues), [stacks](#stacks), [hash tables](#hash) and strings\n\n#### Arrays in programming languages\nArrays work differently depending on the programming language they are used in.\nThe array data type in programming languages can be implemented using array structures, [linked lists](#ll), [hash tables](#hash) or other data structures.\n\n#### Lists\nLists are an *abstract data type*, essentially an abstraction layer on top of a data structures such as arrays, that contain a countable collection of elements. In most programming languages, lists are implemented using dynamic arrays or [linked lists](#ll). How they work exactly depends strongly on the specific implementation of the programming language."])),t(ye||(ye=(0,wn.Z)(["O(n)"]))),t(xe||(xe=(0,wn.Z)(["O(n)"]))),t(we||(we=(0,wn.Z)(["O(n)"]))),t(ve||(ve=(0,wn.Z)(["O(1)"]))),t(be||(be=(0,wn.Z)(["O(n)"]))),t(ke||(ke=(0,wn.Z)(["(0, 1, 2, 3)"]))),t(_e||(_e=(0,wn.Z)(["\begin{bmatrix}\n0 & 1\\\n2 & 3\nend{bmatrix}"],["\\begin{bmatrix}\n0 & 1\\\\\n2 & 3\n\\end{bmatrix}"]))))})),n.variable(t("ll")).define("ll",["md","tex","linkedlistsvg","doublell","circlell"],(function(e,t,n,i,r){return e(je||(je=(0,wn.Z)(["## 2.2 Linked lists\n\n|||\n|--|--|\n|Appending Values| ","|\n|Searching Values| ","|\n|Deleting Values| ","|\n|Accessing Values| ","|\n|Space Complexity|","|\n\nA linked list is a Data Structure consisting of a collection of elements.\nUnlike arrays, they are not stored in sequence in memory. Instead, each element or node points to the next one:\n\n","\n<br>\nThis makes insertion and removal of nodes more efficient than in arrays since we don't need to move all subsequent elements to a different memory location ("," or "," when the location of the node is known). The drawback of this approach is that access time is linear (",").\n\nLinked lists come in three different flavours:\n\n* #### Singly Linked Lists\n\n  Here, each note only contains one pointer to the next node.\n  The last node is linked to a terminator, represented by the X in the diagram above, which represents the link of the list\n\n* #### Doubly Linked Lists\n  Here, each note has two pointers, one to the previous node and one to the next node. This allows for more \n  efficient insertion or removal of nodes:\n\n  ","<br>\n\n* #### Circular Linked Lists\n  Circular linked lists are a variation of a linked list in which the last node points to the first node or any other node before it, thereby forming a loop.\n\n  ","\n\n\n"])),t(Se||(Se=(0,wn.Z)(["O(1)"]))),t(Ee||(Ee=(0,wn.Z)(["O(n)"]))),t(Oe||(Oe=(0,wn.Z)(["O(1)"]))),t(ze||(ze=(0,wn.Z)(["O(n)"]))),t(Te||(Te=(0,wn.Z)(["O(n)"]))),n,t(Ae||(Ae=(0,wn.Z)(["\n  O(n)"]))),t(Ce||(Ce=(0,wn.Z)(["\n  O(1)"]))),t(Le||(Le=(0,wn.Z)(["\n  O(n)"]))),i,r)})),n.variable(t("stacks")).define("stacks",["md","tex","stacksvg"],(function(e,t,n){return e(Ze||(Ze=(0,wn.Z)(["## 2.3 Stacks\n\n|||\n|--|--|\n|Appending Values| ","|\n|Searching Values| ","|\n|Deleting Values| ","|\n|Accessing Values| ","|\n|Space Complexity|","|\n\nA stack is an *abstract data type*, so an abstraction layer on top of a data structure such arrays, that contains a collection of elements. Stacks are characterised by two main operations, *push* and *pop*. *Push* adds a new element at the end and *pop* in turn removes the last element. This can be thought of like a stack of papers, where you can only add or remove elements on the top.\n\nStacks are also known as *LIFO* (last in first out) due to the order in which elements come off of it.\nThey are generally implemented using an array or linked list.\n\n","\n\n"])),t(Ve||(Ve=(0,wn.Z)(["O(1)"]))),t(qe||(qe=(0,wn.Z)(["O(n)"]))),t(Me||(Me=(0,wn.Z)(["O(1)"]))),t(De||(De=(0,wn.Z)(["O(n)"]))),t(Fe||(Fe=(0,wn.Z)(["O(n)"]))),n)})),n.variable(t("queues")).define("queues",["md","tex","queuesvg"],(function(e,t,n){return e(Re||(Re=(0,wn.Z)(["## 2.4 Queues\n\n||\n|--|--|\n|Appending Values| ","|\n|Searching Values| ","|\n|Deleting Values| ","|\n|Accessing Values| ","|\n|Space Complexity|","|\n\nQueues are an *abstract data type* that is very similar so stacks, the main difference being the order in which items are removed from.\n\nHere, similar to how for example a queue in a supermarket works, the first item that has been added is also the first item that will be removed.\nThis makes queues a FIFO (first in first out) data structure. \n\n","\n\n"])),t(Be||(Be=(0,wn.Z)(["O(1)"]))),t(He||(He=(0,wn.Z)(["O(n)"]))),t(Ge||(Ge=(0,wn.Z)(["O(1)"]))),t(Pe||(Pe=(0,wn.Z)(["O(n)"]))),t(Ne||(Ne=(0,wn.Z)(["O(n)"]))),n)})),n.variable(t("hash")).define("hash",["md","tex","hashtablesvg"],(function(e,t,n){return e(Ie||(Ie=(0,wn.Z)(["## 2.5 Hash Tables\n\n|||\n|--|--|\n|Average Time Complexity (all operations)| ","|\n|Worst Time Complexity (all operations)| ","|\n|Space Complexity| ",'|\n\nA Hash Table is a *data structure* which maps keys to values.\nTo accomplish this, we have an array of buckets, each of which is indexed by a so-called *hash code*. \nWhen adding a new key-value pair, we pass the key to a hash function. This hash function will ideally give us a unique *hash code*. When we pass `"foo"` to our hash function, we get `2`, which will be the index of our value (see the example below).\n\nBecause most hash table designs don\'t use a perfectly collision-free hash function, most implementations work around this in some way. Practically, these collisions are unavoidable, so almost all implementations have a strategy to work around this issue. Commonly, this is handled by for example storing multiple values at the same *hash code*/bucket (called *separate chaining*). This is often implemented using linked lists due to their simplicity and low average cost per lookup. Also, because the worst-case scenario is when all entries result in the same hash code, this leads to a low worst-case time complexity of ',"\n\nTypically through, the usage of hash functions enables us to have a constant average time complexity. This is independent of the number of elements because we only need to run the hash function on the key (which should take a constant amount of time) to get the address of our value. \n\n","\n\n"],["## 2.5 Hash Tables\n\n|||\n|--|--|\n|Average Time Complexity (all operations)| ","|\n|Worst Time Complexity (all operations)| ","|\n|Space Complexity| ",'|\n\nA Hash Table is a *data structure* which maps keys to values.\nTo accomplish this, we have an array of buckets, each of which is indexed by a so-called *hash code*. \nWhen adding a new key-value pair, we pass the key to a hash function. This hash function will ideally give us a unique *hash code*. When we pass \\`"foo"\\` to our hash function, we get \\`2\\`, which will be the index of our value (see the example below).\n\nBecause most hash table designs don\'t use a perfectly collision-free hash function, most implementations work around this in some way. Practically, these collisions are unavoidable, so almost all implementations have a strategy to work around this issue. Commonly, this is handled by for example storing multiple values at the same *hash code*/bucket (called *separate chaining*). This is often implemented using linked lists due to their simplicity and low average cost per lookup. Also, because the worst-case scenario is when all entries result in the same hash code, this leads to a low worst-case time complexity of ',"\n\nTypically through, the usage of hash functions enables us to have a constant average time complexity. This is independent of the number of elements because we only need to run the hash function on the key (which should take a constant amount of time) to get the address of our value. \n\n","\n\n"])),t($e||($e=(0,wn.Z)(["O(1)"]))),t(Ue||(Ue=(0,wn.Z)(["O(n)"]))),t(We||(We=(0,wn.Z)(["O(n)"]))),t(Qe||(Qe=(0,wn.Z)(["O(n)"]))),n)})),n.variable(t("graphs")).define("graphs",["md","sampleGraph","tex"],(function(e,t,n){return e(Xe||(Xe=(0,wn.Z)(["<style>.matrix table {width: auto; margin-left: 2rem;} td {padding: 0.3rem;}</style>\n# 3 Graphs\n\nA graph is an *abstract data type* which stores a set of nodes (also called vertices) and edges.\nGraphs are used to implement concepts from the mathematical field of graph theory and can be used to represent relationships and networks in complex datasets.\n\nUsually, a graph data structure provides the following operations:\n* Testing for Adjacentcy\n* Finding all neighbours of a specific node\n* Adding, removing and finding nodex/verticies\n* Adding, removing and finding edges\n\nGraphs can be directed, where edges have a direction, or undirected, where edges go both ways.\nBelow is an example of what a directed graph may look like. Here, edges are also known as arrows since they also contain the direction.\n\n","\n\nAn undirected graph in contrast doesn't have these arrows. This might be used to for example represent a network of users on a social media platform, where friends are connected using edges.\n\nThere can also be a vaule connected to each edge, the so called *edge value*. This can represent attributes like distances, costs or capacities. A real-world example for this would be airports, where this *edge value* would be the time it takes to fly to a different airport.\n\nThere are multiple different ways to create a data structure to represent graphs. In the following I want to show how the most popular ones could be used to represent the example graph I created above: \n\n- #### Adjacency lists\n  \n  In an adjacency list, each node stores a list of its neighbour nodes.\n  A significant advantage over other representations is that extemly space efficient for storing sparse graphs (a graph that has close to as many edges as nodes). Since they only store connected edges for each node, they don't waste any space on unconnected ones.\n  Compared to other approaches, this has a higher cost for removing vertices and edges, which makes it unfit for some use-cases.  \n\n<div class=matrix>\n\n|||\n|-|-|\n|Space Complexity: | "," |\n|Adding Nodes| "," |\n|Adding Edges| "," |\n|Removing Nodes| "," |\n|Removing Edges| "," |\n|Testing Adjacency| "," |\n\n\n<div class=matrix>\n\n| Vertex | Edges |\n|-----|---|\n|**A**| BC |\n|**B**| DE |\n|**C**| E |\n\n- #### Adjacency matrices<br><br>\n\n  An adjacency matrix is a square matrix (the same amount of collums as rows) that is used to represent graphs.\n  Here, each collum and row is a node. Edges are marked by the cells in this table.\n\n  Some advantages of adjacency matrices are that one can store *edge values* directly in this table and very \n  efficient adjacency testing.\n\n  However, there are also disadvantages. Adding and removing nodes and edges can be slow, since the whole matrix\n  needs to be resized.\n\n<div class=matrix>\n\n|     | A | B | C | D | E |\n|-----|---|---|---|---|---|\n|**A**| 0 | 1 | 1 | 0 | 0 |\n|**B**| 0 | 0 | 0 | 1 | 1 |\n|**C**| 0 | 0 | 0 | 0 | 1 |\n|**D**| 0 | 0 | 0 | 0 | 0 |\n|**E**| 0 | 0 | 0 | 0 | 0 |\n\n|||\n|-|-|\n|Space Complexity: | "," |\n|Adding Nodes| "," |\n|Adding Edges| "," |\n|Removing Nodes| "," |\n|Removing Edges| "," |\n|Testing Adjacency| "," |\n\n- #### Incidence matrices<br>\n\n  Incidence matrices represent graphs using nodes in rows and edges in columns.\n  For undirected graphs, where a cell is `1` if an edge and a node are connected.\n\n  Directed graphs use a slightly different notation. Here, if an edge leaves the node, we set the cell to `-1` and if it enters a node, we set it to `1` (sometimes, the opposite might be used however).\n  \n  Generally, these one of the least used representations of graphs du to the high cost of all operations. However if directionality and *edge values* matter, these can still be a good fit for some applications.\n\n<div class=matrix>\n\n|     | "," |  "," |  "," |  "," |  "," |\n|-----|---|---|---|---|---|\n|**A**| -1 | -1 | 0 | 0 | 0 |\n|**B**| 1 | 0 | -1 | -1 | 0 |\n|**C**| 0 | 1 | 0 | 0 | -1 |\n|**D**| 0 | 0 | 1 | 0 | 0 |\n|**E**| 0 | 0 | 0 | 1 | 1 |\n\n|||\n|-|-|\n|Space Complexity: | "," |\n|Adding Nodes| "," |\n|Adding Edges| "," |\n|Removing Nodes| "," |\n|Removing Edges| "," |\n|Testing Adjacency| "," |\n\nBelow, I've implemented an adjacency list based graph data structure using a [hash map](#hash) to store nodes and their edges. This will be used later on to implement [Depth First Search](#dfs), a graph traversal algorithm.\n"],["<style>.matrix table {width: auto; margin-left: 2rem;} td {padding: 0.3rem;}</style>\n# 3 Graphs\n\nA graph is an *abstract data type* which stores a set of nodes (also called vertices) and edges.\nGraphs are used to implement concepts from the mathematical field of graph theory and can be used to represent relationships and networks in complex datasets.\n\nUsually, a graph data structure provides the following operations:\n* Testing for Adjacentcy\n* Finding all neighbours of a specific node\n* Adding, removing and finding nodex/verticies\n* Adding, removing and finding edges\n\nGraphs can be directed, where edges have a direction, or undirected, where edges go both ways.\nBelow is an example of what a directed graph may look like. Here, edges are also known as arrows since they also contain the direction.\n\n","\n\nAn undirected graph in contrast doesn't have these arrows. This might be used to for example represent a network of users on a social media platform, where friends are connected using edges.\n\nThere can also be a vaule connected to each edge, the so called *edge value*. This can represent attributes like distances, costs or capacities. A real-world example for this would be airports, where this *edge value* would be the time it takes to fly to a different airport.\n\nThere are multiple different ways to create a data structure to represent graphs. In the following I want to show how the most popular ones could be used to represent the example graph I created above: \n\n- #### Adjacency lists\n  \n  In an adjacency list, each node stores a list of its neighbour nodes.\n  A significant advantage over other representations is that extemly space efficient for storing sparse graphs (a graph that has close to as many edges as nodes). Since they only store connected edges for each node, they don't waste any space on unconnected ones.\n  Compared to other approaches, this has a higher cost for removing vertices and edges, which makes it unfit for some use-cases.  \n\n<div class=matrix>\n\n|||\n|-|-|\n|Space Complexity: | "," |\n|Adding Nodes| "," |\n|Adding Edges| "," |\n|Removing Nodes| "," |\n|Removing Edges| "," |\n|Testing Adjacency| "," |\n\n\n<div class=matrix>\n\n| Vertex | Edges |\n|-----|---|\n|**A**| BC |\n|**B**| DE |\n|**C**| E |\n\n- #### Adjacency matrices<br><br>\n\n  An adjacency matrix is a square matrix (the same amount of collums as rows) that is used to represent graphs.\n  Here, each collum and row is a node. Edges are marked by the cells in this table.\n\n  Some advantages of adjacency matrices are that one can store *edge values* directly in this table and very \n  efficient adjacency testing.\n\n  However, there are also disadvantages. Adding and removing nodes and edges can be slow, since the whole matrix\n  needs to be resized.\n\n<div class=matrix>\n\n|     | A | B | C | D | E |\n|-----|---|---|---|---|---|\n|**A**| 0 | 1 | 1 | 0 | 0 |\n|**B**| 0 | 0 | 0 | 1 | 1 |\n|**C**| 0 | 0 | 0 | 0 | 1 |\n|**D**| 0 | 0 | 0 | 0 | 0 |\n|**E**| 0 | 0 | 0 | 0 | 0 |\n\n|||\n|-|-|\n|Space Complexity: | "," |\n|Adding Nodes| "," |\n|Adding Edges| "," |\n|Removing Nodes| "," |\n|Removing Edges| "," |\n|Testing Adjacency| "," |\n\n- #### Incidence matrices<br>\n\n  Incidence matrices represent graphs using nodes in rows and edges in columns.\n  For undirected graphs, where a cell is \\`1\\` if an edge and a node are connected.\n\n  Directed graphs use a slightly different notation. Here, if an edge leaves the node, we set the cell to \\`-1\\` and if it enters a node, we set it to \\`1\\` (sometimes, the opposite might be used however).\n  \n  Generally, these one of the least used representations of graphs du to the high cost of all operations. However if directionality and *edge values* matter, these can still be a good fit for some applications.\n\n<div class=matrix>\n\n|     | "," |  "," |  "," |  "," |  "," |\n|-----|---|---|---|---|---|\n|**A**| -1 | -1 | 0 | 0 | 0 |\n|**B**| 1 | 0 | -1 | -1 | 0 |\n|**C**| 0 | 1 | 0 | 0 | -1 |\n|**D**| 0 | 0 | 1 | 0 | 0 |\n|**E**| 0 | 0 | 0 | 1 | 1 |\n\n|||\n|-|-|\n|Space Complexity: | "," |\n|Adding Nodes| "," |\n|Adding Edges| "," |\n|Removing Nodes| "," |\n|Removing Edges| "," |\n|Testing Adjacency| "," |\n\nBelow, I've implemented an adjacency list based graph data structure using a [hash map](#hash) to store nodes and their edges. This will be used later on to implement [Depth First Search](#dfs), a graph traversal algorithm.\n"])),t,n(Ye||(Ye=(0,wn.Z)(["O(|V|+|E|)"]))),n(Ke||(Ke=(0,wn.Z)(["O(1)"]))),n(Je||(Je=(0,wn.Z)(["O(1)"]))),n(et||(et=(0,wn.Z)(["O(|E|)"]))),n(tt||(tt=(0,wn.Z)(["O(|V|)"]))),n(nt||(nt=(0,wn.Z)(["O(|V|)"]))),n(it||(it=(0,wn.Z)(["O(|V|^2)"]))),n(rt||(rt=(0,wn.Z)(["O(|V|^2)"]))),n(ot||(ot=(0,wn.Z)(["O(1)"]))),n(at||(at=(0,wn.Z)(["O(|E|^2)"]))),n(st||(st=(0,wn.Z)(["O(1)"]))),n(lt||(lt=(0,wn.Z)(["O(1)"]))),n(ct||(ct=(0,wn.Z)(["esmall{1}"],["e\\small{1}"]))),n(ft||(ft=(0,wn.Z)(["esmall{2}"],["e\\small{2}"]))),n(dt||(dt=(0,wn.Z)(["esmall{3}"],["e\\small{3}"]))),n(ht||(ht=(0,wn.Z)(["esmall{4}"],["e\\small{4}"]))),n(ut||(ut=(0,wn.Z)(["esmall{5}"],["e\\small{5}"]))),n(pt||(pt=(0,wn.Z)(["O(|V|cdot|E|)"],["O(|V|\\cdot|E|)"]))),n(mt||(mt=(0,wn.Z)(["O(|V|cdot|E|)"],["O(|V|\\cdot|E|)"]))),n(gt||(gt=(0,wn.Z)(["O(|V|cdot|E|)"],["O(|V|\\cdot|E|)"]))),n(yt||(yt=(0,wn.Z)(["O(|V|cdot|E|)"],["O(|V|\\cdot|E|)"]))),n(xt||(xt=(0,wn.Z)(["O(|V|cdot|E|)"],["O(|V|\\cdot|E|)"]))),n(wt||(wt=(0,wn.Z)(["O(|E|)"]))))})),n.variable(t("Graph")).define("Graph",(function(){return function(){function e(){(0,yn.Z)(this,e),this.adjacencyList=new Map}return(0,xn.Z)(e,[{key:"addVertex",value:function(e){return this.adjacencyList.set(e,[])}},{key:"addEdge",value:function(e,t){return this.adjacencyList.get(e).push(t)}},{key:"get",value:function(e){return this.adjacencyList.get(e)}}]),e}()})),n.variable(t("graphmd")).define("graphmd",["md"],(function(e){return e(vt||(vt=(0,wn.Z)(["\n```js\nclass Graph {\n  constructor() {\n    this.adjacencyList = new Map();\n  }\n  addVertex(vertex) {\n    return this.adjacencyList.set(vertex, []);\n  }\n  addEdge(vertex, destination) {\n    return this.adjacencyList.get(vertex).push(destination);\n  }\n  get(vertex) {\n    return this.adjacencyList.get(vertex);\n  }\n}\n```\n"],["\n\\`\\`\\`js\nclass Graph {\n  constructor() {\n    this.adjacencyList = new Map();\n  }\n  addVertex(vertex) {\n    return this.adjacencyList.set(vertex, []);\n  }\n  addEdge(vertex, destination) {\n    return this.adjacencyList.get(vertex).push(destination);\n  }\n  get(vertex) {\n    return this.adjacencyList.get(vertex);\n  }\n}\n\\`\\`\\`\n"])))})),n.variable(t("trees")).define("trees",["md","treesvg","reference"],(function(e,t,n){return e(bt||(bt=(0,wn.Z)(["\n## 3.1 Trees\n\nTrees are a sub-class of Graphs. Here, vertices are commonly called nodes and they contain one *root* node, the start of the tree. Each other node has to be connected to at least one node, it's parent.\nTrees don't contain any cycles, which makes them *acyclic*.\n\n","\n\nTrees have use-cases in all kind of areas of computer science and are the basis of many data structures. \nSome noteable uses include:\n* *Syntax Trees* for representing the structure of programming source code. These are usually used as an intermediary by interpreters or compilers to generate the actual machine or vm code from your source code.","\n\n* *Binary Trees* are one of the most used implementations of trees. Contrary to normal trees, nodes can only have a maximum of two direct child-nodes, typically a *left* and a *right* child.\nPractically, the most important applications of binary trees are *binray search trees*"," and *binary space partitioning*",".\n"])),t,n("https://www.languagestructure.se/basic-syntax-trees.html"),n("https://www.tutorialspoint.com/data_structures_algorithms/binary_search_tree.htm"),n("https://web.cs.wpi.edu/~matt/courses/cs563/talks/bsp/document.html"))})),n.variable(t("dfs")).define("dfs",["md","tex","reference"],(function(e,t,n){return e(kt||(kt=(0,wn.Z)(["## 3.2 Depth First Search\n\n|||\n|-|-|\n|Time Complexity|","|\n|Space Complexity|","|\n\nTo traverse/search Graphs or trees, multiple algorithms can be used. In this example, I'm going to use **Depth First Search (DFS)**, however depending on the data you are traversing, **Breadth First Search (BFS)**, which replaces the stack with a queue, might be a better fit.\n\nTraversing graphs has many practical applications connected to the field of graph theory including finding and identifying connected *subgraphs*"," and topological sorting",".\n\nIn practice you might also want to find the shortest path. For this, an algorithm like *Dijkstra's algorithm*"," or the <i>A*-algorithm</i>"," would be a better fit. These are can be incredible usefull for operations like calculation routes for map applications or pathfinding in games. \n\n#### Complexity\n\nSince in depth-first search, we visit every vertex/node and check every edge once, assuming the graph is represented as an adjacency list, the time complexity will be ",".\n\nThis also assumes a graph without repretition. For Graphs with repetition, the time complexity will be ",", where "," is the branching factor and "," the depth.\n\nIn this case, compared to Breadth First Search, Depth First Search provides a better Space Complexity. Here, BFS's worst-case space complexity is ",", compared to DFS's ",". However, this is can be a tradeof  since BFS can also be for finding the shortest path between two nodes.\n"])),t(_t||(_t=(0,wn.Z)(["O(|V|+|E|)"]))),t(jt||(jt=(0,wn.Z)(["O(|V|)"]))),n("https://www.baeldung.com/cs/graph-connected-components"),n("https://www.baeldung.com/cs/dag-topological-sort"),n("https://brilliant.org/wiki/dijkstras-short-path-finder/"),n("http://theory.stanford.edu/~amitp/GameProgramming/AStarComparison.html"),t(St||(St=(0,wn.Z)(["O(|V|+|E|)"]))),t(Et||(Et=(0,wn.Z)(["O(b^d)"]))),t(Ot||(Ot=(0,wn.Z)(["b"]))),t(zt||(zt=(0,wn.Z)(["d"]))),t(Tt||(Tt=(0,wn.Z)(["O(b^d)"]))),t(At||(At=(0,wn.Z)(["O(bd)"]))))})),n.variable(t("depthFirstSearch")).define("depthFirstSearch",(function(){return function(e){for(var t=e.graph,n=e.start,i=(e.target,new Set),r=[n];0!==r.length;){var o=r.pop();if(!i.has(o)){i.add(o);var a,s=vn(t.get(o).slice().reverse());try{for(s.s();!(a=s.n()).done;){var l=a.value;r.push(l)}}catch(c){s.e(c)}finally{s.f()}}}return i}})),n.variable(t("dfsmd")).define("dfsmd",["md"],(function(e){return e(Ct||(Ct=(0,wn.Z)(['\n```js\ndepthFirstSearch = ({ graph, start, target }) => {\n  const visited = new Set();\n  const stack = [start];\n\n  while (stack.length !== 0) {\n    const vertex = stack.pop();\n    if (visited.has(vertex)) continue;\n    visited.add(vertex);\n\n    for (let edge of graph\n      .get(vertex)\n      .slice()\n      .reverse())\n      stack.push(edge);\n  }\n\n  return visited;\n}\n\nconst graph = new Graph();\ngraph.addVertex("a");\ngraph.addVertex("b");\ngraph.addVertex("c");\ngraph.addVertex("d");\ngraph.addVertex("e");\ngraph.addVertex("f");\ngraph.addVertex("g");\ngraph.addEdge("a", "b");\ngraph.addEdge("a", "c");\ngraph.addEdge("a", "e");\ngraph.addEdge("b", "d");\ngraph.addEdge("b", "f");\ngraph.addEdge("c", "g");\ngraph.addEdge("e", "f");\ngraph.addEdge("f", "e");\n\nreturn depthFirstSearch({ graph, start: "a", target: "d" });\n```\n'],['\n\\`\\`\\`js\ndepthFirstSearch = ({ graph, start, target }) => {\n  const visited = new Set();\n  const stack = [start];\n\n  while (stack.length !== 0) {\n    const vertex = stack.pop();\n    if (visited.has(vertex)) continue;\n    visited.add(vertex);\n\n    for (let edge of graph\n      .get(vertex)\n      .slice()\n      .reverse())\n      stack.push(edge);\n  }\n\n  return visited;\n}\n\nconst graph = new Graph();\ngraph.addVertex("a");\ngraph.addVertex("b");\ngraph.addVertex("c");\ngraph.addVertex("d");\ngraph.addVertex("e");\ngraph.addVertex("f");\ngraph.addVertex("g");\ngraph.addEdge("a", "b");\ngraph.addEdge("a", "c");\ngraph.addEdge("a", "e");\ngraph.addEdge("b", "d");\ngraph.addEdge("b", "f");\ngraph.addEdge("c", "g");\ngraph.addEdge("e", "f");\ngraph.addEdge("f", "e");\n\nreturn depthFirstSearch({ graph, start: "a", target: "d" });\n\\`\\`\\`\n'])))})),n.variable(t("depthFirstSearchResult")).define("depthFirstSearchResult",["Graph","depthFirstSearch"],(function(e,t){var n=new e;return n.addVertex("a"),n.addVertex("b"),n.addVertex("c"),n.addVertex("d"),n.addVertex("e"),n.addVertex("f"),n.addVertex("g"),n.addEdge("a","b"),n.addEdge("a","c"),n.addEdge("a","e"),n.addEdge("b","d"),n.addEdge("b","f"),n.addEdge("c","g"),n.addEdge("e","f"),n.addEdge("f","e"),t({graph:n,start:"a",target:"d"})})),n.variable(t("advanced")).define("advanced",["md"],(function(e){return e(Lt||(Lt=(0,wn.Z)(["\n<br>\n# 4. Advanced Algorithms and Data Structures\n\nNow, I would like to showcase my two of my favourite more advanced Algorithms and Data Structures. These can be extremely useful and solve problems in an elegant and unexpected way"])))})),n.variable(t("bloom")).define("bloom",["md","tex"],(function(e,t){return e(Zt||(Zt=(0,wn.Z)(["## 4.1 Bloom Filters\n\n|||\n|-|-|\n|Insertion|","|\n|Search|","|\n|Space Complexity|",'|\n\nA Bloom filter is an extremely space-efficient data structure. They represent a collection of elements and provided the option to insert new elements or search for elements. It is probabilistic, this means that false positives for the search are possible, but false negatives are not.\n\nFor an explanation of how they work, check out my short video:\n\n<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/r4bZBu61DW4" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>\n\nI\'ve created a simple implementation of Bloom filters that you can try out below.\n\nSomething that helped me immensely when learning about them is that bloom filters function very similarly to a [Hash Map](#hash) when setting the size to the item count (essentially making it deterministic).\nYou can essentially think of a bloom filter as a hashmap where all buckets have been compressed into a single string with either a value of 1 (the value has been set) or 0 (the value doesn\'t exist).\n'])),t(Vt||(Vt=(0,wn.Z)(["O(k)"]))),t(qt||(qt=(0,wn.Z)(["O(k)"]))),t(Mt||(Mt=(0,wn.Z)(["O(m)"]))))})),n.variable(t("BloomFilter")).define("BloomFilter",["mmh"],(function(e){return function(){function t(e){var n=e.probability,i=void 0===n?.05:n,r=e.itemCount,o=void 0===r?20:r;(0,yn.Z)(this,t);var a=Math.floor(-o*Math.log(i)/Math.pow(Math.log(2),2));Object.assign(this,{probability:i,size:a,hashCount:a/o*Math.log(2),value:Array(a).fill(0)})}return(0,xn.Z)(t,[{key:"add",value:function(t){for(var n=0;n<this.hashCount;n++){var i=e(t,n)%this.size;this.value[i]=1}}},{key:"check",value:function(t){for(var n=0;n<this.hashCount;n++){var i=e(t,n)%this.size;if(!this.value[i])return!1}return!0}}]),t}()})),n.variable(t("bloommd")).define("bloommd",["md"],(function(e){return e(Dt||(Dt=(0,wn.Z)(['\n```js\nclass BloomFilter {\n  constructor({ probability = 0.05, itemCount = 20 }) {\n    const size = Math.floor(\n      -(itemCount * Math.log(probability)) / Math.log(2) ** 2\n    );\n\n    Object.assign(this, {\n      probability,\n      size,\n      hashCount: (size / itemCount) * Math.log(2),\n      value: Array(size).fill(0)\n    });\n  }\n\n  add(item) {\n    for (let i = 0; i < this.hashCount; i++) {\n      const digest = mmh(item, i) % this.size;\n      this.value[digest] = 1;\n    }\n  }\n\n  check(item) {\n    for (let i = 0; i < this.hashCount; i++) {\n      const digest = mmh(item, i) % this.size;\n      if (!this.value[digest]) return false;\n    }\n    return true;\n  }\n}\n\nconst bloom = new BloomFilter({ itemCount: 10 });\nbloom.add("blue");\nbloom.check("green"); // -> false\nbloom.check("blue"); // -> true\nreturn bloom.value.join(\'\');\n```\n'],['\n\\`\\`\\`js\nclass BloomFilter {\n  constructor({ probability = 0.05, itemCount = 20 }) {\n    const size = Math.floor(\n      -(itemCount * Math.log(probability)) / Math.log(2) ** 2\n    );\n\n    Object.assign(this, {\n      probability,\n      size,\n      hashCount: (size / itemCount) * Math.log(2),\n      value: Array(size).fill(0)\n    });\n  }\n\n  add(item) {\n    for (let i = 0; i < this.hashCount; i++) {\n      const digest = mmh(item, i) % this.size;\n      this.value[digest] = 1;\n    }\n  }\n\n  check(item) {\n    for (let i = 0; i < this.hashCount; i++) {\n      const digest = mmh(item, i) % this.size;\n      if (!this.value[digest]) return false;\n    }\n    return true;\n  }\n}\n\nconst bloom = new BloomFilter({ itemCount: 10 });\nbloom.add("blue");\nbloom.check("green"); // -> false\nbloom.check("blue"); // -> true\nreturn bloom.value.join(\'\');\n\\`\\`\\`\n'])))})),n.variable(t()).define(["BloomFilter"],(function(e){var t=new e({itemCount:10});return t.add("blue"),t.check("green"),t.check("blue"),t.value.join("")})),n.variable(t("radix")).define("radix",["md","tex","reference"],(function(e,t,n){return e(Ft||(Ft=(0,wn.Z)(["## 4.2 Radix Sort\n|||\n| ---------------- | ----------------- |\n| Time Complexity  | "," (where k is the number of bits or digits required to store the largest element of the list) |\n| Space Complexity | ",' |\n| Stability | It depends |\n\nRadix sort is a sorting algorithm that works without actually comparing any elements.\nTo see how this is done, check out my short video explaining how it works: \n\n<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/5M1Cm1Xx96o" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>\n\nTypically, there are two different flavors of radix sort:\n* **LDS** (least significant digit)<br>\n  We start with the least significant digit of a number, e.g for `12345` we start from the right with the digit, `5`. In the example below this is implemented by the `getDigitRight` function.\n* **MDS** (most significant digit)<br>\n  Here, we start from the left of the number instead. A caveat of this approch is, that it requires us to create "sub-buckets" at each step for buckets with two or more elements.\n\n#### Analysis\n\nBy looking at the implementation below, we can see that the worst, average and best time complexity have to be the same, since no matter the order of our input array, all *for loops* will always run till the end.\n\nOptimizations to improve this do exist: some modified versions of radix sort actually use different sorting algorithms like insertion sort when the buckets get smaller, leading to significant performance increases.\n\nThis algorithm also depends on the number of digits (the first *for loop*) and the base of our numbers, in this case only *base 10* (radix sort can also work for other bases like binary numbers).\n\nDue to these factors, the time-complexity has to be ',", where "," is the base of the numberes we are sorting and "," is the maximum number of digits in our list.\n\nWhen "," is the largest value in our array, then the maximum number of digits would be ",", resulting in ","\n\nWe can simplify this to just "," since ",", the denominator of ",", will be constant",".\n\nThe space complexity can be calculated as ",", since radix sort's space complexity is bound by the space complexity of counting sort, the sorting method it uses to sort each radix. Here, we need to create "," buckets in addition to storing the array itself, which takes up a space of ",".\n\n#### Stability\nStability depends on the implementation. Radix sort can be implemented to start at the most significant digit (MSD) or the least significant digit (LSD). The sample implementation below is using LSD, which is generally stable. MSD can produce unstable results when the order of duplicate keys must be maintained.\n\nIt is possible to create a stable MSD implementation, though this requires the use of a memory buffer of the same size as the input, allowing us to scan from left to right and placing items in the bins in the same order.\n\n#### Optimizations\nTo further optimise the performance of radix sort, the nature of radix sort allows for multiple optimizations:\n* Due to the independent sorting of buckets, it can be parallized to run the different steps on multiple computer cores\n* You can create hybrid approaches, where as the buckets get smaller, counting sort gets replaced for another sorting algorithm like insertion sort.\n"],["## 4.2 Radix Sort\n|||\n| ---------------- | ----------------- |\n| Time Complexity  | "," (where k is the number of bits or digits required to store the largest element of the list) |\n| Space Complexity | ",' |\n| Stability | It depends |\n\nRadix sort is a sorting algorithm that works without actually comparing any elements.\nTo see how this is done, check out my short video explaining how it works: \n\n<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/5M1Cm1Xx96o" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>\n\nTypically, there are two different flavors of radix sort:\n* **LDS** (least significant digit)<br>\n  We start with the least significant digit of a number, e.g for \\`12345\\` we start from the right with the digit, \\`5\\`. In the example below this is implemented by the \\`getDigitRight\\` function.\n* **MDS** (most significant digit)<br>\n  Here, we start from the left of the number instead. A caveat of this approch is, that it requires us to create "sub-buckets" at each step for buckets with two or more elements.\n\n#### Analysis\n\nBy looking at the implementation below, we can see that the worst, average and best time complexity have to be the same, since no matter the order of our input array, all *for loops* will always run till the end.\n\nOptimizations to improve this do exist: some modified versions of radix sort actually use different sorting algorithms like insertion sort when the buckets get smaller, leading to significant performance increases.\n\nThis algorithm also depends on the number of digits (the first *for loop*) and the base of our numbers, in this case only *base 10* (radix sort can also work for other bases like binary numbers).\n\nDue to these factors, the time-complexity has to be ',", where "," is the base of the numberes we are sorting and "," is the maximum number of digits in our list.\n\nWhen "," is the largest value in our array, then the maximum number of digits would be ",", resulting in ","\n\nWe can simplify this to just "," since ",", the denominator of ",", will be constant",".\n\nThe space complexity can be calculated as ",", since radix sort's space complexity is bound by the space complexity of counting sort, the sorting method it uses to sort each radix. Here, we need to create "," buckets in addition to storing the array itself, which takes up a space of ",".\n\n#### Stability\nStability depends on the implementation. Radix sort can be implemented to start at the most significant digit (MSD) or the least significant digit (LSD). The sample implementation below is using LSD, which is generally stable. MSD can produce unstable results when the order of duplicate keys must be maintained.\n\nIt is possible to create a stable MSD implementation, though this requires the use of a memory buffer of the same size as the input, allowing us to scan from left to right and placing items in the bins in the same order.\n\n#### Optimizations\nTo further optimise the performance of radix sort, the nature of radix sort allows for multiple optimizations:\n* Due to the independent sorting of buckets, it can be parallized to run the different steps on multiple computer cores\n* You can create hybrid approaches, where as the buckets get smaller, counting sort gets replaced for another sorting algorithm like insertion sort.\n"])),t(Rt||(Rt=(0,wn.Z)(["O(n cdot k) scriptsize "],["O(n \\cdot k) \\scriptsize "]))),t(Bt||(Bt=(0,wn.Z)(["O(n + k)"]))),t(Ht||(Ht=(0,wn.Z)(["T(n) = O(d(n+b))"]))),t(Gt||(Gt=(0,wn.Z)(["b"]))),t(Pt||(Pt=(0,wn.Z)(["d"]))),t(Nt||(Nt=(0,wn.Z)(["v"]))),t(It||(It=(0,wn.Z)(["log_b{v}"]))),t($t||($t=(0,wn.Z)(["O((n+b) * log_b{v})"]))),t(Ut||(Ut=(0,wn.Z)(["O(n cdot k)"],["O(n \\cdot k)"]))),t(Wt||(Wt=(0,wn.Z)(["b"]))),t(Qt||(Qt=(0,wn.Z)(["log_b{v}"]))),n("https://cs.stackexchange.com/a/98060"),t(Xt||(Xt=(0,wn.Z)(["O(n+k)"]))),t(Yt||(Yt=(0,wn.Z)(["k"]))),t(Kt||(Kt=(0,wn.Z)(["n"]))))})),n.variable(t("radixSort")).define("radixSort",["getDigitRight"],(function(e){return function(t){for(var n=Math.max.apply(Math,o(t.map((function(e){return e.toString().length})))),i=0;i<n;i++){for(var r=Array(10).fill().map((function(){return[]})),a=0;a<t.length;a++)r[e(t[a],i)].push(t[a]);t=r.flat()}return t}})),n.variable(t("radixmd")).define("radixmd",["md"],(function(e){return e(Jt||(Jt=(0,wn.Z)(["\n```js\nradixSort = array => {\n  const maxDigits = Math.max(...array.map(n => n.toString().length));\n\n  for (let i = 0; i < maxDigits; i++) {\n    const buckets = Array(10)\n      .fill()\n      .map(() => []);\n\n    for (let j = 0; j < array.length; j++)\n      buckets[getDigitRight(array[j], i)].push(array[j]);\n\n    array = buckets.flat();\n  }\n\n  return array;\n}\n```\n"],["\n\\`\\`\\`js\nradixSort = array => {\n  const maxDigits = Math.max(...array.map(n => n.toString().length));\n\n  for (let i = 0; i < maxDigits; i++) {\n    const buckets = Array(10)\n      .fill()\n      .map(() => []);\n\n    for (let j = 0; j < array.length; j++)\n      buckets[getDigitRight(array[j], i)].push(array[j]);\n\n    array = buckets.flat();\n  }\n\n  return array;\n}\n\\`\\`\\`\n"])))})),n.variable(t()).define(["md"],(function(e){return e(en||(en=(0,wn.Z)(["### Try it out:"])))})),n.variable(t("viewof randomArray")).define("viewof randomArray",["generateRandomArray","html"],(function(e,t){var n=e(15),i=t(tn||(tn=(0,wn.Z)(["<button>randomize input"])));return Object.defineProperty(i,"value",{get:function(){return n}}),i.onclick=function(){return n=e(15)},i})),n.variable(t("randomArray")).define("randomArray",["Generators","viewof randomArray"],(function(e,t){return e.input(t)})),n.variable(t("radixView")).define("radixView",["md","randomArray","radixSort"],(function(e,t,n){return e(nn||(nn=(0,wn.Z)(["**input**:<br>\n","</br>\n<br>**radixSort(input)**:<br>","</br></br>"])),t.join(", "),n(t).join(", "))})),n.variable(t("credits")).define("credits",["md","referenceData","html","DOM"],(function(e,t,n,i){return e(rn||(rn=(0,wn.Z)(['\n# Licenses\n\nUnless otherwise noted, this work by Henry Gressmann (including diagrams, videos and text) is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution 4.0 International License</a>.\n\nUnless otherwise noted, all code examples are also licensed under the [MIT-License](https://opensource.org/licenses/MIT), copyright 2020 Henry Gressmann.\n\nThe latest version of this document is available on https://henrygressmann.de/algorithms-and-datastructures and https://observablehq.com/d/1dca47f33f5a5cce \n\n# References\n\n<ol class="references">',"\n\nCodility Chapter 12. Retrieved 25 October 2020, from https://codility.com/media/train/10-Gcd.pdf\n\nDictionary of Algorithms and Data Structures. (2020). Retrieved 25 October 2020, from https://www.nist.gov/dads\n\nTime complexity of Euclid's Algorithm. (2020). Retrieved 25 October 2020, from https://www.xspdf.com/resolution/54304117.html\n\nRowell, E., Big-O Algorithm Complexity Cheat Sheet. Retrieved October 25, 2020, from https://www.bigocheatsheet.com/\n\nPerez, D., Node-murmurhash [Murmur3 Implementation used for bloom filters]. Retrieved 25 October 2020, from https://github.com/perezd/node-murmurhash\n"])),t.map((function(e){return n(on||(on=(0,wn.Z)(['\n<li><a title="','" href="','">',"</a>"])),e.title,e.url,i.text(e.url.replace(/^http[s]\:\/\//,"")))})))})),n.variable(t()).define(["md"],(function(e){return e(an||(an=(0,wn.Z)(["## Utils"])))})),n.variable(t("mmh")).define("mmh",["require"],(function(e){return e("murmurhash@2.0.0/murmurhash.js").catch((function(){return window.murmur}))})),n.variable(t("generateRandomArray")).define("generateRandomArray",(function(){return function(e){return Array(e).fill().map((function(){return Math.floor(40*Math.random())+1}))}})),n.variable(t("getDigitRight")).define("getDigitRight",(function(){return function(e,t){return parseInt(e.toString().split("").reverse().join("").charAt(t))||0}})),n.define("initial referenceData",(function(){return[]})),n.variable(t("mutable referenceData")).define("mutable referenceData",["Mutable","initial referenceData"],(function(e,t){return new e(t)})),n.variable(t("referenceData")).define("referenceData",["mutable referenceData"],(function(e){return e.generator})),n.variable(t("reference")).define("reference",["referenceData","html","mutable referenceData"],(function(e,t,n){return function(i){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";e.length||document.head.appendChild(t(sn||(sn=(0,wn.Z)(['\n<style>\n\nol.references {\n  counter-reset: list;\n  padding-left: 0;\n}\n\nol.references li {\n  list-style: none;\n}\n\nol.references li:before {\n  content: "[" counter(list) "] ";\n  counter-increment: list;\n}\n\nol.references a {\n  font-family: var(--sans-serif);\n  font-size: 92%;\n}\n\n</style>']))));var o=n.value.findIndex((function(e){return e.url===i}));if(o<0)o=n.value.push({url:i,title:r}),n.value=n.value;else{var a=n.value[o];i=a.url,r=a.title,++o}var s=document.createElement("A");return s.className="reference",s.title=r,s.rel="noreferrer",s.target="_blank",s.textContent=o.toString().replace(/\d/g,(function(e){return"\u2070\xb9\xb2\xb3\u2074\u2075\u2076\u2077\u2078\u2079"[e]})),s.href=i,s}})),n.variable(t("sampleGraph")).define("sampleGraph",["svg"],(function(e){return e(ln||(ln=(0,wn.Z)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="331px" height="281px" viewBox="-0.5 -0.5 331 281" style="background-color: rgb(255, 255, 255);"><defs/><g><ellipse cx="210" cy="40" rx="40" ry="40" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 40px; margin-left: 171px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 42px">A</font></div></div></div></foreignObject><text x="210" y="44" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">A</text></switch></g><ellipse cx="130" cy="140" rx="40" ry="40" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 140px; margin-left: 91px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 42px">B</font></div></div></div></foreignObject><text x="130" y="144" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">B</text></switch></g><ellipse cx="290" cy="140" rx="40" ry="40" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 140px; margin-left: 251px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 42px">C</font></div></div></div></foreignObject><text x="290" y="144" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">C</text></switch></g><ellipse cx="40" cy="240" rx="40" ry="40" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 240px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 42px">D</font></div></div></div></foreignObject><text x="40" y="244" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">D</text></switch></g><ellipse cx="210" cy="240" rx="40" ry="40" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 240px; margin-left: 171px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 42px">E</font></div></div></div></foreignObject><text x="210" y="244" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">E</text></switch></g><path d="M 188 75.04 L 162.29 106.77" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 158.99 110.85 L 160.68 103.2 L 162.29 106.77 L 166.11 107.61 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 100 170 L 72.14 206.65" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 68.96 210.83 L 70.41 203.14 L 72.14 206.65 L 75.98 207.37 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 158.28 168.28 L 182.93 202.35" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 186.01 206.61 L 179.07 202.99 L 182.93 202.35 L 184.74 198.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 269.04 178 L 242.58 207.01" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 239.04 210.89 L 241.17 203.36 L 242.58 207.01 L 246.34 208.08 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 238.28 68.28 L 262.93 102.35" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 266.01 106.61 L 259.07 102.99 L 262.93 102.35 L 264.74 98.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>'])))})),n.variable(t("linkedlistsvg")).define("linkedlistsvg",["svg"],(function(e){return e(cn||(cn=(0,wn.Z)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="461px" height="63px" viewBox="-0.5 -0.5 461 63" style="background-color: rgb(255, 255, 255);"><defs></defs><g><rect x="0" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;0&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="2" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;0&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 50 60 L 50 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 95 30 L 113.63 30" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 118.88 30 L 111.88 33.5 L 113.63 30 L 111.88 26.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="75" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><rect x="120" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 122px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;1&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="122" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;1&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 170 60 L 170 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 215 30 L 233.63 30" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 238.88 30 L 231.88 33.5 L 233.63 30 L 231.88 26.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="195" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><rect x="240" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 242px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;2&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="242" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;2&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 290 60 L 290 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 335 30 L 355 30 L 340 30 L 353.63 30" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 358.88 30 L 351.88 33.5 L 353.63 30 L 351.88 26.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="315" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><rect x="360" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 362px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;3&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="362" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;3&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 410 60 L 410 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><ellipse cx="435" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 30px; margin-left: 416px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #333333; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 30px">X</font></div></div></div></foreignObject><text x="435" y="34" fill="#333333" font-family="Helvetica" font-size="12px" text-anchor="middle">X</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>'])))})),n.variable(t("doublell")).define("doublell",["svg"],(function(e){return e(fn||(fn=(0,wn.Z)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="431px" height="65px" viewBox="-0.5 -0.5 431 65" style="background-color: rgb(255, 255, 255);"><defs></defs><g><rect x="0" y="0" width="130" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 128px; height: 1px; padding-top: 30px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 38px">0</span></div></div></div></foreignObject><text x="65" y="34" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">0</text></switch></g><path d="M 85 60 L 84.5 1.14" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 43.29 61.02 L 43.29 -0.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><ellipse cx="22" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><ellipse cx="107" cy="31" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><rect x="150" y="0.55" width="130" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 128px; height: 1px; padding-top: 31px; margin-left: 151px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 38px">1</span></div></div></div></foreignObject><text x="215" y="34" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">1</text></switch></g><path d="M 235 60.55 L 234.5 1.69" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 193.29 61.57 L 193.29 0.43" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><ellipse cx="172" cy="30.55" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><ellipse cx="257" cy="31.55" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><rect x="300" y="1.1" width="130" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 128px; height: 1px; padding-top: 31px; margin-left: 301px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 38px">2</span></div></div></div></foreignObject><text x="365" y="35" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">2</text></switch></g><path d="M 385 61.1 L 384.5 2.24" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 343.29 62.12 L 343.29 0.98" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><ellipse cx="322" cy="31.1" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><ellipse cx="407" cy="32.1" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><path d="M 133.37 31 L 152 31 L 145.63 30.7" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 128.12 31 L 135.12 27.5 L 133.37 31 L 135.12 34.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><path d="M 150.88 30.58 L 143.97 34.24 L 145.63 30.7 L 143.8 27.25 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><path d="M 283.37 31.56 L 297 31.57 L 297 31.14 L 295.63 31.14" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 278.12 31.55 L 285.12 28.06 L 283.37 31.56 L 285.11 35.06 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><path d="M 300.88 31.14 L 293.88 34.64 L 295.63 31.14 L 293.88 27.64 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>'])))})),n.variable(t("circlell")).define("circlell",["svg"],(function(e){return e(dn||(dn=(0,wn.Z)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="517px" height="100px" viewBox="-0.5 -0.5 517 100" style="background-color: rgb(255, 255, 255);"><defs></defs><g><rect x="27" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 29px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;0&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="29" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;0&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 77 60 L 77 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 122 30 L 140.63 30" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 145.88 30 L 138.88 33.5 L 140.63 30 L 138.88 26.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="102" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><rect x="147" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 149px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;1&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="149" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;1&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 197 60 L 197 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 242 30 L 260.63 30" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 265.88 30 L 258.88 33.5 L 260.63 30 L 258.88 26.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="222" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><rect x="267" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 269px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;2&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="269" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;2&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 317 60 L 317 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 362 30 L 382 30 L 367 30 L 380.63 30" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 385.88 30 L 378.88 33.5 L 380.63 30 L 378.88 26.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="342" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><path d="M 487 30 L 507 30 L 507 90 L 7 90 L 7 30 L 20.63 30" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 25.88 30 L 18.88 33.5 L 20.63 30 L 18.88 26.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><rect x="387" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 389px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;3&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="389" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;3&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 437 60 L 437 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><ellipse cx="462" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>'])))})),n.variable(t("stacksvg")).define("stacksvg",["svg"],(function(e){return e(hn||(hn=(0,wn.Z)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="211px" height="193px" viewBox="-0.5 -0.5 211 193" content="<mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2020-10-21T15:14:11.039Z&quot; agent=&quot;5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.20 Safari/537.36&quot; etag=&quot;NySV6nsSNDTzxsq8OI_c&quot; version=&quot;13.8.1&quot; type=&quot;device&quot;><diagram id=&quot;e6bQdnvhRf-7sJ2BzmwN&quot; name=&quot;Page-1&quot;>1Vffc5swDP5reGwO25CExzXN1rutu+6y69q9+YIDbA5ixgTYXz8DdoDlx2XbMdKXxPosyZI+C4RFFtvinaBJ+AA+4xa2/cIidxbG7tRTvxVQNsCczBsgEJHfQKgFVtFPpkFbo1nks7SnKAG4jJI+uIY4ZmvZw6gQkPfVNsD7pyY0YAfAak35Ifol8mWos8CzFr9nURCak5FJeEuNss4kDakPeQciS4ssBIBsVttiwXhVO1OXxu7tid19YILF8hKDp09Avz8+7Babp4/3q+D918/T8mYfnCxNxsxXBdAiCBlCADHlyxa9FZDFPqvc2kpqdT4AJApECvzGpCw1mzSToKBQbrneZUUknyvzyczV4ov2Vq3viq5QGiGWonzuCrXNxDVia1ZLxq5JsMrqZOE0lEIm1uxMtVx9AakImDyjh7w9v6ovGGyZCkgZCsapjHb9QKi+ocFeryVRLTSPf8CpjnJHeaZPOuC4z2AeRpKtElrnnqs27rOl3TEhWXG+hIcZawNi2lk/BbCng8zbnkKO1gk7/YQ9e6AqoSNVmnJ17O0GVFLdck1/ZGA2btL6Ur9RCo6dFO2mWgXVv23cqKgaTw0+Pge4z4GLjnCAj3AwHYoCfJKCNKHx31OAOhQ0nq6UAscZmwIyEAX4tVBAZmNT4AxEAXk1FNhjU4DmY05BZt0ZZy4YgiZ4P/i8dDeHn4LQ7MIxyB1zCjJR/sMLnhztq8csDa/1HY9mv81Ztj12a3lD0aC67EpZcP4jC0psPyHrvc53OFn+Ag==</diagram></mxfile>" style="background-color: rgb(255, 255, 255);"><defs></defs><g><path d="M 122.5 47.5 L 122.5 15 L 146.82 15" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 149.44 15 L 145.94 16.75 L 146.82 15 L 145.94 13.25 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><rect x="70" y="47.5" width="70" height="145" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><rect x="75" y="157.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 345px; margin-left: 151px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 40px">0</font></div></div></div></foreignObject><text x="210" y="349" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">0</text></switch></g><rect x="75" y="122.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 275px; margin-left: 151px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 40px">1</span></div></div></div></foreignObject><text x="210" y="279" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">1</text></switch></g><rect x="75" y="87.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 205px; margin-left: 151px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 40px">2</span></div></div></div></foreignObject><text x="210" y="209" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">2</text></switch></g><rect x="75" y="52.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 135px; margin-left: 151px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 40px">3</span></div></div></div></foreignObject><text x="210" y="139" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">3</text></switch></g><path d="M 60 15 L 87.5 15 L 87.5 44.32" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 87.5 46.94 L 85.75 43.44 L 87.5 44.32 L 89.25 43.44 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><rect x="0" y="0" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 30px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 30px">Push</font></div></div></div></foreignObject><text x="60" y="34" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Push</text></switch></g><rect x="150" y="0" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 30px; margin-left: 301px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 30px">Pop</font></div></div></div></foreignObject><text x="360" y="34" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Pop</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>'])))})),n.variable(t("queuesvg")).define("queuesvg",["svg"],(function(e){return e(un||(un=(0,wn.Z)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="236px" height="241px" viewBox="-0.5 -0.5 236 241" style="background-color: rgb(255, 255, 255);"><defs></defs><g><path d="M 115 192.5 L 115 225 L 161.82 225" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 164.44 225 L 160.94 226.75 L 161.82 225 L 160.94 223.25 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><rect x="80" y="47.5" width="70" height="145" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><rect x="85" y="157.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 345px; margin-left: 171px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 40px">0</font></div></div></div></foreignObject><text x="230" y="349" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">0</text></switch></g><rect x="85" y="122.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 275px; margin-left: 171px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 40px">1</span></div></div></div></foreignObject><text x="230" y="279" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">1</text></switch></g><rect x="85" y="87.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 205px; margin-left: 171px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 40px">2</span></div></div></div></foreignObject><text x="230" y="209" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">2</text></switch></g><rect x="85" y="52.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 135px; margin-left: 171px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 40px">3</span></div></div></div></foreignObject><text x="230" y="139" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">3</text></switch></g><path d="M 70 15 L 97.5 15 L 97.5 44.32" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 97.5 46.94 L 95.75 43.44 L 97.5 44.32 L 99.25 43.44 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><rect x="0" y="0" width="70" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 30px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 30px">Enqueue</font></div></div></div></foreignObject><text x="70" y="34" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Enqueue</text></switch></g><rect x="165" y="210" width="70" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 450px; margin-left: 331px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 30px">Dequeue</font></div></div></div></foreignObject><text x="400" y="454" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Dequeue</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>'])))})),n.variable(t("hashtablesvg")).define("hashtablesvg",["svg"],(function(e){return e(pn||(pn=(0,wn.Z)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="281px" height="163px" viewBox="-0.5 -0.5 281 163" style="background-color: rgb(255, 255, 255);"><defs></defs><g><rect x="0" y="42" width="85" height="110" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><rect x="100" y="42" width="85" height="120" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"></rect><rect x="20" y="12" width="45" height="25" fill="none" stroke="none" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 88px; height: 1px; padding-top: 49px; margin-left: 41px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 33px">Keys</font></div></div></div></foreignObject><text x="85" y="53" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Keys</text></switch></g><rect x="105" y="7" width="75" height="25" fill="none" stroke="none" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 148px; height: 1px; padding-top: 39px; margin-left: 211px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 33px">Hash<br>Function<br></font></div></div></div></foreignObject><text x="285" y="43" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Hash...</text></switch></g><rect x="205" y="7" width="70" height="25" fill="none" stroke="none" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 39px; margin-left: 411px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 33px">Buckets</font></div></div></div></foreignObject><text x="480" y="43" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Buckets</text></switch></g><rect x="205" y="42" width="75" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 148px; height: 1px; padding-top: 104px; margin-left: 412px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 32px">0</font></div></div></div></foreignObject><text x="412" y="108" fill="#000000" font-family="Helvetica" font-size="12px">0</text></switch></g><path d="M 72.5 59.5 L 130 59.5 L 130 102 L 199.01 102" fill="none" stroke="#9673a6" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 202.76 102 L 197.76 104.5 L 199.01 102 L 197.76 99.5 Z" fill="#9673a6" stroke="#9673a6" stroke-width="2" stroke-miterlimit="10" pointer-events="all"></path><rect x="12.5" y="47" width="60" height="25" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 119px; margin-left: 26px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 25px">foo</font></div></div></div></foreignObject><text x="85" y="123" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">foo</text></switch></g><path d="M 72.5 94.5 L 110 94.5 L 110 77 L 160 77 L 160 52 L 199.01 52" fill="none" stroke="#b85450" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 202.76 52 L 197.76 54.5 L 199.01 52 L 197.76 49.5 Z" fill="#b85450" stroke="#b85450" stroke-width="2" stroke-miterlimit="10" pointer-events="all"></path><rect x="12.5" y="82" width="60" height="25" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 189px; margin-left: 26px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 25px">bar</font></div></div></div></foreignObject><text x="85" y="193" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">bar</text></switch></g><path d="M 72.5 129.5 L 138.5 129.5 L 138.5 152 L 199.01 152" fill="none" stroke="#005700" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 202.76 152 L 197.76 154.5 L 199.01 152 L 197.76 149.5 Z" fill="#005700" stroke="#005700" stroke-width="2" stroke-miterlimit="10" pointer-events="all"></path><rect x="12.5" y="117" width="60" height="25" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 259px; margin-left: 26px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 25px">baz</font></div></div></div></foreignObject><text x="85" y="263" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">baz</text></switch></g><rect x="225" y="42" width="55" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 104px; margin-left: 451px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 19px">Value boo</font></div></div></div></foreignObject><text x="505" y="108" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Value boo</text></switch></g><rect x="205" y="67" width="75" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 148px; height: 1px; padding-top: 154px; margin-left: 412px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 32px">1</font></div></div></div></foreignObject><text x="412" y="158" fill="#000000" font-family="Helvetica" font-size="12px">1</text></switch></g><rect x="225" y="67" width="55" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><rect x="205" y="92" width="75" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 148px; height: 1px; padding-top: 204px; margin-left: 412px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 32px">2</font></div></div></div></foreignObject><text x="412" y="208" fill="#000000" font-family="Helvetica" font-size="12px">2</text></switch></g><rect x="225" y="92" width="55" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 204px; margin-left: 451px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 19px">Value foo</font></div></div></div></foreignObject><text x="505" y="208" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Value foo</text></switch></g><rect x="205" y="117" width="75" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 148px; height: 1px; padding-top: 254px; margin-left: 412px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 32px">3</font></div></div></div></foreignObject><text x="412" y="258" fill="#000000" font-family="Helvetica" font-size="12px">3</text></switch></g><rect x="225" y="117" width="55" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><rect x="205" y="142" width="75" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 148px; height: 1px; padding-top: 304px; margin-left: 412px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 32px">4</font></div></div></div></foreignObject><text x="412" y="308" fill="#000000" font-family="Helvetica" font-size="12px">4</text></switch></g><rect x="225" y="142" width="55" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 304px; margin-left: 451px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 19px">Value baz</font></div></div></div></foreignObject><text x="505" y="308" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Value baz</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>'])))})),n.variable(t("treesvg")).define("treesvg",["svg"],(function(e){return e(mn||(mn=(0,wn.Z)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="186px" height="176px" viewBox="-0.5 -0.5 186 176" style="background-color: rgb(255, 255, 255);"><defs></defs><g><path d="M 100 20 L 70 20 L 70 59.01" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 70 62.76 L 67.5 57.76 L 70 59.01 L 72.5 57.76 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="all"></path><path d="M 140 20 L 165 20 L 165 59.01" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 165 62.76 L 162.5 57.76 L 165 59.01 L 167.5 57.76 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="120" cy="20" rx="20" ry="20" fill="#ffffff" stroke="#000000" pointer-events="all"></ellipse><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 40px; margin-left: 201px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 31px">A</font></div></div></div></foreignObject><text x="240" y="44" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">A</text></switch></g><path d="M 50 85 L 20 85 L 20 129.01" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 20 132.76 L 17.5 127.76 L 20 129.01 L 22.5 127.76 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="all"></path><path d="M 90 85 L 105 85 L 105 129.01" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 105 132.76 L 102.5 127.76 L 105 129.01 L 107.5 127.76 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="70" cy="85" rx="20" ry="20" fill="#ffffff" stroke="#000000" pointer-events="all"></ellipse><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 170px; margin-left: 101px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 31px">B</font></div></div></div></foreignObject><text x="140" y="174" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">B</text></switch></g><ellipse cx="165" cy="85" rx="20" ry="20" fill="#ffffff" stroke="#000000" pointer-events="all"></ellipse><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 170px; margin-left: 291px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 31px">C</font></div></div></div></foreignObject><text x="330" y="174" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">C</text></switch></g><ellipse cx="20" cy="155" rx="20" ry="20" fill="#ffffff" stroke="#000000" pointer-events="all"></ellipse><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 310px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 31px">D</font></div></div></div></foreignObject><text x="40" y="314" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">D</text></switch></g><ellipse cx="105" cy="155" rx="20" ry="20" fill="#ffffff" stroke="#000000" pointer-events="all"></ellipse><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 310px; margin-left: 171px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 31px">E</font></div></div></div></foreignObject><text x="210" y="314" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">E</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>'])))})),n.variable(t("bigOChart")).define("bigOChart",["svg"],(function(e){return e(gn||(gn=(0,wn.Z)(['<svg id="chart" width="560" height="350" viewBox="0 0 800 500" xmlns="http://www.w3.org/2000/svg">\n            \x3c!-- horrible region --\x3e\n            <path d="M50 450 L 50 0 L 800 0 L 800 450 Z" fill="#ff8989"></path>\n            \x3c!-- bad region --\x3e\n            <path d="M50 450 L 800 0 L 800 450 Z" fill="#FFC543"></path>\n            \x3c!-- fair region --\x3e\n            <path d="M50 450 L 800 450 L 800 330 Z" fill="yellow"></path>\n            \x3c!-- good region --\x3e\n            <path d="M50 450 L 800 450 L 800 410 Z" fill="#C8EA00"></path>\n            \x3c!-- excellent region --\x3e\n            <path d="M50 450 L 800 450 L 800 440 Z" fill="#53d000"></path>\n\n            \x3c!-- axes --\x3e\n            <path d="M50 0 L 50 450 L 800 450" fill="transparent" stroke="black" stroke-width="2"></path>\n\n            <path d="M50 448 L 800 448" fill="transparent" stroke="black" stroke-width="2"></path>\n            <text x="700" y="438" fill="black">O(log n), O(1)</text>\n\n            <path d="M50 450 L 800 400" fill="transparent" stroke="black" stroke-width="2"></path>\n            <text x="760" y="390" fill="black">O(n)</text>\n\n            <path d="M50 450 Q 400 350, 800 150" fill="transparent" stroke="black" stroke-width="2"></path>\n            <text x="630" y="190" fill="black">O(n log n)</text>\n\n            <path d="M50 450 Q 180 380, 250 0" fill="transparent" stroke="black" stroke-width="2"></path>\n            <text x="260" y="30" fill="black">O(n^2)</text>\n\n            <path d="M50 450 C 100 430, 120 350, 120 0" fill="transparent" stroke="black" stroke-width="2"></path>\n            <text x="125" y="20" fill="black">O(2^n)</text>\n\n            <path d="M50 450 C 80 450, 80 350, 80 0" fill="transparent" stroke="black" stroke-width="2"></path>\n            <text x="80" y="20" fill="black">O(n!)</text>\n\n            <text x="0" y="0" transform="translate(30 230) rotate(-90)" style="dominant-baseline: middle; text-anchor: middle; font-size:20px; color: #555; font-size:20px; color: #555; font-style: italic;" fill="black">Operations</text>\n            <text x="0" y="0" transform="translate(420 470)" style="dominant-baseline: middle; text-anchor: middle; font-size:20px; color: #555; font-style: italic;" fill="black">Elements</text>\n          </svg>'])))})),n}},1885:function(e){e.exports=function(e,t){t||(t=[0,""]),e=String(e);var n=parseFloat(e,10);return t[0]=n,t[1]=e.match(/[\d.\-\+]*\s*(.*)/)[1]||"",t}},1988:function(e,t,n){"use strict";function i(e){return(i="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}t.Z=void 0;var r=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==i(e)&&"function"!==typeof e)return{default:e};var t=c();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=r?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(n,o,a):n[o]=e[o]}n.default=e,t&&t.set(e,n);return n}(n(7294)),o=l(n(5697)),a=l(n(9185)),s=l(n(1885));function l(e){return e&&e.__esModule?e:{default:e}}function c(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}function f(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"===typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],i=!0,r=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(i=(a=s.next()).done)&&(n.push(a.value),!t||n.length!==t);i=!0);}catch(l){r=!0,o=l}finally{try{i||null==s.return||s.return()}finally{if(r)throw o}}return n}(e,t)||function(e,t){if(!e)return;if("string"===typeof e)return d(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return d(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}var h=n(8113),u=function(e){var t=e.size,n=e.checked,i=e.onChange,o=e.speed,l=e.className,c=f((0,s.default)(t),2),d=c[0],u=c[1],p=f((0,r.useState)(!1),2),m=p[0],g=p[1],y=n?[2,50]:[51,96],x=n?51:2;return r.default.createElement("button",{onClick:function(){g(!0),i(!n)},style:{cursor:"pointer",overflow:"hidden",width:"".concat(d).concat(u||"px"),height:"".concat(.47*d).concat(u||"px"),appearance:"none",MozAppearance:"none",WebkitAppearance:"none",border:"none",backgroundColor:"transparent",padding:0},"aria-hidden":"true",className:l},r.default.createElement("div",{style:{display:"flex",alignItems:"center",justifyContent:"center",marginTop:"".concat(-.575*d).concat(u||"px"),marginLeft:"".concat(-.32*d).concat(u||"px"),width:"".concat(1.65*d).concat(u||"px"),height:"".concat(1.65*d).concat(u||"px")}},r.default.createElement(a.default,{key:"$preventGlitches",play:m,speed:o,animationData:h,loop:!1,segments:y,goTo:x})))};u.propTypes={size:o.default.oneOfType([o.default.number,o.default.string]),checked:o.default.bool,onChange:o.default.func,speed:o.default.number,className:o.default.string},u.defaultProps={size:85,checked:!1,onChange:function(e){return null},speed:1.3,className:null};var p=(0,r.memo)(u,(function(e,t){return e.size===t.size&&e.checked===t.checked&&e.speed===t.speed&&e.className===t.className}));t.Z=p},9185:function(e,t,n){"use strict";n.r(t);var i=n(1248),r=n.n(i),o=n(7294),a=n(1879),s=n.n(a),l=n(3465),c=n.n(l);function f(){return(f=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function d(e,t){return e(t={exports:{}},t.exports),t.exports}var h="function"===typeof Symbol&&Symbol.for,u=h?Symbol.for("react.element"):60103,p=h?Symbol.for("react.portal"):60106,m=h?Symbol.for("react.fragment"):60107,g=h?Symbol.for("react.strict_mode"):60108,y=h?Symbol.for("react.profiler"):60114,x=h?Symbol.for("react.provider"):60109,w=h?Symbol.for("react.context"):60110,v=h?Symbol.for("react.async_mode"):60111,b=h?Symbol.for("react.concurrent_mode"):60111,k=h?Symbol.for("react.forward_ref"):60112,_=h?Symbol.for("react.suspense"):60113,j=h?Symbol.for("react.suspense_list"):60120,S=h?Symbol.for("react.memo"):60115,E=h?Symbol.for("react.lazy"):60116,O=h?Symbol.for("react.block"):60121,z=h?Symbol.for("react.fundamental"):60117,T=h?Symbol.for("react.responder"):60118,A=h?Symbol.for("react.scope"):60119;function C(e){if("object"===typeof e&&null!==e){var t=e.$$typeof;switch(t){case u:switch(e=e.type){case v:case b:case m:case y:case g:case _:return e;default:switch(e=e&&e.$$typeof){case w:case k:case E:case S:case x:return e;default:return t}}case p:return t}}}function L(e){return C(e)===b}var Z={AsyncMode:v,ConcurrentMode:b,ContextConsumer:w,ContextProvider:x,Element:u,ForwardRef:k,Fragment:m,Lazy:E,Memo:S,Portal:p,Profiler:y,StrictMode:g,Suspense:_,isAsyncMode:function(e){return L(e)||C(e)===v},isConcurrentMode:L,isContextConsumer:function(e){return C(e)===w},isContextProvider:function(e){return C(e)===x},isElement:function(e){return"object"===typeof e&&null!==e&&e.$$typeof===u},isForwardRef:function(e){return C(e)===k},isFragment:function(e){return C(e)===m},isLazy:function(e){return C(e)===E},isMemo:function(e){return C(e)===S},isPortal:function(e){return C(e)===p},isProfiler:function(e){return C(e)===y},isStrictMode:function(e){return C(e)===g},isSuspense:function(e){return C(e)===_},isValidElementType:function(e){return"string"===typeof e||"function"===typeof e||e===m||e===b||e===y||e===g||e===_||e===j||"object"===typeof e&&null!==e&&(e.$$typeof===E||e.$$typeof===S||e.$$typeof===x||e.$$typeof===w||e.$$typeof===k||e.$$typeof===z||e.$$typeof===T||e.$$typeof===A||e.$$typeof===O)},typeOf:C},V=(d((function(e,t){0})),d((function(e){e.exports=Z})),Object.getOwnPropertySymbols),q=Object.prototype.hasOwnProperty,M=Object.prototype.propertyIsEnumerable;function D(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var i={};return"abcdefghijklmnopqrst".split("").forEach((function(e){i[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},i)).join("")}catch(r){return!1}})()&&Object.assign;var F="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";function R(e,t,n,i,r){}R.resetWarningCache=function(){0};Function.call.bind(Object.prototype.hasOwnProperty);function B(){}function H(){}H.resetWarningCache=B;var G=d((function(e){e.exports=function(){function e(e,t,n,i,r,o){if(o!==F){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:H,resetWarningCache:B};return n.PropTypes=n,n}()})),P=function(e){var t=(0,o.memo)((function(t){var n=t.animationData,i=t.path,r=t.play,a=t.speed,l=t.direction,d=t.segments,h=t.goTo,u=t.renderer,p=t.loop,m=t.rendererSettings,g=t.audioFactory,y=t.onLoad,x=t.onComplete,w=t.onLoopComplete,v=t.onEnterFrame,b=t.onSegmentStart,k=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(t,["animationData","path","play","speed","direction","segments","goTo","renderer","loop","rendererSettings","audioFactory","onLoad","onComplete","onLoopComplete","onEnterFrame","onSegmentStart"]),_=(0,o.useRef)(),j=(0,o.useRef)(),S=(0,o.useState)(!1),E=S[0],O=S[1],z=(0,o.useState)(d),T=z[0],A=z[1];(0,o.useEffect)((function(){s()(T,d)||A(d)}),[d,T]);var C=(0,o.useState)(m),L=C[0],Z=C[1];(0,o.useEffect)((function(){s()(L,m)||Z(m)}),[m,L]),(0,o.useEffect)((function(){return function(){return j.current.removeEventListener("complete",x)}}),[x]),(0,o.useEffect)((function(){return function(){return j.current.removeEventListener("loopComplete",w)}}),[w]),(0,o.useEffect)((function(){return function(){return j.current.removeEventListener("enterFrame",v)}}),[v]),(0,o.useEffect)((function(){return function(){return j.current.removeEventListener("segmentStart",b)}}),[b]),(0,o.useEffect)((function(){function t(){O(!0),y()}return j.current=e.loadAnimation({animationData:null==n||"object"!==typeof n?n:"object"===typeof n.default?c()(n.default):c()(n),path:i,container:_.current,renderer:u,loop:!1,autoplay:!1,rendererSettings:L,audioFactory:g}),j.current.addEventListener("DOMLoaded",t),function(){j.current.removeEventListener("DOMLoaded",t),O(!1),j.current.destroy(),j.current=void 0}}),[p,u,L,n,i,g]),(0,o.useEffect)((function(){j.current.addEventListener("complete",x)}),[x]),(0,o.useEffect)((function(){j.current.addEventListener("loopComplete",w)}),[w]),(0,o.useEffect)((function(){j.current.addEventListener("enterFrame",v)}),[v]),(0,o.useEffect)((function(){j.current.addEventListener("segmentStart",b)}),[b]),(0,o.useEffect)((function(){E&&(j.current.loop=p)}),[E,p]);var V=(0,o.useRef)(!1);return(0,o.useEffect)((function(){if(E)if(!0===r){if(T){if(j.current.playSegments(T,true),V.current=!0,-1===l)e(T[1])}else if(V.current&&j.current.resetSegments(true),V.current=!1,-1===l)e(j.current.getDuration(!0));else j.current.play()}else!1===r&&j.current.pause();function e(e){j.current.goToAndPlay(e,!0),j.current.setDirection(l)}}),[r,T,E]),(0,o.useEffect)((function(){E&&(Number.isNaN(a)||j.current.setSpeed(a))}),[a,E]),(0,o.useEffect)((function(){E&&j.current.setDirection(l)}),[l,E]),(0,o.useEffect)((function(){if(E&&null!=h){r?j.current.goToAndPlay(h,true):j.current.goToAndStop(h,true)}}),[h,r,E]),o.createElement("div",f({},k,{ref:_}))}));return t.propTypes={animationData:G.object,path:G.string,play:G.bool,goTo:G.number,speed:G.number,direction:G.number,loop:G.oneOfType([G.number,G.bool]),segments:G.oneOfType([G.arrayOf(G.number),G.bool]),rendererSettings:G.object,renderer:G.string,audioFactory:G.func,onComplete:G.func,onLoopComplete:G.func,onEnterFrame:G.func,onSegmentStart:G.func},t.defaultProps={animationData:null,path:null,play:null,segments:null,goTo:null,speed:1,direction:1,loop:!0,rendererSettings:{},renderer:"svg",audioFactory:null,onLoad:function(){},onComplete:function(){},onLoopComplete:function(){},onEnterFrame:function(){},onSegmentStart:function(){}},t}(r());t.default=P},8113:function(e){"use strict";e.exports=JSON.parse('{"v":"5.3.4","fr":24,"ip":0,"op":96,"w":500,"h":500,"nm":"Toggle","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Shutting Star","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,250,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-11.168,-2.743],[-25,-28]],"o":[[28.5,7],[28.361,31.764]],"v":[[-126,-24.5],[-27,37.5]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":32,"s":[0],"e":[100]},{"t":40}],"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":30,"s":[0],"e":[100]},{"t":37}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"st","c":{"a":0,"k":[0.933333333333,0.992156862745,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":2,"lj":2,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":30,"op":41,"st":30,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Moon","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":0,"s":[-175.595],"e":[0]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":24,"s":[0],"e":[0]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":48,"s":[0],"e":[-175.595]},{"t":72}],"ix":10},"p":{"s":true,"x":{"a":1,"k":[{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":0,"s":[170],"e":[330]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":24,"s":[330],"e":[330]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":48,"s":[330],"e":[170]},{"t":72}],"ix":3},"y":{"a":0,"k":250,"ix":4}},"a":{"a":0,"k":[60.25,60.25,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[4.981,1.834],[0,7.828],[11.632,0],[2.39,-0.941],[-1.477,0],[0,-11.632],[6.338,-3.63],[0,-5.618],[4.49,-2.06],[0,6.513]],"o":[[6.338,-3.63],[0,-11.632],[-2.724,0],[1.391,-0.289],[11.632,0],[0,7.828],[4.981,1.834],[0,5.263],[6.24,-0.973],[0,-5.619]],"v":[[3.775,7.124],[14.388,-11.16],[-6.674,-32.221],[-14.388,-30.757],[-10.079,-31.2],[10.983,-10.137],[0.37,8.146],[8.911,20.374],[1.297,32.221],[12.317,19.353]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[1.534,0],[0,5.888],[-1.927,1.929],[0,-4.354],[-5.888,0],[-1.93,1.933]],"o":[[-5.887,0],[0,-2.941],[-3.74,1.656],[0,5.887],[2.946,0],[-1.319,0.584]],"v":[[-57.252,37.674],[-67.912,27.014],[-64.794,19.481],[-71.147,29.228],[-60.487,39.888],[-52.944,36.76]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":0,"s":[1,0.940106153488,0.53420650959,1],"e":[0.783999992819,0.944999964097,0.969000004787,1]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":24,"s":[0.783999992819,0.944999964097,0.969000004787,1],"e":[0.783999992819,0.944999964097,0.969000004787,1]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":48,"s":[0.783999992819,0.944999964097,0.969000004787,1],"e":[1,0.940106153488,0.53420650959,1]},{"t":72}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[86.845,53.361],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shadow","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[4.981,1.834],[0,7.828],[11.632,0],[0,-11.632],[-10.302,-1.374],[0,-3.827],[-7.202,0],[0,7.202]],"o":[[6.338,-3.63],[0,-11.632],[-11.632,0],[0,10.679],[-2.624,2.386],[0,7.202],[7.203,0],[0,-5.619]],"v":[[10.449,7.038],[21.061,-11.246],[0,-32.307],[-21.061,-11.246],[-2.81,9.623],[-7.092,19.266],[5.949,32.307],[18.991,19.266]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[0,-5.888],[5.887,0],[0,5.887],[-5.888,0]],"o":[[0,5.887],[-5.888,0],[0,-5.888],[5.887,0]],"v":[[-43.153,29.141],[-53.813,39.801],[-64.473,29.141],[-53.813,18.481]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":0,"s":[1,0.940106153488,0.53420650959,1],"e":[0.862999949736,0.957000014361,0.969000004787,1]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":24,"s":[0.862999949736,0.957000014361,0.969000004787,1],"e":[0.862999949736,0.957000014361,0.969000004787,1]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":48,"s":[0.862999949736,0.957000014361,0.969000004787,1],"e":[1,0.940106153488,0.53420650959,1]},{"t":72}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[80.171,53.448],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Crater","np":3,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-33.137],[33.137,0],[0,33.137],[-33.137,0]],"o":[[0,33.137],[-33.137,0],[0,-33.137],[33.137,0]],"v":[[60,0],[0,60],[-60,0],[0,-60]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":0,"s":[1,0.940106153488,0.53420650959,1],"e":[0.933000033509,0.991999966491,1,1]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":24,"s":[0.933000033509,0.991999966491,1,1],"e":[0.933000033509,0.991999966491,1,1]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":48,"s":[0.933000033509,0.991999966491,1,1],"e":[1,0.940106153488,0.53420650959,1]},{"t":72}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[60.25,60.25],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Moon","np":2,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":1224,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Stars","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":11,"s":[0],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":13,"s":[100],"e":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":59,"s":[100],"e":[0]},{"t":61}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"s":true,"x":{"a":1,"k":[{"i":{"x":[0.101],"y":[0.954]},"o":{"x":[0.9],"y":[0]},"n":["0p101_0p954_0p9_0"],"t":0,"s":[304.75],"e":[190.55]},{"i":{"x":[0.438],"y":[0.439]},"o":{"x":[0.397],"y":[0.396]},"n":["0p438_0p439_0p397_0p396"],"t":24,"s":[190.55],"e":[184.75]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.899],"y":[-0.043]},"n":["0p1_1_0p899_-0p043"],"t":48,"s":[184.75],"e":[304.75]},{"t":72}],"ix":3},"y":{"a":0,"k":212.75,"ix":4}},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[10,10],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":32,"ix":5},"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":8},"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":true},{"ty":"fl","c":{"a":0,"k":[0.933333333333,0.992156862745,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-32.5,65],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Star 03","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[6,6],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":32,"ix":5},"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":8},"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":true},{"ty":"fl","c":{"a":0,"k":[0.933333333333,0.992156862745,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[47.5,45],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Star 02","np":3,"cix":2,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[8,8],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":32,"ix":5},"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":8},"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":true},{"ty":"fl","c":{"a":0,"k":[0.933333333333,0.992156862745,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Star 01","np":3,"cix":2,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":96,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Cloud 1","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":11,"s":[100],"e":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":13,"s":[0],"e":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":59,"s":[0],"e":[100]},{"t":61}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"s":true,"x":{"a":1,"k":[{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":0,"s":[275.5],"e":[184]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":24,"s":[184],"e":[184]},{"i":{"x":[0.102],"y":[0.92]},"o":{"x":[0.9],"y":[0]},"n":["0p102_0p92_0p9_0"],"t":48,"s":[184],"e":[269.054]},{"i":{"x":[0.731],"y":[1]},"o":{"x":[0.225],"y":[0.253]},"n":["0p731_1_0p225_0p253"],"t":72,"s":[269.054],"e":[275.5]},{"t":95}],"ix":3},"y":{"a":0,"k":220,"ix":4}},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[4.193,0.263],[4.158,0],[0,0],[0.688,-3.952],[0,0],[0,-4.43],[0,0],[-4.43,0],[0,0],[0,4.43],[0,0]],"o":[[-0.677,-3.965],[0,0],[-4.149,0],[0,0],[-4.43,0],[0,0],[0,4.43],[0,0],[4.43,0],[0,0],[0,-4.259]],"v":[[11.887,-4.516],[3.601,-11.5],[3.601,-11.5],[-4.68,-4.542],[-11.38,-4.542],[-19.401,3.479],[-19.401,3.479],[-11.38,11.5],[11.38,11.5],[19.401,3.479],[19.401,3.479]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":32,"ix":5},"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":8},"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":true},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":96,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"Cloud 2","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":11,"s":[100],"e":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":13,"s":[0],"e":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"n":["0p833_0p833_0p167_0p167"],"t":59,"s":[0],"e":[100]},{"t":61}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"s":true,"x":{"a":1,"k":[{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":0,"s":[330.5],"e":[167.5]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":24,"s":[167.5],"e":[167.5]},{"i":{"x":[0.101],"y":[0.95]},"o":{"x":[0.9],"y":[0]},"n":["0p101_0p95_0p9_0"],"t":48,"s":[167.5],"e":[324.054]},{"i":{"x":[0.731],"y":[1]},"o":{"x":[0.218],"y":[0.284]},"n":["0p731_1_0p218_0p284"],"t":72,"s":[324.054],"e":[330.5]},{"t":95}],"ix":3},"y":{"a":0,"k":265,"ix":4}},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[6.375,0.399],[6.322,0],[0,0],[1.046,-6.009],[0,0],[0,-6.736],[0,0],[-6.736,0],[0,0],[0,6.736],[0,0]],"o":[[-1.03,-6.029],[0,0],[-6.308,0],[0,0],[-6.736,0],[0,0],[0,6.736],[0,0],[6.736,0],[0,0],[0,-6.476]],"v":[[16.075,-1.367],[3.476,-11.986],[3.476,-11.986],[-9.116,-1.406],[-19.304,-1.406],[-31.5,10.79],[-31.5,10.79],[-19.304,22.986],[15.304,22.986],[27.5,10.79],[27.5,10.79]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":32,"ix":5},"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":8},"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":true},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":96,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"Shadow","sr":1,"ks":{"o":{"a":0,"k":15,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,180,0],"ix":2},"a":{"a":0,"k":[0,-37.154,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[37.432,0],[0,0],[0,-37.432],[0,0],[-0.021,-0.694],[-36.733,0],[0,0],[-1.105,-36.465],[0,0.699],[0,0]],"o":[[0,0],[-37.432,0],[0,0],[0,0.699],[1.105,-36.465],[0,0],[36.733,0],[0.021,-0.694],[0,0],[0,-37.432]],"v":[[82.223,-37.154],[-82.223,-37.154],[-150,30.623],[-150,35.069],[-149.947,37.154],[-82.223,-28.538],[82.223,-28.538],[149.947,37.154],[150,35.069],[150,30.623]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.933333333333,0.992156862745,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":8},"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":true},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":96,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"Base","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,180,0],"ix":2},"a":{"a":0,"k":[0,-70,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[300,140],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":320,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"fl","c":{"a":1,"k":[{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":0,"s":[0.413832724094,0.784281790257,1,1],"e":[0.0580506064,0.077281616628,0.256188720465,1]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":24,"s":[0.0580506064,0.077281616628,0.256188720465,1],"e":[0.0580506064,0.077281616628,0.256188720465,1]},{"i":{"x":[0.1],"y":[1]},"o":{"x":[0.9],"y":[0]},"n":["0p1_1_0p9_0"],"t":48,"s":[0.0580506064,0.077281616628,0.256188720465,1],"e":[0.413832724094,0.784281790257,1,1]},{"t":72}],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Rectangle 1","np":2,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":96,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"BG","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,250,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[500,500],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":18.8,"ix":5},"lc":1,"lj":1,"ml":4,"ml2":{"a":0,"k":4,"ix":8},"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":true},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Rectangle 1","np":3,"cix":2,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":96,"st":0,"bm":0}],"markers":[]}')}}]);