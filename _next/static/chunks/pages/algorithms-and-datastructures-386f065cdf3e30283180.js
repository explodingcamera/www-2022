_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[9],{"8vYA":function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/algorithms-and-datastructures",function(){return n("i8d6")}])},h4VS:function(e,t,n){"use strict";function i(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}n.d(t,"a",(function(){return i}))},i8d6:function(e,t,n){"use strict";n.r(t);var i=n("nKUr"),r=n("q1tI");function a(e,t,n){n=n||{};var i=e.ownerDocument,r=i.defaultView.CustomEvent;"function"===typeof r?r=new r(t,{detail:n}):((r=i.createEvent("Event")).initEvent(t,!1,!1),r.detail=n),e.dispatchEvent(r)}function o(e){return Array.isArray(e)||e instanceof Int8Array||e instanceof Int16Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Uint16Array||e instanceof Uint32Array||e instanceof Float32Array||e instanceof Float64Array}function s(e){return e===(0|e)+""}function l(e){const t=document.createElement("span");return t.className="observablehq--cellname",t.textContent=e+" = ",t}const c=Symbol.prototype.toString;function f(e){return c.call(e)}const{getOwnPropertySymbols:d,prototype:{hasOwnProperty:u}}=Object,{toStringTag:h}=Symbol,p={},m=d;function g(e,t){return u.call(e,t)}function v(e){return e[h]||e.constructor&&e.constructor.name||"Object"}function w(e,t){try{const n=e[t];return n&&n.constructor,n}catch(n){return p}}const b=[{symbol:"@@__IMMUTABLE_INDEXED__@@",name:"Indexed",modifier:!0},{symbol:"@@__IMMUTABLE_KEYED__@@",name:"Keyed",modifier:!0},{symbol:"@@__IMMUTABLE_LIST__@@",name:"List",arrayish:!0},{symbol:"@@__IMMUTABLE_MAP__@@",name:"Map"},{symbol:"@@__IMMUTABLE_ORDERED__@@",name:"Ordered",modifier:!0,prefix:!0},{symbol:"@@__IMMUTABLE_RECORD__@@",name:"Record"},{symbol:"@@__IMMUTABLE_SET__@@",name:"Set",arrayish:!0,setish:!0},{symbol:"@@__IMMUTABLE_STACK__@@",name:"Stack",arrayish:!0}];function x(e){try{let t=b.filter(({symbol:t})=>!0===e[t]);if(!t.length)return;const n=t.find(e=>!e.modifier),i="Map"===n.name&&t.find(e=>e.modifier&&e.prefix),r=t.some(e=>e.arrayish),a=t.some(e=>e.setish);return{name:`${i?i.name:""}${n.name}`,symbols:t,arrayish:r&&!a,setish:a}}catch(t){return null}}const{getPrototypeOf:y,getOwnPropertyDescriptors:k}=Object,j=y({});function O(e,t,n,i){let r,s,c,f,d=o(e);e instanceof Map?(r=`Map(${e.size})`,s=_):e instanceof Set?(r=`Set(${e.size})`,s=z):d?(r=`${e.constructor.name}(${e.length})`,s=E):(f=x(e))?(r=`Immutable.${f.name}${"Record"===f.name?"":`(${e.size})`}`,d=f.arrayish,s=f.arrayish?L:f.setish?S:q):i?(r=v(e),s=T):(r=v(e),s=C);const u=document.createElement("span");u.className="observablehq--expanded",n&&u.appendChild(l(n));const h=u.appendChild(document.createElement("a"));h.innerHTML="<svg width=8 height=8 class='observablehq--caret'>\n    <path d='M4 7L0 1h8z' fill='currentColor' />\n  </svg>",h.appendChild(document.createTextNode(`${r}${d?" [":" {"}`)),h.addEventListener("mouseup",(function(t){t.stopPropagation(),de(u,F(e,null,n,i))})),s=s(e);for(let a=0;!(c=s.next()).done&&a<20;++a)u.appendChild(c.value);if(!c.done){const e=u.appendChild(document.createElement("a"));e.className="observablehq--field",e.style.display="block",e.appendChild(document.createTextNode("  \u2026 more")),e.addEventListener("mouseup",(function(e){e.stopPropagation(),u.insertBefore(c.value,u.lastChild.previousSibling);for(let t=0;!(c=s.next()).done&&t<19;++t)u.insertBefore(c.value,u.lastChild.previousSibling);c.done&&u.removeChild(u.lastChild.previousSibling),a(u,"load")}))}return u.appendChild(document.createTextNode(d?"]":"}")),u}function*_(e){for(const[t,n]of e)yield V(t,n);yield*C(e)}function*z(e){for(const t of e)yield N(t);yield*C(e)}function*S(e){for(const t of e)yield N(t)}function*E(e){for(let t=0,n=e.length;t<n;++t)t in e&&(yield M(t,w(e,t),"observablehq--index"));for(const t in e)!s(t)&&g(e,t)&&(yield M(t,w(e,t),"observablehq--key"));for(const t of m(e))yield M(f(t),w(e,t),"observablehq--symbol")}function*L(e){let t=0;for(const n=e.size;t<n;++t)yield M(t,e.get(t),!0)}function*T(e){for(const n in k(e))yield M(n,w(e,n),"observablehq--key");for(const n of m(e))yield M(f(n),w(e,n),"observablehq--symbol");const t=y(e);t&&t!==j&&(yield A(t))}function*C(e){for(const n in e)g(e,n)&&(yield M(n,w(e,n),"observablehq--key"));for(const n of m(e))yield M(f(n),w(e,n),"observablehq--symbol");const t=y(e);t&&t!==j&&(yield A(t))}function*q(e){for(const[t,n]of e)yield M(t,n,"observablehq--key")}function A(e){const t=document.createElement("div"),n=t.appendChild(document.createElement("span"));return t.className="observablehq--field",n.className="observablehq--prototype-key",n.textContent="  <prototype>",t.appendChild(document.createTextNode(": ")),t.appendChild(fe(e,void 0,void 0,void 0,!0)),t}function M(e,t,n){const i=document.createElement("div"),r=i.appendChild(document.createElement("span"));return i.className="observablehq--field",r.className=n,r.textContent="  "+e,i.appendChild(document.createTextNode(": ")),i.appendChild(fe(t)),i}function V(e,t){const n=document.createElement("div");return n.className="observablehq--field",n.appendChild(document.createTextNode("  ")),n.appendChild(fe(e)),n.appendChild(document.createTextNode(" => ")),n.appendChild(fe(t)),n}function N(e){const t=document.createElement("div");return t.className="observablehq--field",t.appendChild(document.createTextNode("  ")),t.appendChild(fe(e)),t}function H(e){const t=window.getSelection();return"Range"===t.type&&(t.containsNode(e,!0)||t.anchorNode.isSelfOrDescendant(e)||t.focusNode.isSelfOrDescendant(e))}function F(e,t,n,i){let r,a,s,c,f=o(e);if(e instanceof Map?(r=`Map(${e.size})`,a=R):e instanceof Set?(r=`Set(${e.size})`,a=D):f?(r=`${e.constructor.name}(${e.length})`,a=P):(c=x(e))?(r=`Immutable.${c.name}${"Record"===c.name?"":`(${e.size})`}`,f=c.arrayish,a=c.arrayish?I:c.setish?G:U):(r=v(e),a=B),t){const t=document.createElement("span");return t.className="observablehq--shallow",n&&t.appendChild(l(n)),t.appendChild(document.createTextNode(r)),t.addEventListener("mouseup",(function(n){H(t)||(n.stopPropagation(),de(t,F(e)))})),t}const d=document.createElement("span");d.className="observablehq--collapsed",n&&d.appendChild(l(n));const u=d.appendChild(document.createElement("a"));u.innerHTML="<svg width=8 height=8 class='observablehq--caret'>\n    <path d='M7 4L1 8V0z' fill='currentColor' />\n  </svg>",u.appendChild(document.createTextNode(`${r}${f?" [":" {"}`)),d.addEventListener("mouseup",(function(t){H(d)||(t.stopPropagation(),de(d,O(e,0,n,i)))}),!0),a=a(e);for(let o=0;!(s=a.next()).done&&o<20;++o)o>0&&d.appendChild(document.createTextNode(", ")),d.appendChild(s.value);return s.done||d.appendChild(document.createTextNode(", \u2026")),d.appendChild(document.createTextNode(f?"]":"}")),d}function*R(e){for(const[t,n]of e)yield W(t,n);yield*B(e)}function*D(e){for(const t of e)yield fe(t,!0);yield*B(e)}function*G(e){for(const t of e)yield fe(t,!0)}function*I(e){let t=-1,n=0;for(const i=e.size;n<i;++n)n>t+1&&(yield Z(n-t-1)),yield fe(e.get(n),!0),t=n;n>t+1&&(yield Z(n-t-1))}function*P(e){let t=-1,n=0;for(const i=e.length;n<i;++n)n in e&&(n>t+1&&(yield Z(n-t-1)),yield fe(w(e,n),!0),t=n);n>t+1&&(yield Z(n-t-1));for(const i in e)!s(i)&&g(e,i)&&(yield $(i,w(e,i),"observablehq--key"));for(const i of m(e))yield $(f(i),w(e,i),"observablehq--symbol")}function*B(e){for(const t in e)g(e,t)&&(yield $(t,w(e,t),"observablehq--key"));for(const t of m(e))yield $(f(t),w(e,t),"observablehq--symbol")}function*U(e){for(const[t,n]of e)yield $(t,n,"observablehq--key")}function Z(e){const t=document.createElement("span");return t.className="observablehq--empty",t.textContent=1===e?"empty":"empty \xd7 "+e,t}function $(e,t,n){const i=document.createDocumentFragment(),r=i.appendChild(document.createElement("span"));return r.className=n,r.textContent=e,i.appendChild(document.createTextNode(": ")),i.appendChild(fe(t,!0)),i}function W(e,t){const n=document.createDocumentFragment();return n.appendChild(fe(e,!0)),n.appendChild(document.createTextNode(" => ")),n.appendChild(fe(t,!0)),n}function X(e,t){var n=e+"",i=n.length;return i<t?new Array(t-i+1).join(0)+n:n}function Y(e){return e<0?"-"+X(-e,6):e>9999?"+"+X(e,6):X(e,4)}var K=Error.prototype.toString;var J=RegExp.prototype.toString;function Q(e){return e.replace(/[\\`\x00-\x09\x0b-\x19]|\${/g,ee)}function ee(e){var t=e.charCodeAt(0);switch(t){case 8:return"\\b";case 9:return"\\t";case 11:return"\\v";case 12:return"\\f";case 13:return"\\r"}return t<16?"\\x0"+t.toString(16):t<32?"\\x"+t.toString(16):"\\"+e}function te(e,t){for(var n=0;t.exec(e);)++n;return n}var ne=Function.prototype.toString,ie={prefix:"async \u0192"},re={prefix:"async \u0192*"},ae={prefix:"class"},oe={prefix:"\u0192"},se={prefix:"\u0192*"};function le(e,t,n){var i=document.createElement("span");i.className="observablehq--function",n&&i.appendChild(l(n));var r=i.appendChild(document.createElement("span"));return r.className="observablehq--keyword",r.textContent=e.prefix,i.appendChild(document.createTextNode(t)),i}const{prototype:{toString:ce}}=Object;function fe(e,t,n,i,r){let a=typeof e;switch(a){case"boolean":case"undefined":e+="";break;case"number":e=0===e&&1/e<0?"-0":e+"";break;case"bigint":e+="n";break;case"symbol":e=f(e);break;case"function":return function(e,t){var n,i,r=ne.call(e);switch(e.constructor&&e.constructor.name){case"AsyncFunction":n=ie;break;case"AsyncGeneratorFunction":n=re;break;case"GeneratorFunction":n=se;break;default:n=/^class\b/.test(r)?ae:oe}return n===ae?le(n,"",t):(i=/^(?:async\s*)?(\w+)\s*=>/.exec(r))?le(n,"("+i[1]+")",t):(i=/^(?:async\s*)?\(\s*(\w+(?:\s*,\s*\w+)*)?\s*\)/.exec(r))||(i=/^(?:async\s*)?function(?:\s*\*)?(?:\s*\w+)?\s*\(\s*(\w+(?:\s*,\s*\w+)*)?\s*\)/.exec(r))?le(n,i[1]?"("+i[1].replace(/\s*,\s*/g,", ")+")":"()",t):le(n,"(\u2026)",t)}(e,i);case"string":return function(e,t,n,i){if(!1===t){if(te(e,/["\n]/g)<=te(e,/`|\${/g)){const t=document.createElement("span");i&&t.appendChild(l(i));const n=t.appendChild(document.createElement("span"));return n.className="observablehq--string",n.textContent=JSON.stringify(e),t}const r=e.split("\n");if(r.length>20&&!n){const n=document.createElement("div");i&&n.appendChild(l(i));const a=n.appendChild(document.createElement("span"));a.className="observablehq--string",a.textContent="`"+Q(r.slice(0,20).join("\n"));const o=n.appendChild(document.createElement("span")),s=r.length-20;return o.textContent=`Show ${s} truncated line${s>1?"s":""}`,o.className="observablehq--string-expand",o.addEventListener("mouseup",(function(r){r.stopPropagation(),de(n,fe(e,t,!0,i))})),n}const a=document.createElement("span");i&&a.appendChild(l(i));const o=a.appendChild(document.createElement("span"));return o.className="observablehq--string"+(n?" observablehq--expanded":""),o.textContent="`"+Q(e)+"`",a}const r=document.createElement("span");i&&r.appendChild(l(i));const a=r.appendChild(document.createElement("span"));return a.className="observablehq--string",a.textContent=JSON.stringify(e.length>100?`${e.slice(0,50)}\u2026${e.slice(-49)}`:e),r}(e,t,n,i);default:if(null===e){a=null,e="null";break}if(e instanceof Date){a="date",o=e,e=isNaN(o)?"Invalid Date":function(e){return 0===e.getUTCMilliseconds()&&0===e.getUTCSeconds()&&0===e.getUTCMinutes()&&0===e.getUTCHours()}(o)?Y(o.getUTCFullYear())+"-"+X(o.getUTCMonth()+1,2)+"-"+X(o.getUTCDate(),2):Y(o.getFullYear())+"-"+X(o.getMonth()+1,2)+"-"+X(o.getDate(),2)+"T"+X(o.getHours(),2)+":"+X(o.getMinutes(),2)+(o.getMilliseconds()?":"+X(o.getSeconds(),2)+"."+X(o.getMilliseconds(),3):o.getSeconds()?":"+X(o.getSeconds(),2):"");break}if(e===p){a="forbidden",e="[forbidden]";break}switch(ce.call(e)){case"[object RegExp]":a="regexp",e=function(e){return J.call(e)}(e);break;case"[object Error]":case"[object DOMException]":a="error",e=function(e){return e.stack||K.call(e)}(e);break;default:return(n?O:F)(e,t,i,r)}}var o;const s=document.createElement("span");i&&s.appendChild(l(i));const c=s.appendChild(document.createElement("span"));return c.className="observablehq--"+a,c.textContent=e,s}function de(e,t){e.classList.contains("observablehq--inspect")&&t.classList.add("observablehq--inspect"),e.parentNode.replaceChild(t,e),a(t,"load")}const ue=/\s+\(\d+:\d+\)$/m;class he{constructor(e){if(!e)throw new Error("invalid node");this._node=e,e.classList.add("observablehq")}pending(){const{_node:e}=this;e.classList.remove("observablehq--error"),e.classList.add("observablehq--running")}fulfilled(e,t){const{_node:n}=this;if((!(e instanceof Element||e instanceof Text)||e.parentNode&&e.parentNode!==n)&&(e=fe(e,!1,n.firstChild&&n.firstChild.classList&&n.firstChild.classList.contains("observablehq--expanded"),t)).classList.add("observablehq--inspect"),n.classList.remove("observablehq--running","observablehq--error"),n.firstChild!==e)if(n.firstChild){for(;n.lastChild!==n.firstChild;)n.removeChild(n.lastChild);n.replaceChild(e,n.firstChild)}else n.appendChild(e);a(n,"update")}rejected(e,t){const{_node:n}=this;for(n.classList.remove("observablehq--running"),n.classList.add("observablehq--error");n.lastChild;)n.removeChild(n.lastChild);var i=document.createElement("div");i.className="observablehq--inspect",t&&i.appendChild(l(t)),i.appendChild(document.createTextNode((e+"").replace(ue,""))),n.appendChild(i),a(n,"error",{error:e})}}he.into=function(e){if("string"===typeof e&&null==(e=document.querySelector(e)))throw new Error("container not found");return function(){return new he(e.appendChild(document.createElement("div")))}};const pe=new Map,me=[],ge=me.map,ve=me.some,we=me.hasOwnProperty,be="https://cdn.jsdelivr.net/npm/",xe=/^((?:@[^/@]+\/)?[^/@]+)(?:@([^/]+))?(?:\/(.*))?$/,ye=/^\d+\.\d+\.\d+(-[\w-.+]+)?$/,ke=/\.[^/]*$/,je=["unpkg","jsdelivr","browser","main"];class Oe extends Error{constructor(e){super(e)}}function _e(e){const t=xe.exec(e);return t&&{name:t[1],version:t[2],path:t[3]}}function ze(e){const t=`${be}${e.name}${e.version?"@"+e.version:""}/package.json`;let n=pe.get(t);return n||pe.set(t,n=fetch(t).then(e=>{if(!e.ok)throw new Oe("unable to load package.json");return e.redirected&&!pe.has(e.url)&&pe.set(e.url,n),e.json()})),n}Oe.prototype.name=Oe.name;var Se=Ee((async function(e,t){if(e.startsWith(be)&&(e=e.substring(be.length)),/^(\w+:)|\/\//i.test(e))return e;if(/^[.]{0,2}\//i.test(e))return new URL(e,null==t?location:t).href;if(!e.length||/^[\s._]/.test(e)||/\s$/.test(e))throw new Oe("illegal name");const n=_e(e);if(!n)return`${be}${e}`;if(!n.version&&null!=t&&t.startsWith(be)){const e=await ze(_e(t.substring(be.length)));n.version=e.dependencies&&e.dependencies[n.name]||e.peerDependencies&&e.peerDependencies[n.name]}if(n.path&&!ke.test(n.path)&&(n.path+=".js"),n.path&&n.version&&ye.test(n.version))return`${be}${n.name}@${n.version}/${n.path}`;const i=await ze(n);return`${be}${i.name}@${i.version}/${n.path||function(e){for(const t of je){const n=e[t];if("string"===typeof n)return ke.test(n)?n:n+".js"}}(i)||"index.js"}`}));function Ee(e){const t=new Map,n=r(null);function i(e){if("string"!==typeof e)return e;let n=t.get(e);return n||t.set(e,n=new Promise((t,n)=>{const i=document.createElement("script");i.onload=()=>{try{t(me.pop()(r(e)))}catch(a){n(new Oe("invalid module"))}i.remove()},i.onerror=()=>{n(new Oe("unable to load module")),i.remove()},i.async=!0,i.src=e,window.define=qe,document.head.appendChild(i)})),n}function r(t){return n=>Promise.resolve(e(n,t)).then(i)}function a(e){return arguments.length>1?Promise.all(ge.call(arguments,n)).then(Le):n(e)}return a.alias=function(t){return Ee((n,i)=>n in t&&(i=null,"string"!==typeof(n=t[n]))?n:e(n,i))},a.resolve=e,a}function Le(e){const t={};for(const n of e)for(const e in n)we.call(n,e)&&(null==n[e]?Object.defineProperty(t,e,{get:Te(n,e)}):t[e]=n[e]);return t}function Te(e,t){return()=>e[t]}function Ce(e){return"exports"===(e+="")||"module"===e}function qe(e,t,n){const i=arguments.length;i<2?(n=e,t=[]):i<3&&(n=t,t="string"===typeof e?[]:e),me.push(ve.call(t,Ce)?e=>{const i={},r={exports:i};return Promise.all(ge.call(t,t=>"exports"===(t+="")?i:"module"===t?r:e(t))).then(e=>(n.apply(null,e),r.exports))}:e=>Promise.all(ge.call(t,e)).then(e=>"function"===typeof n?n.apply(null,e):n))}async function Ae(e){const t=await fetch(await e.url());if(!t.ok)throw new Error("Unable to load file: "+e.name);return t}async function Me(e,t,{array:n=!1,typed:i=!1}={}){const[r,a]=await Promise.all([e.text(),Se("d3-dsv@2.0.0/dist/d3-dsv.min.js")]);return("\t"===t?n?a.tsvParseRows:a.tsvParse:n?a.csvParseRows:a.csvParse)(r,i&&a.autoType)}qe.amd={};class Ve{constructor(e,t){Object.defineProperties(this,{_url:{value:e},name:{value:t,enumerable:!0}})}async url(){return await this._url+""}async blob(){return(await Ae(this)).blob()}async arrayBuffer(){return(await Ae(this)).arrayBuffer()}async text(){return(await Ae(this)).text()}async json(){return(await Ae(this)).json()}async stream(){return(await Ae(this)).body}async csv(e){return Me(this,",",e)}async tsv(e){return Me(this,"\t",e)}async image(){const e=await this.url();return new Promise((t,n)=>{const i=new Image;new URL(e,document.baseURI).origin!==new URL(location).origin&&(i.crossOrigin="anonymous"),i.onload=()=>t(i),i.onerror=()=>n(new Error("Unable to load file: "+this.name)),i.src=e})}}function Ne(e){throw new Error("File not found: "+e)}var He=function(e){return function(){return e}},Fe={math:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},Re=0;function De(e){this.id=e,this.href=new URL("#"+e,location)+""}De.prototype.toString=function(){return"url("+this.href+")"};var Ge={canvas:function(e,t){var n=document.createElement("canvas");return n.width=e,n.height=t,n},context2d:function(e,t,n){null==n&&(n=devicePixelRatio);var i=document.createElement("canvas");i.width=e*n,i.height=t*n,i.style.width=e+"px";var r=i.getContext("2d");return r.scale(n,n),r},download:function(e,t="untitled",n="Save"){const i=document.createElement("a"),r=i.appendChild(document.createElement("button"));async function a(){await new Promise(requestAnimationFrame),URL.revokeObjectURL(i.href),i.removeAttribute("href"),r.textContent=n,r.disabled=!1}return r.textContent=n,i.download=t,i.onclick=async t=>{if(r.disabled=!0,i.href)return a();r.textContent="Saving\u2026";try{const t=await("function"===typeof e?e():e);r.textContent="Download",i.href=URL.createObjectURL(t)}catch(o){r.textContent=n}if(t.eventPhase)return a();r.disabled=!1},i},element:function(e,t){var n,i=e+="",r=i.indexOf(":");r>=0&&"xmlns"!==(i=e.slice(0,r))&&(e=e.slice(r+1));var a=Fe.hasOwnProperty(i)?document.createElementNS(Fe[i],e):document.createElement(e);if(t)for(var o in t)r=(i=o).indexOf(":"),n=t[o],r>=0&&"xmlns"!==(i=o.slice(0,r))&&(o=o.slice(r+1)),Fe.hasOwnProperty(i)?a.setAttributeNS(Fe[i],o,n):a.setAttribute(o,n);return a},input:function(e){var t=document.createElement("input");return null!=e&&(t.type=e),t},range:function(e,t,n){1===arguments.length&&(t=e,e=null);var i=document.createElement("input");return i.min=e=null==e?0:+e,i.max=t=null==t?1:+t,i.step=null==n?"any":n=+n,i.type="range",i},select:function(e){var t=document.createElement("select");return Array.prototype.forEach.call(e,(function(e){var n=document.createElement("option");n.value=n.textContent=e,t.appendChild(n)})),t},svg:function(e,t){var n=document.createElementNS("http://www.w3.org/2000/svg","svg");return n.setAttribute("viewBox",[0,0,e,t]),n.setAttribute("width",e),n.setAttribute("height",t),n},text:function(e){return document.createTextNode(e)},uid:function(e){return new De("O-"+(null==e?"":e+"-")+ ++Re)}},Ie={buffer:function(e){return new Promise((function(t,n){var i=new FileReader;i.onload=function(){t(i.result)},i.onerror=n,i.readAsArrayBuffer(e)}))},text:function(e){return new Promise((function(t,n){var i=new FileReader;i.onload=function(){t(i.result)},i.onerror=n,i.readAsText(e)}))},url:function(e){return new Promise((function(t,n){var i=new FileReader;i.onload=function(){t(i.result)},i.onerror=n,i.readAsDataURL(e)}))}};function Pe(){return this}function Be(e,t){let n=!1;if("function"!==typeof t)throw new Error("dispose is not a function");return{[Symbol.iterator]:Pe,next:()=>n?{done:!0}:(n=!0,{done:!1,value:e}),return:()=>(n=!0,t(e),{done:!0}),throw:()=>({done:n=!0})}}var Ue=function(e){let t,n,i=!1;const r=e((function(e){n?(n(e),n=null):i=!0;return t=e}));if(null!=r&&"function"!==typeof r)throw new Error("function"===typeof r.then?"async initializers are not supported":"initializer returned something, but not a dispose function");return{[Symbol.iterator]:Pe,throw:()=>({done:!0}),return:()=>(null!=r&&r(),{done:!0}),next:function(){return{done:!1,value:i?(i=!1,Promise.resolve(t)):new Promise(e=>n=e)}}}};function Ze(e){switch(e.type){case"range":case"number":return e.valueAsNumber;case"date":return e.valueAsDate;case"checkbox":return e.checked;case"file":return e.multiple?e.files:e.files[0];case"select-multiple":return Array.from(e.selectedOptions,e=>e.value);default:return e.value}}var $e={disposable:Be,filter:function*(e,t){for(var n,i=-1;!(n=e.next()).done;)t(n.value,++i)&&(yield n.value)},input:function(e){return Ue((function(t){var n=function(e){switch(e.type){case"button":case"submit":case"checkbox":return"click";case"file":return"change";default:return"input"}}(e),i=Ze(e);function r(){t(Ze(e))}return e.addEventListener(n,r),void 0!==i&&t(i),function(){e.removeEventListener(n,r)}}))},map:function*(e,t){for(var n,i=-1;!(n=e.next()).done;)yield t(n.value,++i)},observe:Ue,queue:function(e){let t;const n=[],i=e((function(e){n.push(e),t&&(t(n.shift()),t=null);return e}));if(null!=i&&"function"!==typeof i)throw new Error("function"===typeof i.then?"async initializers are not supported":"initializer returned something, but not a dispose function");return{[Symbol.iterator]:Pe,throw:()=>({done:!0}),return:()=>(null!=i&&i(),{done:!0}),next:function(){return{done:!1,value:n.length?Promise.resolve(n.shift()):new Promise(e=>t=e)}}}},range:function*(e,t,n){e=+e,t=+t,n=(r=arguments.length)<2?(t=e,e=0,1):r<3?1:+n;for(var i=-1,r=0|Math.max(0,Math.ceil((t-e)/n));++i<r;)yield e+i*n},valueAt:function(e,t){if(!(!isFinite(t=+t)||t<0||t!==t|0))for(var n,i=-1;!(n=e.next()).done;)if(++i===t)return n.value},worker:function(e){const t=URL.createObjectURL(new Blob([e],{type:"text/javascript"})),n=new Worker(t);return Be(n,()=>{n.terminate(),URL.revokeObjectURL(t)})}};function We(e,t){return function(n){var i,r,a,o,s,l,c,f,d=n[0],u=[],h=null,p=-1;for(s=1,l=arguments.length;s<l;++s){if((i=arguments[s])instanceof Node)u[++p]=i,d+="\x3c!--o:"+p+"--\x3e";else if(Array.isArray(i)){for(c=0,f=i.length;c<f;++c)(r=i[c])instanceof Node?(null===h&&(u[++p]=h=document.createDocumentFragment(),d+="\x3c!--o:"+p+"--\x3e"),h.appendChild(r)):(h=null,d+=r);h=null}else d+=i;d+=n[s]}if(h=e(d),++p>0){for(a=new Array(p),o=document.createTreeWalker(h,NodeFilter.SHOW_COMMENT,null,!1);o.nextNode();)r=o.currentNode,/^o:/.test(r.nodeValue)&&(a[+r.nodeValue.slice(2)]=r);for(s=0;s<p;++s)(r=a[s])&&r.parentNode.replaceChild(u[s],r)}return 1===h.childNodes.length?h.removeChild(h.firstChild):11===h.nodeType?((r=t()).appendChild(h),r):h}}var Xe=We((function(e){var t=document.createElement("template");return t.innerHTML=e.trim(),document.importNode(t.content,!0)}),(function(){return document.createElement("span")}));const Ye="https://cdn.jsdelivr.net/npm/@observablehq/highlight.js@2.0.0/";var Ke=function(e){return function(){return e("marked@0.3.12/marked.min.js").then((function(t){return We((function(n){var i=document.createElement("div");i.innerHTML=t(n,{langPrefix:""}).trim();var r=i.querySelectorAll("pre code[class]");return r.length>0&&e(Ye+"highlight.min.js").then((function(t){r.forEach((function(n){function i(){t.highlightBlock(n),n.parentNode.classList.add("observablehq--md-pre")}t.getLanguage(n.className)?i():e(Ye+"async-languages/index.js").then(i=>{if(i.has(n.className))return e(Ye+"async-languages/"+i.get(n.className)).then(e=>{t.registerLanguage(n.className,e)})}).then(i,i)}))})),i}),(function(){return document.createElement("div")}))}))}};function Je(e){let t;Object.defineProperties(this,{generator:{value:Ue(e=>{t=e})},value:{get:()=>e,set:n=>t(e=n)}}),void 0!==e&&t(e)}var Qe=function*(){for(;;)yield Date.now()},et=new Map;function tt(e,t){var n;return(n=et.get(e=+e))?n.then(He(t)):(n=Date.now())>=e?Promise.resolve(t):function(e,t){var n=new Promise((function(n){et.delete(t);var i=t-e;if(!(i>0))throw new Error("invalid time");if(i>2147483647)throw new Error("too long to wait");setTimeout(n,i)}));return et.set(t,n),n}(n,e).then(He(t))}var nt={delay:function(e,t){return new Promise((function(n){setTimeout((function(){n(t)}),e)}))},tick:function(e,t){return tt(Math.ceil((Date.now()+1)/e)*e,t)},when:tt};function it(e,t){if(/^(\w+:)|\/\//i.test(e))return e;if(/^[.]{0,2}\//i.test(e))return new URL(e,null==t?location:t).href;if(!e.length||/^[\s._]/.test(e)||/\s$/.test(e))throw new Error("illegal name");return"https://unpkg.com/"+e}var rt=We((function(e){var t=document.createElementNS("http://www.w3.org/2000/svg","g");return t.innerHTML=e.trim(),t}),(function(){return document.createElementNS("http://www.w3.org/2000/svg","g")})),at=String.raw;function ot(e){return new Promise((function(t,n){var i=document.createElement("link");i.rel="stylesheet",i.href=e,i.onerror=n,i.onload=t,document.head.appendChild(i)}))}var st=function(e){return function(){return Promise.all([e("@observablehq/katex@0.11.1/dist/katex.min.js"),e.resolve("@observablehq/katex@0.11.1/dist/katex.min.css").then(ot)]).then((function(e){var t=e[0],n=i();function i(e){return function(){var n=document.createElement("div");return t.render(at.apply(String,arguments),n,e),n.removeChild(n.firstChild)}}return n.options=i,n.block=i({displayMode:!0}),n}))}},lt=function(){return Ue((function(e){var t=e(document.body.clientWidth);function n(){var n=document.body.clientWidth;n!==t&&e(t=n)}return window.addEventListener("resize",n),function(){window.removeEventListener("resize",n)}}))},ct=Object.assign((function(e){const t=null==(n=e)?Se:Ee(n);var n;Object.defineProperties(this,{DOM:{value:Ge,writable:!0,enumerable:!0},FileAttachment:{value:He(Ne),writable:!0,enumerable:!0},Files:{value:Ie,writable:!0,enumerable:!0},Generators:{value:$e,writable:!0,enumerable:!0},html:{value:He(Xe),writable:!0,enumerable:!0},md:{value:Ke(t),writable:!0,enumerable:!0},Mutable:{value:He(Je),writable:!0,enumerable:!0},now:{value:Qe,writable:!0,enumerable:!0},Promises:{value:nt,writable:!0,enumerable:!0},require:{value:He(t),writable:!0,enumerable:!0},resolve:{value:He(it),writable:!0,enumerable:!0},svg:{value:He(rt),writable:!0,enumerable:!0},tex:{value:st(t),writable:!0,enumerable:!0},width:{value:lt,writable:!0,enumerable:!0}})}),{resolve:Se.resolve});function ft(e,t){this.message=e+"",this.input=t}ft.prototype=Object.create(Error.prototype),ft.prototype.name="RuntimeError",ft.prototype.constructor=ft;var dt=Array.prototype,ut=dt.map,ht=dt.forEach,pt=function(e){return function(){return e}},mt=function(e){return e},gt=function(){},vt={};function wt(e,t,n){var i;null==n&&(n=vt),Object.defineProperties(this,{_observer:{value:n,writable:!0},_definition:{value:yt,writable:!0},_duplicate:{value:void 0,writable:!0},_duplicates:{value:void 0,writable:!0},_indegree:{value:NaN,writable:!0},_inputs:{value:[],writable:!0},_invalidate:{value:gt,writable:!0},_module:{value:t},_name:{value:null,writable:!0},_outputs:{value:new Set,writable:!0},_promise:{value:Promise.resolve(void 0),writable:!0},_reachable:{value:n!==vt,writable:!0},_rejector:{value:(i=this,function(e){if(e===yt)throw new ft(i._name+" is not defined",i._name);if(e instanceof Error&&e.message)throw new ft(e.message,i._name);throw new ft(i._name+" could not be resolved",i._name)})},_type:{value:e},_value:{value:void 0,writable:!0},_version:{value:0,writable:!0}})}function bt(e){e._module._runtime._dirty.add(e),e._outputs.add(this)}function xt(e){e._module._runtime._dirty.add(e),e._outputs.delete(this)}function yt(){throw yt}function kt(e){return function(){throw new ft(e+" is defined more than once")}}function jt(e,t,n){var i=this._module._scope,r=this._module._runtime;if(this._inputs.forEach(xt,this),t.forEach(bt,this),this._inputs=t,this._definition=n,this._value=void 0,n===gt?r._variables.delete(this):r._variables.add(this),e!==this._name||i.get(e)!==this){var a,o;if(this._name)if(this._outputs.size)i.delete(this._name),(o=this._module._resolve(this._name))._outputs=this._outputs,this._outputs=new Set,o._outputs.forEach((function(e){e._inputs[e._inputs.indexOf(this)]=o}),this),o._outputs.forEach(r._updates.add,r._updates),r._dirty.add(o).add(this),i.set(this._name,o);else if((o=i.get(this._name))===this)i.delete(this._name);else{if(3!==o._type)throw new Error;o._duplicates.delete(this),this._duplicate=void 0,1===o._duplicates.size&&(o=o._duplicates.keys().next().value,a=i.get(this._name),o._outputs=a._outputs,a._outputs=new Set,o._outputs.forEach((function(e){e._inputs[e._inputs.indexOf(a)]=o})),o._definition=o._duplicate,o._duplicate=void 0,r._dirty.add(a).add(o),r._updates.add(o),i.set(this._name,o))}if(this._outputs.size)throw new Error;e&&((o=i.get(e))?3===o._type?(this._definition=kt(e),this._duplicate=n,o._duplicates.add(this)):2===o._type?(this._outputs=o._outputs,o._outputs=new Set,this._outputs.forEach((function(e){e._inputs[e._inputs.indexOf(o)]=this}),this),r._dirty.add(o).add(this),i.set(e,this)):(o._duplicate=o._definition,this._duplicate=n,(a=new wt(3,this._module))._name=e,a._definition=this._definition=o._definition=kt(e),a._outputs=o._outputs,o._outputs=new Set,a._outputs.forEach((function(e){e._inputs[e._inputs.indexOf(o)]=a})),a._duplicates=new Set([this,o]),r._dirty.add(o).add(a),r._updates.add(o).add(a),i.set(e,a)):i.set(e,this)),this._name=e}return r._updates.add(this),r._compute(),this}function Ot(e,t=[]){Object.defineProperties(this,{_runtime:{value:e},_scope:{value:new Map},_builtins:{value:new Map([["invalidation",St],["visibility",Et],...t])},_source:{value:null,writable:!0}})}function _t(e){return e._name}Object.defineProperties(wt.prototype,{_pending:{value:function(){this._observer.pending&&this._observer.pending()},writable:!0,configurable:!0},_fulfilled:{value:function(e){this._observer.fulfilled&&this._observer.fulfilled(e,this._name)},writable:!0,configurable:!0},_rejected:{value:function(e){this._observer.rejected&&this._observer.rejected(e,this._name)},writable:!0,configurable:!0},define:{value:function(e,t,n){switch(arguments.length){case 1:n=e,e=t=null;break;case 2:n=t,"string"===typeof e?t=null:(t=e,e=null)}return jt.call(this,null==e?null:e+"",null==t?[]:ut.call(t,this._module._resolve,this._module),"function"===typeof n?n:pt(n))},writable:!0,configurable:!0},delete:{value:function(){return jt.call(this,null,[],gt)},writable:!0,configurable:!0},import:{value:function(e,t,n){arguments.length<3&&(n=t,t=e);return jt.call(this,t+"",[n._resolve(e+"")],mt)},writable:!0,configurable:!0}}),Object.defineProperties(Ot.prototype,{_copy:{value:function(e,t){e._source=this,t.set(this,e);for(const[a,o]of this._scope){var n=e._scope.get(a);if(!n||1!==n._type)if(o._definition===mt){var i=o._inputs[0],r=i._module;e.import(i._name,a,t.get(r)||(r._source?r._copy(new Ot(e._runtime,e._builtins),t):r))}else e.define(a,o._inputs.map(_t),o._definition)}return e},writable:!0,configurable:!0},_resolve:{value:function(e){var t,n=this._scope.get(e);if(!n)if(n=new wt(2,this),this._builtins.has(e))n.define(e,pt(this._builtins.get(e)));else if(this._runtime._builtin._scope.has(e))n.import(e,this._runtime._builtin);else{try{t=this._runtime._global(e)}catch(r){return n.define(e,(i=r,function(){throw i}))}void 0===t?this._scope.set(n._name=e,n):n.define(e,pt(t))}var i;return n},writable:!0,configurable:!0},redefine:{value:function(e){var t=this._scope.get(e);if(!t)throw new ft(e+" is not defined");if(3===t._type)throw new ft(e+" is defined more than once");return t.define.apply(t,arguments)},writable:!0,configurable:!0},define:{value:function(){var e=new wt(1,this);return e.define.apply(e,arguments)},writable:!0,configurable:!0},derive:{value:function(e,t){var n=new Ot(this._runtime,this._builtins);return n._source=this,ht.call(e,(function(e){"object"!==typeof e&&(e={name:e+""}),null==e.alias&&(e.alias=e.name),n.import(e.name,e.alias,t)})),Promise.resolve().then(()=>{const e=new Set([this]);for(const t of e)for(const n of t._scope.values())if(n._definition===mt){const t=n._inputs[0]._module,i=t._source||t;if(i===this)return void console.warn("circular module definition; ignoring");e.add(i)}this._copy(n,new Map)}),n},writable:!0,configurable:!0},import:{value:function(){var e=new wt(1,this);return e.import.apply(e,arguments)},writable:!0,configurable:!0},value:{value:async function(e){var t=this._scope.get(e);if(!t)throw new ft(e+" is not defined");t._observer===vt&&(t._observer=!0,this._runtime._dirty.add(t));return await this._runtime._compute(),t._promise},writable:!0,configurable:!0},variable:{value:function(e){return new wt(1,this,e)},writable:!0,configurable:!0},builtin:{value:function(e,t){this._builtins.set(e,t)},writable:!0,configurable:!0}});const zt="function"===typeof requestAnimationFrame?requestAnimationFrame:setImmediate;var St={},Et={};function Lt(e=new ct,t=Rt){var n=this.module();if(Object.defineProperties(this,{_dirty:{value:new Set},_updates:{value:new Set},_computing:{value:null,writable:!0},_init:{value:null,writable:!0},_modules:{value:new Map},_variables:{value:new Set},_disposed:{value:!1,writable:!0},_builtin:{value:n},_global:{value:t}}),e)for(var i in e)new wt(2,n).define(i,[],e[i])}function Tt(e){const t=new Set(e._inputs);for(const n of t){if(n===e)return!0;n._inputs.forEach(t.add,t)}return!1}function Ct(e){++e._indegree}function qt(e){--e._indegree}function At(e){return e._promise.catch(e._rejector)}function Mt(e){return new Promise((function(t){e._invalidate=t}))}function Vt(e,t){let n,i,r="function"===typeof IntersectionObserver&&t._observer&&t._observer._node,a=!r,o=gt,s=gt;return r&&(i=new IntersectionObserver(([e])=>(a=e.isIntersecting)&&(n=null,o())),i.observe(r),e.then(()=>(i.disconnect(),i=null,s()))),function(e){return a?Promise.resolve(e):i?(n||(n=new Promise((e,t)=>(o=e,s=t))),n.then(()=>e)):Promise.reject()}}function Nt(e){e._invalidate(),e._invalidate=gt,e._pending();var t=e._value,n=++e._version,i=null,r=e._promise=Promise.all(e._inputs.map(At)).then((function(r){if(e._version===n){for(var a=0,o=r.length;a<o;++a)switch(r[a]){case St:r[a]=i=Mt(e);break;case Et:i||(i=Mt(e)),r[a]=Vt(i,e)}return e._definition.apply(t,r)}})).then((function(t){return function(e){return e&&"function"===typeof e.next&&"function"===typeof e.return}(t)?e._version!==n?void t.return():((i||Mt(e)).then((a=t,function(){a.return()})),function(e,t,n,i){function r(){var n=new Promise((function(e){e(i.next())})).then((function(i){return i.done?void 0:Promise.resolve(i.value).then((function(i){if(e._version===t)return Ht(e,i,n).then(r),e._fulfilled(i),i}))}));n.catch((function(i){e._version===t&&(Ht(e,void 0,n),e._rejected(i))}))}return new Promise((function(e){e(i.next())})).then((function(e){if(!e.done)return n.then(r),e.value}))}(e,n,r,t)):t;var a}));r.then((function(t){e._version===n&&(e._value=t,e._fulfilled(t))}),(function(t){e._version===n&&(e._value=void 0,e._rejected(t))}))}function Ht(e,t,n){var i=e._module._runtime;return e._value=t,e._promise=n,e._outputs.forEach(i._updates.add,i._updates),i._compute()}function Ft(e,t){e._invalidate(),e._invalidate=gt,e._pending(),++e._version,e._indegree=NaN,(e._promise=Promise.reject(t)).catch(gt),e._value=void 0,e._rejected(t)}function Rt(e){return window[e]}Object.defineProperties(Lt,{load:{value:function(e,t,n){if("function"==typeof t&&(n=t,t=null),"function"!==typeof n)throw new Error("invalid observer");null==t&&(t=new ct);const{modules:i,id:r}=e,a=new Map,o=new Lt(t),s=l(r);function l(e){let t=a.get(e);return t||a.set(e,t=o.module()),t}for(const c of i){const e=l(c.id);let t=0;for(const i of c.variables)i.from?e.import(i.remote,i.name,l(i.from)):e===s?e.variable(n(i,t,c.variables)).define(i.name,i.inputs,i.value):e.define(i.name,i.inputs,i.value),++t}return o},writable:!0,configurable:!0}}),Object.defineProperties(Lt.prototype,{_compute:{value:function(){return this._computing||(this._computing=this._computeSoon())},writable:!0,configurable:!0},_computeSoon:{value:function(){var e=this;return new Promise((function(t){zt((function(){t(),e._disposed||e._computeNow()}))}))},writable:!0,configurable:!0},_computeNow:{value:function(){var e,t,n=[];(e=new Set(this._dirty)).forEach((function(t){t._inputs.forEach(e.add,e);const n=function(e){if(e._observer!==vt)return!0;var t=new Set(e._outputs);for(const n of t){if(n._observer!==vt)return!0;n._outputs.forEach(t.add,t)}return!1}(t);n>t._reachable?this._updates.add(t):n<t._reachable&&t._invalidate(),t._reachable=n}),this),(e=new Set(this._updates)).forEach((function(t){t._reachable?(t._indegree=0,t._outputs.forEach(e.add,e)):(t._indegree=NaN,e.delete(t))})),this._computing=null,this._updates.clear(),this._dirty.clear(),e.forEach((function(e){e._outputs.forEach(Ct)}));do{for(e.forEach((function(e){0===e._indegree&&n.push(e)}));t=n.pop();)Nt(t),t._outputs.forEach(i),e.delete(t);e.forEach((function(t){Tt(t)&&(Ft(t,new ft("circular definition")),t._outputs.forEach(qt),e.delete(t))}))}while(e.size);function i(e){0===--e._indegree&&n.push(e)}},writable:!0,configurable:!0},dispose:{value:function(){this._computing=Promise.resolve(),this._disposed=!0,this._variables.forEach(e=>{e._invalidate(),e._version=NaN})},writable:!0,configurable:!0},module:{value:function(e,t=gt){let n;if(void 0===e)return(n=this._init)?(this._init=null,n):new Ot(this);if(n=this._modules.get(e),n)return n;this._init=n=new Ot(this),this._modules.set(e,n);try{e(this,t)}finally{this._init=null}return n},writable:!0,configurable:!0},fileAttachments:{value:function(e){return Object.assign(t=>{const n=e(t+="");if(null==n)throw new Error("File not found: "+t);return new Ve(n,t)},{prototype:Ve.prototype})},writable:!0,configurable:!0}});var Dt=n("a3WO");var Gt=n("BsWD");function It(e){return function(e){if(Array.isArray(e))return Object(Dt.a)(e)}(e)||function(e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||Object(Gt.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var Pt=n("1OyB"),Bt=n("vuIU"),Ut=n("h4VS");function Zt(){var e=Object(Ut.a)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="186px" height="176px" viewBox="-0.5 -0.5 186 176" style="background-color: rgb(255, 255, 255);"><defs></defs><g><path d="M 100 20 L 70 20 L 70 59.01" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 70 62.76 L 67.5 57.76 L 70 59.01 L 72.5 57.76 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="all"></path><path d="M 140 20 L 165 20 L 165 59.01" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 165 62.76 L 162.5 57.76 L 165 59.01 L 167.5 57.76 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="120" cy="20" rx="20" ry="20" fill="#ffffff" stroke="#000000" pointer-events="all"></ellipse><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 40px; margin-left: 201px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 31px">A</font></div></div></div></foreignObject><text x="240" y="44" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">A</text></switch></g><path d="M 50 85 L 20 85 L 20 129.01" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 20 132.76 L 17.5 127.76 L 20 129.01 L 22.5 127.76 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="all"></path><path d="M 90 85 L 105 85 L 105 129.01" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 105 132.76 L 102.5 127.76 L 105 129.01 L 107.5 127.76 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="70" cy="85" rx="20" ry="20" fill="#ffffff" stroke="#000000" pointer-events="all"></ellipse><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 170px; margin-left: 101px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 31px">B</font></div></div></div></foreignObject><text x="140" y="174" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">B</text></switch></g><ellipse cx="165" cy="85" rx="20" ry="20" fill="#ffffff" stroke="#000000" pointer-events="all"></ellipse><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 170px; margin-left: 291px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 31px">C</font></div></div></div></foreignObject><text x="330" y="174" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">C</text></switch></g><ellipse cx="20" cy="155" rx="20" ry="20" fill="#ffffff" stroke="#000000" pointer-events="all"></ellipse><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 310px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 31px">D</font></div></div></div></foreignObject><text x="40" y="314" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">D</text></switch></g><ellipse cx="105" cy="155" rx="20" ry="20" fill="#ffffff" stroke="#000000" pointer-events="all"></ellipse><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 310px; margin-left: 171px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 31px">E</font></div></div></div></foreignObject><text x="210" y="314" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">E</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>']);return Zt=function(){return e},e}function $t(){var e=Object(Ut.a)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="281px" height="163px" viewBox="-0.5 -0.5 281 163" style="background-color: rgb(255, 255, 255);"><defs></defs><g><rect x="0" y="42" width="85" height="110" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><rect x="100" y="42" width="85" height="120" fill="#dae8fc" stroke="#6c8ebf" pointer-events="all"></rect><rect x="20" y="12" width="45" height="25" fill="none" stroke="none" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 88px; height: 1px; padding-top: 49px; margin-left: 41px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 33px">Keys</font></div></div></div></foreignObject><text x="85" y="53" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Keys</text></switch></g><rect x="105" y="7" width="75" height="25" fill="none" stroke="none" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 148px; height: 1px; padding-top: 39px; margin-left: 211px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 33px">Hash<br>Function<br></font></div></div></div></foreignObject><text x="285" y="43" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Hash...</text></switch></g><rect x="205" y="7" width="70" height="25" fill="none" stroke="none" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 39px; margin-left: 411px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 33px">Buckets</font></div></div></div></foreignObject><text x="480" y="43" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Buckets</text></switch></g><rect x="205" y="42" width="75" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 148px; height: 1px; padding-top: 104px; margin-left: 412px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 32px">0</font></div></div></div></foreignObject><text x="412" y="108" fill="#000000" font-family="Helvetica" font-size="12px">0</text></switch></g><path d="M 72.5 59.5 L 130 59.5 L 130 102 L 199.01 102" fill="none" stroke="#9673a6" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 202.76 102 L 197.76 104.5 L 199.01 102 L 197.76 99.5 Z" fill="#9673a6" stroke="#9673a6" stroke-width="2" stroke-miterlimit="10" pointer-events="all"></path><rect x="12.5" y="47" width="60" height="25" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 119px; margin-left: 26px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 25px">foo</font></div></div></div></foreignObject><text x="85" y="123" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">foo</text></switch></g><path d="M 72.5 94.5 L 110 94.5 L 110 77 L 160 77 L 160 52 L 199.01 52" fill="none" stroke="#b85450" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 202.76 52 L 197.76 54.5 L 199.01 52 L 197.76 49.5 Z" fill="#b85450" stroke="#b85450" stroke-width="2" stroke-miterlimit="10" pointer-events="all"></path><rect x="12.5" y="82" width="60" height="25" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 189px; margin-left: 26px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 25px">bar</font></div></div></div></foreignObject><text x="85" y="193" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">bar</text></switch></g><path d="M 72.5 129.5 L 138.5 129.5 L 138.5 152 L 199.01 152" fill="none" stroke="#005700" stroke-width="2" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 202.76 152 L 197.76 154.5 L 199.01 152 L 197.76 149.5 Z" fill="#005700" stroke="#005700" stroke-width="2" stroke-miterlimit="10" pointer-events="all"></path><rect x="12.5" y="117" width="60" height="25" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 259px; margin-left: 26px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 25px">baz</font></div></div></div></foreignObject><text x="85" y="263" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">baz</text></switch></g><rect x="225" y="42" width="55" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 104px; margin-left: 451px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 19px">Value boo</font></div></div></div></foreignObject><text x="505" y="108" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Value boo</text></switch></g><rect x="205" y="67" width="75" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 148px; height: 1px; padding-top: 154px; margin-left: 412px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 32px">1</font></div></div></div></foreignObject><text x="412" y="158" fill="#000000" font-family="Helvetica" font-size="12px">1</text></switch></g><rect x="225" y="67" width="55" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><rect x="205" y="92" width="75" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 148px; height: 1px; padding-top: 204px; margin-left: 412px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 32px">2</font></div></div></div></foreignObject><text x="412" y="208" fill="#000000" font-family="Helvetica" font-size="12px">2</text></switch></g><rect x="225" y="92" width="55" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 204px; margin-left: 451px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 19px">Value foo</font></div></div></div></foreignObject><text x="505" y="208" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Value foo</text></switch></g><rect x="205" y="117" width="75" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 148px; height: 1px; padding-top: 254px; margin-left: 412px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 32px">3</font></div></div></div></foreignObject><text x="412" y="258" fill="#000000" font-family="Helvetica" font-size="12px">3</text></switch></g><rect x="225" y="117" width="55" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><rect x="205" y="142" width="75" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 148px; height: 1px; padding-top: 304px; margin-left: 412px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 32px">4</font></div></div></div></foreignObject><text x="412" y="308" fill="#000000" font-family="Helvetica" font-size="12px">4</text></switch></g><rect x="225" y="142" width="55" height="20" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 304px; margin-left: 451px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 19px">Value baz</font></div></div></div></foreignObject><text x="505" y="308" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Value baz</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>']);return $t=function(){return e},e}function Wt(){var e=Object(Ut.a)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="236px" height="241px" viewBox="-0.5 -0.5 236 241" style="background-color: rgb(255, 255, 255);"><defs></defs><g><path d="M 115 192.5 L 115 225 L 161.82 225" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 164.44 225 L 160.94 226.75 L 161.82 225 L 160.94 223.25 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><rect x="80" y="47.5" width="70" height="145" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><rect x="85" y="157.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 345px; margin-left: 171px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 40px">0</font></div></div></div></foreignObject><text x="230" y="349" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">0</text></switch></g><rect x="85" y="122.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 275px; margin-left: 171px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 40px">1</span></div></div></div></foreignObject><text x="230" y="279" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">1</text></switch></g><rect x="85" y="87.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 205px; margin-left: 171px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 40px">2</span></div></div></div></foreignObject><text x="230" y="209" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">2</text></switch></g><rect x="85" y="52.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 135px; margin-left: 171px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 40px">3</span></div></div></div></foreignObject><text x="230" y="139" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">3</text></switch></g><path d="M 70 15 L 97.5 15 L 97.5 44.32" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 97.5 46.94 L 95.75 43.44 L 97.5 44.32 L 99.25 43.44 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><rect x="0" y="0" width="70" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 30px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 30px">Enqueue</font></div></div></div></foreignObject><text x="70" y="34" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Enqueue</text></switch></g><rect x="165" y="210" width="70" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 138px; height: 1px; padding-top: 450px; margin-left: 331px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 30px">Dequeue</font></div></div></div></foreignObject><text x="400" y="454" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Dequeue</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>']);return Wt=function(){return e},e}function Xt(){var e=Object(Ut.a)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="211px" height="193px" viewBox="-0.5 -0.5 211 193" content="<mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2020-10-21T15:14:11.039Z&quot; agent=&quot;5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.20 Safari/537.36&quot; etag=&quot;NySV6nsSNDTzxsq8OI_c&quot; version=&quot;13.8.1&quot; type=&quot;device&quot;><diagram id=&quot;e6bQdnvhRf-7sJ2BzmwN&quot; name=&quot;Page-1&quot;>1Vffc5swDP5reGwO25CExzXN1rutu+6y69q9+YIDbA5ixgTYXz8DdoDlx2XbMdKXxPosyZI+C4RFFtvinaBJ+AA+4xa2/cIidxbG7tRTvxVQNsCczBsgEJHfQKgFVtFPpkFbo1nks7SnKAG4jJI+uIY4ZmvZw6gQkPfVNsD7pyY0YAfAak35Ifol8mWos8CzFr9nURCak5FJeEuNss4kDakPeQciS4ssBIBsVttiwXhVO1OXxu7tid19YILF8hKDp09Avz8+7Babp4/3q+D918/T8mYfnCxNxsxXBdAiCBlCADHlyxa9FZDFPqvc2kpqdT4AJApECvzGpCw1mzSToKBQbrneZUUknyvzyczV4ov2Vq3viq5QGiGWonzuCrXNxDVia1ZLxq5JsMrqZOE0lEIm1uxMtVx9AakImDyjh7w9v6ovGGyZCkgZCsapjHb9QKi+ocFeryVRLTSPf8CpjnJHeaZPOuC4z2AeRpKtElrnnqs27rOl3TEhWXG+hIcZawNi2lk/BbCng8zbnkKO1gk7/YQ9e6AqoSNVmnJ17O0GVFLdck1/ZGA2btL6Ur9RCo6dFO2mWgXVv23cqKgaTw0+Pge4z4GLjnCAj3AwHYoCfJKCNKHx31OAOhQ0nq6UAscZmwIyEAX4tVBAZmNT4AxEAXk1FNhjU4DmY05BZt0ZZy4YgiZ4P/i8dDeHn4LQ7MIxyB1zCjJR/sMLnhztq8csDa/1HY9mv81Ztj12a3lD0aC67EpZcP4jC0psPyHrvc53OFn+Ag==</diagram></mxfile>" style="background-color: rgb(255, 255, 255);"><defs></defs><g><path d="M 122.5 47.5 L 122.5 15 L 146.82 15" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 149.44 15 L 145.94 16.75 L 146.82 15 L 145.94 13.25 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><rect x="70" y="47.5" width="70" height="145" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><rect x="75" y="157.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 345px; margin-left: 151px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 40px">0</font></div></div></div></foreignObject><text x="210" y="349" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">0</text></switch></g><rect x="75" y="122.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 275px; margin-left: 151px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 40px">1</span></div></div></div></foreignObject><text x="210" y="279" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">1</text></switch></g><rect x="75" y="87.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 205px; margin-left: 151px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 40px">2</span></div></div></div></foreignObject><text x="210" y="209" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">2</text></switch></g><rect x="75" y="52.5" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 135px; margin-left: 151px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 40px">3</span></div></div></div></foreignObject><text x="210" y="139" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">3</text></switch></g><path d="M 60 15 L 87.5 15 L 87.5 44.32" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 87.5 46.94 L 85.75 43.44 L 87.5 44.32 L 89.25 43.44 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><rect x="0" y="0" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 30px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 30px">Push</font></div></div></div></foreignObject><text x="60" y="34" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Push</text></switch></g><rect x="150" y="0" width="60" height="30" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)scale(0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="200%" height="200%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 30px; margin-left: 301px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 30px">Pop</font></div></div></div></foreignObject><text x="360" y="34" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">Pop</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>']);return Xt=function(){return e},e}function Yt(){var e=Object(Ut.a)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="517px" height="100px" viewBox="-0.5 -0.5 517 100" style="background-color: rgb(255, 255, 255);"><defs></defs><g><rect x="27" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 29px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;0&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="29" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;0&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 77 60 L 77 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 122 30 L 140.63 30" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 145.88 30 L 138.88 33.5 L 140.63 30 L 138.88 26.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="102" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><rect x="147" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 149px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;1&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="149" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;1&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 197 60 L 197 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 242 30 L 260.63 30" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 265.88 30 L 258.88 33.5 L 260.63 30 L 258.88 26.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="222" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><rect x="267" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 269px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;2&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="269" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;2&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 317 60 L 317 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 362 30 L 382 30 L 367 30 L 380.63 30" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 385.88 30 L 378.88 33.5 L 380.63 30 L 378.88 26.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="342" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><path d="M 487 30 L 507 30 L 507 90 L 7 90 L 7 30 L 20.63 30" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 25.88 30 L 18.88 33.5 L 20.63 30 L 18.88 26.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><rect x="387" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 389px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;3&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="389" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;3&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 437 60 L 437 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><ellipse cx="462" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>']);return Yt=function(){return e},e}function Kt(){var e=Object(Ut.a)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="431px" height="65px" viewBox="-0.5 -0.5 431 65" style="background-color: rgb(255, 255, 255);"><defs></defs><g><rect x="0" y="0" width="130" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 128px; height: 1px; padding-top: 30px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 38px">0</span></div></div></div></foreignObject><text x="65" y="34" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">0</text></switch></g><path d="M 85 60 L 84.5 1.14" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 43.29 61.02 L 43.29 -0.12" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><ellipse cx="22" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><ellipse cx="107" cy="31" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><rect x="150" y="0.55" width="130" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 128px; height: 1px; padding-top: 31px; margin-left: 151px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 38px">1</span></div></div></div></foreignObject><text x="215" y="34" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">1</text></switch></g><path d="M 235 60.55 L 234.5 1.69" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 193.29 61.57 L 193.29 0.43" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><ellipse cx="172" cy="30.55" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><ellipse cx="257" cy="31.55" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><rect x="300" y="1.1" width="130" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 128px; height: 1px; padding-top: 31px; margin-left: 301px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><span style="font-size: 38px">2</span></div></div></div></foreignObject><text x="365" y="35" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">2</text></switch></g><path d="M 385 61.1 L 384.5 2.24" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 343.29 62.12 L 343.29 0.98" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><ellipse cx="322" cy="31.1" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><ellipse cx="407" cy="32.1" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><path d="M 133.37 31 L 152 31 L 145.63 30.7" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 128.12 31 L 135.12 27.5 L 133.37 31 L 135.12 34.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><path d="M 150.88 30.58 L 143.97 34.24 L 145.63 30.7 L 143.8 27.25 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><path d="M 283.37 31.56 L 297 31.57 L 297 31.14 L 295.63 31.14" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 278.12 31.55 L 285.12 28.06 L 283.37 31.56 L 285.11 35.06 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><path d="M 300.88 31.14 L 293.88 34.64 L 295.63 31.14 L 293.88 27.64 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>']);return Kt=function(){return e},e}function Jt(){var e=Object(Ut.a)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="461px" height="63px" viewBox="-0.5 -0.5 461 63" style="background-color: rgb(255, 255, 255);"><defs></defs><g><rect x="0" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 2px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;0&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="2" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;0&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 50 60 L 50 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 95 30 L 113.63 30" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 118.88 30 L 111.88 33.5 L 113.63 30 L 111.88 26.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="75" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><rect x="120" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 122px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;1&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="122" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;1&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 170 60 L 170 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 215 30 L 233.63 30" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 238.88 30 L 231.88 33.5 L 233.63 30 L 231.88 26.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="195" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><rect x="240" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 242px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;2&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="242" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;2&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 290 60 L 290 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 335 30 L 355 30 L 340 30 L 353.63 30" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><path d="M 358.88 30 L 351.88 33.5 L 353.63 30 L 351.88 26.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"></path><ellipse cx="315" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><rect x="360" y="0" width="100" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="all"></rect><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 98px; height: 1px; padding-top: 30px; margin-left: 362px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 38px">&nbsp;3&nbsp; &nbsp; &nbsp;</font></div></div></div></foreignObject><text x="362" y="34" fill="#000000" font-family="Helvetica" font-size="12px">&nbsp;3&nbsp; &nbsp; &nbsp;</text></switch></g><path d="M 410 60 L 410 0" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"></path><ellipse cx="435" cy="30" rx="20" ry="20" fill="#f5f5f5" stroke="#666666" pointer-events="all"></ellipse><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 30px; margin-left: 416px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #333333; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 30px">X</font></div></div></div></foreignObject><text x="435" y="34" fill="#333333" font-family="Helvetica" font-size="12px" text-anchor="middle">X</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"></g><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>']);return Jt=function(){return e},e}function Qt(){var e=Object(Ut.a)(['<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="331px" height="281px" viewBox="-0.5 -0.5 331 281" style="background-color: rgb(255, 255, 255);"><defs/><g><ellipse cx="210" cy="40" rx="40" ry="40" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 40px; margin-left: 171px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 42px">A</font></div></div></div></foreignObject><text x="210" y="44" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">A</text></switch></g><ellipse cx="130" cy="140" rx="40" ry="40" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 140px; margin-left: 91px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 42px">B</font></div></div></div></foreignObject><text x="130" y="144" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">B</text></switch></g><ellipse cx="290" cy="140" rx="40" ry="40" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 140px; margin-left: 251px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 42px">C</font></div></div></div></foreignObject><text x="290" y="144" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">C</text></switch></g><ellipse cx="40" cy="240" rx="40" ry="40" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 240px; margin-left: 1px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 42px">D</font></div></div></div></foreignObject><text x="40" y="244" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">D</text></switch></g><ellipse cx="210" cy="240" rx="40" ry="40" fill="#ffffff" stroke="#000000" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 240px; margin-left: 171px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><font style="font-size: 42px">E</font></div></div></div></foreignObject><text x="210" y="244" fill="#000000" font-family="Helvetica" font-size="12px" text-anchor="middle">E</text></switch></g><path d="M 188 75.04 L 162.29 106.77" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 158.99 110.85 L 160.68 103.2 L 162.29 106.77 L 166.11 107.61 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 100 170 L 72.14 206.65" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 68.96 210.83 L 70.41 203.14 L 72.14 206.65 L 75.98 207.37 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 158.28 168.28 L 182.93 202.35" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 186.01 206.61 L 179.07 202.99 L 182.93 202.35 L 184.74 198.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 269.04 178 L 242.58 207.01" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 239.04 210.89 L 241.17 203.36 L 242.58 207.01 L 246.34 208.08 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 238.28 68.28 L 262.93 102.35" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 266.01 106.61 L 259.07 102.99 L 262.93 102.35 L 264.74 98.88 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://desk.draw.io/support/solutions/articles/16000042487" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Viewer does not support full SVG 1.1</text></a></switch></svg>']);return Qt=function(){return e},e}function en(){var e=Object(Ut.a)(['\n<style>\n\n.reference ~ .reference:before {\n  content: ", ";\n  font-size: 70%;\n  top: -0.4em;\n  position: relative;\n}\n\nol.references {\n  counter-reset: list;\n  padding-left: 0;\n}\n\nol.references li {\n  list-style: none;\n}\n\nol.references li:before {\n  content: "[" counter(list) "] ";\n  counter-increment: list;\n}\n\nol.references a {\n  font-family: var(--sans-serif);\n  font-size: 92%;\n}\n\n</style>']);return en=function(){return e},e}function tn(){var e=Object(Ut.a)(["## Utils"]);return tn=function(){return e},e}function nn(){var e=Object(Ut.a)(['\n<li><a title="','" href="','">',"</a>"]);return nn=function(){return e},e}function rn(){var e=Object(Ut.a)(['\n# Licenses\n\nUnless otherwise noted, this work by Henry Gressmann (including all diagrams, videos and text) is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution 4.0 International License</a>.\n\nUnless otherwise noted, all code examples are also licensed under the [MIT-License](https://opensource.org/licenses/MIT), copyright 2020 Henry Gressmann.\n\n# References\n\n<ol class="references">',"\n\nDictionary of Algorithms and Data Structures. (2020). Retrieved 25 October 2020, from https://www.nist.gov/dads\n\nTime complexity of Euclid's Algorithm. (2020). Retrieved 25 October 2020, from https://www.xspdf.com/resolution/54304117.html\n\nRowell, E., Big-O Algorithm Complexity Cheat Sheet. Retrieved October 25, 2020, from https://www.bigocheatsheet.com/\n\nPerez, D., Node-murmurhash [Murmur3 Implementation used for bloom filters]. Retrieved 25 October 2020, from https://github.com/perezd/node-murmurhash\n"]);return rn=function(){return e},e}function an(){var e=Object(Ut.a)(["**input**: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n","</br>\n**radixSort(input)**: &nbsp;&nbsp;","</br></br>"]);return an=function(){return e},e}function on(){var e=Object(Ut.a)(["<button>randomize input"]);return on=function(){return e},e}function sn(){var e=Object(Ut.a)(["### Try it out:"]);return sn=function(){return e},e}function ln(){var e=Object(Ut.a)(["\n```js\nradixSort = array => {\n  const maxDigits = Math.max(...array.map(n => n.toString().length));\n\n  for (let i = 0; i < maxDigits; i++) {\n    const buckets = Array(10)\n      .fill()\n      .map(() => []);\n\n    for (let j = 0; j < array.length; j++)\n      if (array[j]) buckets[getDigitRight(array[j], i)].push(array[j]);\n\n    array = buckets.flat();\n  }\n\n  return array;\n}\n```\n"],["\n\\`\\`\\`js\nradixSort = array => {\n  const maxDigits = Math.max(...array.map(n => n.toString().length));\n\n  for (let i = 0; i < maxDigits; i++) {\n    const buckets = Array(10)\n      .fill()\n      .map(() => []);\n\n    for (let j = 0; j < array.length; j++)\n      if (array[j]) buckets[getDigitRight(array[j], i)].push(array[j]);\n\n    array = buckets.flat();\n  }\n\n  return array;\n}\n\\`\\`\\`\n"]);return ln=function(){return e},e}function cn(){var e=Object(Ut.a)(["O(n + k)"]);return cn=function(){return e},e}function fn(){var e=Object(Ut.a)(["O(n cdot k) scriptsize "],["O(n \\cdot k) \\scriptsize "]);return fn=function(){return e},e}function dn(){var e=Object(Ut.a)(["## 4.2 Radix Sort\n|||\n| ---------------- | ----------------- |\n| Time Complexity  | "," (where k is the number of bits required to store each key) |\n| Space Complexity | ",' |\n| Stability | It depends |\n\nRadix sort is a sorting algorithm that works without actually comparing any elements.\nTo see how this is done, check out my short video explaining how it works: \n\n<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/5M1Cm1Xx96o" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>\n\nTypically, there are two different flavors of radix sort:\n* **LDS** (least significant digit)\n  We start with the least significant digit of a number, e.g for `12345` we start from the right with the digit, `5`. In the example below this is implemented by the `getDigitRight` function.\n* **MDS** (most significant digit):\n  Here, we start from the left of the number instead. A caveat of this approch is, that it requires us to create "sub-buckets" at each step for buckets with two or more elements.\n\n#### Stability\nStability depends on the implementation. Radix sort can be implemented to start at the most significant digit (MSD) or the least significant digit (LSD). The sample implementation below is using LSD, which is generally stable. MSD can produce unstable results when the order of duplicate keys must be maintained.\n\nIt is possible to create a stable MSD implementation, though this requires the use of a memory buffer of the same size as the input, allowing us to scan from left to right and placing items in the bins in the same order.\n\n#### Optimizations\nTo further optimise the performance of radix sort, the nature of radix sort allows for multiple optimizations:\n* Due to the independent sorting of buckets, it can be parallized to run the different steps on multiple computer cores\n* You can create hybrid approaches, where as the buckets get smaller, counting sort gets replaced for another sorting algorithm like insertion sort.\n'],["## 4.2 Radix Sort\n|||\n| ---------------- | ----------------- |\n| Time Complexity  | "," (where k is the number of bits required to store each key) |\n| Space Complexity | ",' |\n| Stability | It depends |\n\nRadix sort is a sorting algorithm that works without actually comparing any elements.\nTo see how this is done, check out my short video explaining how it works: \n\n<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/5M1Cm1Xx96o" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>\n\nTypically, there are two different flavors of radix sort:\n* **LDS** (least significant digit)\n  We start with the least significant digit of a number, e.g for \\`12345\\` we start from the right with the digit, \\`5\\`. In the example below this is implemented by the \\`getDigitRight\\` function.\n* **MDS** (most significant digit):\n  Here, we start from the left of the number instead. A caveat of this approch is, that it requires us to create "sub-buckets" at each step for buckets with two or more elements.\n\n#### Stability\nStability depends on the implementation. Radix sort can be implemented to start at the most significant digit (MSD) or the least significant digit (LSD). The sample implementation below is using LSD, which is generally stable. MSD can produce unstable results when the order of duplicate keys must be maintained.\n\nIt is possible to create a stable MSD implementation, though this requires the use of a memory buffer of the same size as the input, allowing us to scan from left to right and placing items in the bins in the same order.\n\n#### Optimizations\nTo further optimise the performance of radix sort, the nature of radix sort allows for multiple optimizations:\n* Due to the independent sorting of buckets, it can be parallized to run the different steps on multiple computer cores\n* You can create hybrid approaches, where as the buckets get smaller, counting sort gets replaced for another sorting algorithm like insertion sort.\n']);return dn=function(){return e},e}function un(){var e=Object(Ut.a)(['\n```js\nclass BloomFilter {\n  constructor({ probability = 0.05, itemCount = 20 }) {\n    const size = Math.floor(\n      -(itemCount * Math.log(probability)) / Math.log(2) ** 2\n    );\n\n    Object.assign(this, {\n      probability,\n      size,\n      hashCount: (size / itemCount) * Math.log(2),\n      value: Array(size).fill(0)\n    });\n  }\n\n  add(item) {\n    for (let i = 0; i < this.hashCount; i++) {\n      const digest = mmh(item, i) % this.size;\n      this.value[digest] = 1;\n    }\n  }\n\n  check(item) {\n    for (let i = 0; i < this.hashCount; i++) {\n      const digest = mmh(item, i) % this.size;\n      if (!this.value[digest]) return false;\n    }\n    return true;\n  }\n}\n\nconst bloom = new BloomFilter({ itemCount: 10 });\nbloom.add("blue");\nbloom.check("green"); // -> false\nbloom.check("blue"); // -> true\nreturn bloom.value.join(\'\');\n```\n'],['\n\\`\\`\\`js\nclass BloomFilter {\n  constructor({ probability = 0.05, itemCount = 20 }) {\n    const size = Math.floor(\n      -(itemCount * Math.log(probability)) / Math.log(2) ** 2\n    );\n\n    Object.assign(this, {\n      probability,\n      size,\n      hashCount: (size / itemCount) * Math.log(2),\n      value: Array(size).fill(0)\n    });\n  }\n\n  add(item) {\n    for (let i = 0; i < this.hashCount; i++) {\n      const digest = mmh(item, i) % this.size;\n      this.value[digest] = 1;\n    }\n  }\n\n  check(item) {\n    for (let i = 0; i < this.hashCount; i++) {\n      const digest = mmh(item, i) % this.size;\n      if (!this.value[digest]) return false;\n    }\n    return true;\n  }\n}\n\nconst bloom = new BloomFilter({ itemCount: 10 });\nbloom.add("blue");\nbloom.check("green"); // -> false\nbloom.check("blue"); // -> true\nreturn bloom.value.join(\'\');\n\\`\\`\\`\n']);return un=function(){return e},e}function hn(){var e=Object(Ut.a)(["O(m)"]);return hn=function(){return e},e}function pn(){var e=Object(Ut.a)(["O(k)"]);return pn=function(){return e},e}function mn(){var e=Object(Ut.a)(["O(k)"]);return mn=function(){return e},e}function gn(){var e=Object(Ut.a)(["## 4.1 Bloom Filters\n\n|||\n|-|-|\n|Insertion|","|\n|Search|","|\n|Space Complexity|",'|\n\nA Bloom filter is an extremely space-efficient data structure. They represent a collection of elements and provided the option to insert new elements or search for elements. It is probabilistic, this means that false positives for the search are possible, but false negatives are not.\n\nFor an explanation of how they work, check out my short video:\n\n<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/r4bZBu61DW4" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>\n\nI\'ve created a simple implementation of Bloom filters that you can try out below.\n\nSomething that helped me immensely when learning about them is that bloom filters function very similarly to a [Hash Map](#hash) when setting the size to the item count (essentially making it deterministic).\nYou can essentially think of a bloom filter as a hashmap where all buckets have been compressed into a single string with either a value of 1 (the value has been set) or 0 (the value doesn\'t exist).\n']);return gn=function(){return e},e}function vn(){var e=Object(Ut.a)(["\n<br>\n# 4. Advanced Algorithms and Data Structures\n\nNow, I would like to showcase my two of my favourite more advanced Algorithms and Data Structures. These can be extremely useful and solve problems in an elegant and unexpected way"]);return vn=function(){return e},e}function wn(){var e=Object(Ut.a)(['\n```js\ndepthFirstSearch = ({ graph, start, target }) => {\n  const visited = new Set();\n  const stack = [start];\n\n  while (stack.length !== 0) {\n    const vertex = stack.pop();\n    if (visited.has(vertex)) continue;\n    visited.add(vertex);\n\n    for (let edge of graph\n      .get(vertex)\n      .slice()\n      .reverse())\n      stack.push(edge);\n  }\n\n  return visited;\n}\n\nconst graph = new Graph();\ngraph.addVertex("a");\ngraph.addVertex("b");\ngraph.addVertex("c");\ngraph.addVertex("d");\ngraph.addVertex("e");\ngraph.addVertex("f");\ngraph.addVertex("g");\ngraph.addEdge("a", "b");\ngraph.addEdge("a", "c");\ngraph.addEdge("a", "e");\ngraph.addEdge("b", "d");\ngraph.addEdge("b", "f");\ngraph.addEdge("c", "g");\ngraph.addEdge("e", "f");\ngraph.addEdge("f", "e");\n\nreturn depthFirstSearch({ graph, start: "a", target: "d" });\n```\n'],['\n\\`\\`\\`js\ndepthFirstSearch = ({ graph, start, target }) => {\n  const visited = new Set();\n  const stack = [start];\n\n  while (stack.length !== 0) {\n    const vertex = stack.pop();\n    if (visited.has(vertex)) continue;\n    visited.add(vertex);\n\n    for (let edge of graph\n      .get(vertex)\n      .slice()\n      .reverse())\n      stack.push(edge);\n  }\n\n  return visited;\n}\n\nconst graph = new Graph();\ngraph.addVertex("a");\ngraph.addVertex("b");\ngraph.addVertex("c");\ngraph.addVertex("d");\ngraph.addVertex("e");\ngraph.addVertex("f");\ngraph.addVertex("g");\ngraph.addEdge("a", "b");\ngraph.addEdge("a", "c");\ngraph.addEdge("a", "e");\ngraph.addEdge("b", "d");\ngraph.addEdge("b", "f");\ngraph.addEdge("c", "g");\ngraph.addEdge("e", "f");\ngraph.addEdge("f", "e");\n\nreturn depthFirstSearch({ graph, start: "a", target: "d" });\n\\`\\`\\`\n']);return wn=function(){return e},e}function bn(e,t){var n;if("undefined"===typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return xn(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return xn(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var i=0,r=function(){};return{s:r,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return o=e.done,e},e:function(e){s=!0,a=e},f:function(){try{o||null==n.return||n.return()}finally{if(s)throw a}}}}function xn(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function yn(){var e=Object(Ut.a)(["O(|V|)"]);return yn=function(){return e},e}function kn(){var e=Object(Ut.a)(["O(|V|+|E|)"]);return kn=function(){return e},e}function jn(){var e=Object(Ut.a)(["## 3.2 Depth First Search\n\n|||\n|-|-|\n|Time Complexity|","|\n|Space Complexity|","|\n\nTo traverse Graphs or trees, multiple algorithms can be used. In this example, I'm going to use **Depth First Search (DFS)**, however depending on the data you are traversing, **Breadth First Search (BFS)**, which replaces the stack with a queue, might be a better fit.\n\nTODO: more information, alternatives\n"]);return jn=function(){return e},e}function On(){var e=Object(Ut.a)(["\n## 3.1 Trees\n\nTrees are a sub-class of Graphs. Here, vertices are commonly called nodes and they contain one *root* node, the start of the tree. Each other node has to be connected to at least one node, it's parent.\nTrees don't contain any cycles, which makes them *acyclic*.\n\n","\n\nTrees have use-cases in all kind of areas of computer science and are the basis of many data structures. \nSome noteable uses include:\n* *Abstract Syntax Trees* for representing the structure of programming source code. It is used by interpreters or compilers to generate the actual machine code. \n\n\n### Binary Trees\nTODO\n"]);return On=function(){return e},e}function _n(){var e=Object(Ut.a)(["\n```js\nclass Graph {\n  constructor() {\n    this.adjacencyList = new Map();\n  }\n  addVertex(vertex) {\n    return this.adjacencyList.set(vertex, []);\n  }\n  addEdge(vertex, destination) {\n    return this.adjacencyList.get(vertex).push(destination);\n  }\n  get(vertex) {\n    return this.adjacencyList.get(vertex);\n  }\n}\n```\n"],["\n\\`\\`\\`js\nclass Graph {\n  constructor() {\n    this.adjacencyList = new Map();\n  }\n  addVertex(vertex) {\n    return this.adjacencyList.set(vertex, []);\n  }\n  addEdge(vertex, destination) {\n    return this.adjacencyList.get(vertex).push(destination);\n  }\n  get(vertex) {\n    return this.adjacencyList.get(vertex);\n  }\n}\n\\`\\`\\`\n"]);return _n=function(){return e},e}function zn(){var e=Object(Ut.a)(["O(|E|)"]);return zn=function(){return e},e}function Sn(){var e=Object(Ut.a)(["O(|V|cdot|E|)"],["O(|V|\\cdot|E|)"]);return Sn=function(){return e},e}function En(){var e=Object(Ut.a)(["O(|V|cdot|E|)"],["O(|V|\\cdot|E|)"]);return En=function(){return e},e}function Ln(){var e=Object(Ut.a)(["O(|V|cdot|E|)"],["O(|V|\\cdot|E|)"]);return Ln=function(){return e},e}function Tn(){var e=Object(Ut.a)(["O(|V|cdot|E|)"],["O(|V|\\cdot|E|)"]);return Tn=function(){return e},e}function Cn(){var e=Object(Ut.a)(["O(|V|cdot|E|)"],["O(|V|\\cdot|E|)"]);return Cn=function(){return e},e}function qn(){var e=Object(Ut.a)(["esmall{5}"],["e\\small{5}"]);return qn=function(){return e},e}function An(){var e=Object(Ut.a)(["esmall{4}"],["e\\small{4}"]);return An=function(){return e},e}function Mn(){var e=Object(Ut.a)(["esmall{3}"],["e\\small{3}"]);return Mn=function(){return e},e}function Vn(){var e=Object(Ut.a)(["esmall{2}"],["e\\small{2}"]);return Vn=function(){return e},e}function Nn(){var e=Object(Ut.a)(["esmall{1}"],["e\\small{1}"]);return Nn=function(){return e},e}function Hn(){var e=Object(Ut.a)(["O(1)"]);return Hn=function(){return e},e}function Fn(){var e=Object(Ut.a)(["O(1)"]);return Fn=function(){return e},e}function Rn(){var e=Object(Ut.a)(["O(|E|^2)"]);return Rn=function(){return e},e}function Dn(){var e=Object(Ut.a)(["O(1)"]);return Dn=function(){return e},e}function Gn(){var e=Object(Ut.a)(["O(|V|^2)"]);return Gn=function(){return e},e}function In(){var e=Object(Ut.a)(["O(|V|^2)"]);return In=function(){return e},e}function Pn(){var e=Object(Ut.a)(["O(|V|)"]);return Pn=function(){return e},e}function Bn(){var e=Object(Ut.a)(["O(|V|)"]);return Bn=function(){return e},e}function Un(){var e=Object(Ut.a)(["O(|E|)"]);return Un=function(){return e},e}function Zn(){var e=Object(Ut.a)(["O(1)"]);return Zn=function(){return e},e}function $n(){var e=Object(Ut.a)(["O(1)"]);return $n=function(){return e},e}function Wn(){var e=Object(Ut.a)(["O(|V|+|E|)"]);return Wn=function(){return e},e}function Xn(){var e=Object(Ut.a)(["<style>.matrix table {width: auto; margin-left: 2rem;} td {padding: 0.3rem;}</style>\n# 3 Graphs\n\nA graph is an *abstract data type* which stores a set of nodes (also called vertices) and edges.\nGraphs are used to implement concepts from the mathematical field of graph theory and can be used to represent relationships and networks in complex datasets.\n\nUsually, a graph data structure provides the following operations:\n* Testing for Adjacentcy\n* Finding all neighbours of a specific node\n* Adding, removing and finding nodex/verticies\n* Adding, removing and finding edges\n\nGraphs can be directed, where edges have a direction, or undirected, where edges go both ways.\nBelow is an example of what a directed graph may look like. Here, edges are also known as arrows since they also contain the direction.\n\n","\n\nAn undirected graph in contrast doesn't have these arrows. This might be used to for example represent a network of users on a social media platform, where friends are connected using edges.\n\nThere can also be a vaule connected to each edge, the so called *edge value*. This can represent attributes like distances, costs or capacities. A real-world example for this would be airports, where this *edge value* would be the time it takes to fly to a different airport.\n\nThere are multiple different ways to create a data structure to represent graphs. In the following I want to show how the most popular ones could be used to represent the example graph I created above: \n\n- #### Adjacency lists\n  \n  In an adjacency list, each node stores a list of its neighbour nodes.\n  A significant advantage over other representations is that extemly space efficient for storing sparse graphs (a graph that has close to as many edges as nodes). Since they only store connected edges for each node, they don't waste any space on unconnected ones.\n  Compared to other approaches, this has a higher cost for removing vertices and edges, which makes it unfit for some use-cases.  \n\n<div class=matrix>\n\n|||\n|-|-|\n|Space Complexity: | "," |\n|Adding Nodes| "," |\n|Adding Edges| "," |\n|Removing Nodes| "," |\n|Removing Edges| "," |\n|Testing Adjacency| "," |\n\n\n<div class=matrix>\n\n| Vertex | Edges |\n|-----|---|\n|**A**| BC |\n|**B**| DE |\n|**C**| E |\n\n- #### Adjacency matrices<br><br>\n\n  An adjacency matrix is a square matrix (the same amount of collums as rows) that is used to represent graphs.\n  Here, each collum and row is a node. Edges are marked by the cells in this table.\n\n  Some advantages of adjacency matrices are that one can store *edge values* directly in this table and very \n  efficient adjacency testing.\n\n  However, there are also disadvantages. Adding and removing nodes and edges can be slow, since the whole matrix\n  needs to be resized.\n\n<div class=matrix>\n\n|     | A | B | C | D | E |\n|-----|---|---|---|---|---|\n|**A**| 0 | 1 | 1 | 0 | 0 |\n|**B**| 0 | 0 | 0 | 1 | 1 |\n|**C**| 0 | 0 | 0 | 0 | 1 |\n|**D**| 0 | 0 | 0 | 0 | 0 |\n|**E**| 0 | 0 | 0 | 0 | 0 |\n\n|||\n|-|-|\n|Space Complexity: | "," |\n|Adding Nodes| "," |\n|Adding Edges| "," |\n|Removing Nodes| "," |\n|Removing Edges| "," |\n|Testing Adjacency| "," |\n\n- #### Incidence matrices<br>\n\n  Incidence matrices represent graphs using nodes in rows and edges in columns.\n  For undirected graphs, where a cell is `1` if an edge and a node are connected.\n\n  Directed graphs use a slightly different notation. Here, if an edge leaves the node, we set the cell to `-1` and if it enters a node, we set it to `1` (sometimes, the opposite might be used however).\n  \n  Generally, these one of the least used representations of graphs du to the high cost of all operations. However if directionality and *edge values* matter, these can still be a good fit for some applications.\n\n<div class=matrix>\n\n|     | "," |  "," |  "," |  "," |  "," |\n|-----|---|---|---|---|---|\n|**A**| -1 | -1 | 0 | 0 | 0 |\n|**B**| 1 | 0 | -1 | -1 | 0 |\n|**C**| 0 | 1 | 0 | 0 | -1 |\n|**D**| 0 | 0 | 1 | 0 | 0 |\n|**E**| 0 | 0 | 0 | 1 | 1 |\n\n|||\n|-|-|\n|Space Complexity: | "," |\n|Adding Nodes| "," |\n|Adding Edges| "," |\n|Removing Nodes| "," |\n|Removing Edges| "," |\n|Testing Adjacency| "," |\n\nBelow, I've implemented an adjacency list based graph data structure using a [hash map](#hash) to store nodes and their edges. This will be used later on to implement [Depth First Search](#dfs), a graph traversal algorithm.\n"],["<style>.matrix table {width: auto; margin-left: 2rem;} td {padding: 0.3rem;}</style>\n# 3 Graphs\n\nA graph is an *abstract data type* which stores a set of nodes (also called vertices) and edges.\nGraphs are used to implement concepts from the mathematical field of graph theory and can be used to represent relationships and networks in complex datasets.\n\nUsually, a graph data structure provides the following operations:\n* Testing for Adjacentcy\n* Finding all neighbours of a specific node\n* Adding, removing and finding nodex/verticies\n* Adding, removing and finding edges\n\nGraphs can be directed, where edges have a direction, or undirected, where edges go both ways.\nBelow is an example of what a directed graph may look like. Here, edges are also known as arrows since they also contain the direction.\n\n","\n\nAn undirected graph in contrast doesn't have these arrows. This might be used to for example represent a network of users on a social media platform, where friends are connected using edges.\n\nThere can also be a vaule connected to each edge, the so called *edge value*. This can represent attributes like distances, costs or capacities. A real-world example for this would be airports, where this *edge value* would be the time it takes to fly to a different airport.\n\nThere are multiple different ways to create a data structure to represent graphs. In the following I want to show how the most popular ones could be used to represent the example graph I created above: \n\n- #### Adjacency lists\n  \n  In an adjacency list, each node stores a list of its neighbour nodes.\n  A significant advantage over other representations is that extemly space efficient for storing sparse graphs (a graph that has close to as many edges as nodes). Since they only store connected edges for each node, they don't waste any space on unconnected ones.\n  Compared to other approaches, this has a higher cost for removing vertices and edges, which makes it unfit for some use-cases.  \n\n<div class=matrix>\n\n|||\n|-|-|\n|Space Complexity: | "," |\n|Adding Nodes| "," |\n|Adding Edges| "," |\n|Removing Nodes| "," |\n|Removing Edges| "," |\n|Testing Adjacency| "," |\n\n\n<div class=matrix>\n\n| Vertex | Edges |\n|-----|---|\n|**A**| BC |\n|**B**| DE |\n|**C**| E |\n\n- #### Adjacency matrices<br><br>\n\n  An adjacency matrix is a square matrix (the same amount of collums as rows) that is used to represent graphs.\n  Here, each collum and row is a node. Edges are marked by the cells in this table.\n\n  Some advantages of adjacency matrices are that one can store *edge values* directly in this table and very \n  efficient adjacency testing.\n\n  However, there are also disadvantages. Adding and removing nodes and edges can be slow, since the whole matrix\n  needs to be resized.\n\n<div class=matrix>\n\n|     | A | B | C | D | E |\n|-----|---|---|---|---|---|\n|**A**| 0 | 1 | 1 | 0 | 0 |\n|**B**| 0 | 0 | 0 | 1 | 1 |\n|**C**| 0 | 0 | 0 | 0 | 1 |\n|**D**| 0 | 0 | 0 | 0 | 0 |\n|**E**| 0 | 0 | 0 | 0 | 0 |\n\n|||\n|-|-|\n|Space Complexity: | "," |\n|Adding Nodes| "," |\n|Adding Edges| "," |\n|Removing Nodes| "," |\n|Removing Edges| "," |\n|Testing Adjacency| "," |\n\n- #### Incidence matrices<br>\n\n  Incidence matrices represent graphs using nodes in rows and edges in columns.\n  For undirected graphs, where a cell is \\`1\\` if an edge and a node are connected.\n\n  Directed graphs use a slightly different notation. Here, if an edge leaves the node, we set the cell to \\`-1\\` and if it enters a node, we set it to \\`1\\` (sometimes, the opposite might be used however).\n  \n  Generally, these one of the least used representations of graphs du to the high cost of all operations. However if directionality and *edge values* matter, these can still be a good fit for some applications.\n\n<div class=matrix>\n\n|     | "," |  "," |  "," |  "," |  "," |\n|-----|---|---|---|---|---|\n|**A**| -1 | -1 | 0 | 0 | 0 |\n|**B**| 1 | 0 | -1 | -1 | 0 |\n|**C**| 0 | 1 | 0 | 0 | -1 |\n|**D**| 0 | 0 | 1 | 0 | 0 |\n|**E**| 0 | 0 | 0 | 1 | 1 |\n\n|||\n|-|-|\n|Space Complexity: | "," |\n|Adding Nodes| "," |\n|Adding Edges| "," |\n|Removing Nodes| "," |\n|Removing Edges| "," |\n|Testing Adjacency| "," |\n\nBelow, I've implemented an adjacency list based graph data structure using a [hash map](#hash) to store nodes and their edges. This will be used later on to implement [Depth First Search](#dfs), a graph traversal algorithm.\n"]);return Xn=function(){return e},e}function Yn(){var e=Object(Ut.a)(["O(n)"]);return Yn=function(){return e},e}function Kn(){var e=Object(Ut.a)(["O(n)"]);return Kn=function(){return e},e}function Jn(){var e=Object(Ut.a)(["O(1)"]);return Jn=function(){return e},e}function Qn(){var e=Object(Ut.a)(["## 2.5 Hash Tables\n\n|||\n|--|--|\n|Average Time Complexity (all operations)| ","|\n|Worst Time Complexity (all operations)| ","|\n|Space Complexity| ","|\n\nA Hash Table is a *data structure* which maps keys to values.\nTo accomplish this, we have an array of buckets, each of which is indexed by a so-called *hash code*. \nWhen adding a new key-value pair, we pass the key to a hash function. This hash function will ideally give us a unique *hash code*. When we pass `\"foo\"` to our hash function, we get `2`, which will be the index of our value (see the example below).\n\nTODO: What's Worst Time und Average Time complexity\n\nBecause most hash table designs don't use a perfectly collision-free hash function, most implementations work around this in some way (for example by storing multiple values at the same *hash code*).\n\nTypically, the usage of hash functions enables us to have a constant average time complexity. This is independent of the number of elements because we only need to run the hash function on the key (which should take a constant amount of time) to get the address of our value. \n\n","\n\n"],["## 2.5 Hash Tables\n\n|||\n|--|--|\n|Average Time Complexity (all operations)| ","|\n|Worst Time Complexity (all operations)| ","|\n|Space Complexity| ","|\n\nA Hash Table is a *data structure* which maps keys to values.\nTo accomplish this, we have an array of buckets, each of which is indexed by a so-called *hash code*. \nWhen adding a new key-value pair, we pass the key to a hash function. This hash function will ideally give us a unique *hash code*. When we pass \\`\"foo\"\\` to our hash function, we get \\`2\\`, which will be the index of our value (see the example below).\n\nTODO: What's Worst Time und Average Time complexity\n\nBecause most hash table designs don't use a perfectly collision-free hash function, most implementations work around this in some way (for example by storing multiple values at the same *hash code*).\n\nTypically, the usage of hash functions enables us to have a constant average time complexity. This is independent of the number of elements because we only need to run the hash function on the key (which should take a constant amount of time) to get the address of our value. \n\n","\n\n"]);return Qn=function(){return e},e}function ei(){var e=Object(Ut.a)(["O(n)"]);return ei=function(){return e},e}function ti(){var e=Object(Ut.a)(["O(n)"]);return ti=function(){return e},e}function ni(){var e=Object(Ut.a)(["O(1)"]);return ni=function(){return e},e}function ii(){var e=Object(Ut.a)(["O(n)"]);return ii=function(){return e},e}function ri(){var e=Object(Ut.a)(["O(1)"]);return ri=function(){return e},e}function ai(){var e=Object(Ut.a)(["## 2.4 Queues\n\n||\n|--|--|\n|Appending Values| ","|\n|Searching Values| ","|\n|Deleting Values| ","|\n|Accessing Values| ","|\n|Space Complexity|","|\n\nQueues are an *abstract data type* that is very similar so stacks, the main difference being the order in which items are removed from.\n\nHere, similar to how for example a queue in a supermarket works, the first item that has been added is also the first item that will be removed.\nThis makes queues a FIFO (first in first out) data structure. \n\n","\n\n"]);return ai=function(){return e},e}function oi(){var e=Object(Ut.a)(["O(n)"]);return oi=function(){return e},e}function si(){var e=Object(Ut.a)(["O(n)"]);return si=function(){return e},e}function li(){var e=Object(Ut.a)(["O(1)"]);return li=function(){return e},e}function ci(){var e=Object(Ut.a)(["O(n)"]);return ci=function(){return e},e}function fi(){var e=Object(Ut.a)(["O(1)"]);return fi=function(){return e},e}function di(){var e=Object(Ut.a)(["## 2.3 Stacks\n\n|||\n|--|--|\n|Appending Values| ","|\n|Searching Values| ","|\n|Deleting Values| ","|\n|Accessing Values| ","|\n|Space Complexity|","|\n\nA stack is an *abstract data type*, so an abstraction layer on top of a data structure such arrays, that contains a collection of elements. Stacks are characterised by two main operations, *push* and *pop*. *Push* adds a new element at the end and *pop* in turn removes the last element. This can be thought of like a stack of papers, where you can only add or remove elements on the top.\n\nStacks are also known as *LIFO* (last in first out) due to the order in which elements come off of it.\nThey are generally implemented using an array or linked list.\n\n","\n\n"]);return di=function(){return e},e}function ui(){var e=Object(Ut.a)(["\n  O(n)"]);return ui=function(){return e},e}function hi(){var e=Object(Ut.a)(["\n  O(1)"]);return hi=function(){return e},e}function pi(){var e=Object(Ut.a)(["\n  O(n)"]);return pi=function(){return e},e}function mi(){var e=Object(Ut.a)(["O(n)"]);return mi=function(){return e},e}function gi(){var e=Object(Ut.a)(["O(n)"]);return gi=function(){return e},e}function vi(){var e=Object(Ut.a)(["O(1)"]);return vi=function(){return e},e}function wi(){var e=Object(Ut.a)(["O(n)"]);return wi=function(){return e},e}function bi(){var e=Object(Ut.a)(["O(1)"]);return bi=function(){return e},e}function xi(){var e=Object(Ut.a)(["## 2.2 Linked lists\n\n|||\n|--|--|\n|Appending Values| ","|\n|Searching Values| ","|\n|Deleting Values| ","|\n|Accessing Values| ","|\n|Space Complexity|","|\n\nA linked list is a Data Structure consisting of a collection of elements.\nUnlike arrays, they are not stored in sequence in memory. Instead, each element or node points to the next one:\n\n","\n<br>\nThis makes insertion and removal of nodes more efficient than in arrays since we don't need to move all subsequent elements to a different memory location ("," or "," when the location of the node is known). The drawback of this approach is that access time is linear (",").\n\nLinked lists come in three different flavours:\n\n* #### Singly Linked Lists\n\n  Here, each note only contains one pointer to the next node.\n  The last node is linked to a terminator, represented by the X in the diagram above, which represents the link of the list\n\n* #### Doubly Linked Lists\n  Here, each note has two pointers, one to the previous node and one to the next node. This allows for more \n  efficient insertion or removal of nodes:\n\n  ","<br>\n\n* #### Circular Linked Lists\n  Circular linked lists are a variation of a linked list in which the last node points to the first node or any other node before it, thereby forming a loop.\n\n  ","\n\n\n"]);return xi=function(){return e},e}function yi(){var e=Object(Ut.a)(["\begin{bmatrix}\n0 & 1\\\n2 & 3\nend{bmatrix}"],["\\begin{bmatrix}\n0 & 1\\\\\n2 & 3\n\\end{bmatrix}"]);return yi=function(){return e},e}function ki(){var e=Object(Ut.a)(["(0, 1, 2, 3)"]);return ki=function(){return e},e}function ji(){var e=Object(Ut.a)(["O(n)"]);return ji=function(){return e},e}function Oi(){var e=Object(Ut.a)(["O(1)"]);return Oi=function(){return e},e}function _i(){var e=Object(Ut.a)(["O(n)"]);return _i=function(){return e},e}function zi(){var e=Object(Ut.a)(["O(n)"]);return zi=function(){return e},e}function Si(){var e=Object(Ut.a)(["O(n)"]);return Si=function(){return e},e}function Ei(){var e=Object(Ut.a)(["## 2.1 Arrays\n\n|||\n|--|--|\n|Appending Values| ","|\n|Searching Values| ","|\n|Deleting Values| ","|\n|Accessing Values| ","|\n|Space Complexity|",'|\n\nArrays are a Data Structure that contains a group of elements where each element is identified by at least one *index* (typically starting at 0). They can be sorted and are usually stored continuously in memory.\n\n```js\n     // [ index 0, index 1 ]\narray = [ "hello", "world" ];\narray[0] === "hello"\n```\n\n#### One-dimensional arrays\nThe simplest type of arrays are linear/one-dimensional arrays, to which the closest mathematical equivalent would be tupels:\n\n```js\n// A 1-dimensional array\n[ 0, 1, 2, 3 ];\n\n// The equivelant tupel\n```\n\n',"\n<br>\n\n#### Multi-dimensional arrays\nBy nesting arrays (having arrays filled with arrays), you can also represent more dimensons, for example, a two-dimensions array would be the equivalent of a matrix:\n\n```js\n// A 2-dimensional array\n[ [0, 1], [2, 3] ];\n\n// The equivelant matrix\n```\n\n","\n\n<br>\n#### Static and dynamic arrays\nArrays can be static, meaning their size has to be defined when they are created and elements can't be added or removed later. A lot of languages also support dynamic arrays, which don't have a fixed capacity.\n\n#### Other use cases\nOutside of these use cases, arrays are often used to implement other data structures such as [queues](#queues), [stacks](#stacks), [hash tables](#hash) and strings\n\n#### Arrays in programming languages\nArrays work differently depending on the programming language they are used in.\nThe array data type in programming languages can be implemented using array structures, [linked lists](#ll), [hash tables](#hash) or other data structures.\n\n#### Lists\nLists are an *abstract data type*, essentially an abstraction layer on top of a data structures such as arrays, that contain a countable collection of elements. In most programming languages, lists are implemented using dynamic arrays or [linked lists](#ll). How they work exactly depends strongly on the specific implementation of the programming language."],["## 2.1 Arrays\n\n|||\n|--|--|\n|Appending Values| ","|\n|Searching Values| ","|\n|Deleting Values| ","|\n|Accessing Values| ","|\n|Space Complexity|",'|\n\nArrays are a Data Structure that contains a group of elements where each element is identified by at least one *index* (typically starting at 0). They can be sorted and are usually stored continuously in memory.\n\n\\`\\`\\`js\n     // [ index 0, index 1 ]\narray = [ "hello", "world" ];\narray[0] === "hello"\n\\`\\`\\`\n\n#### One-dimensional arrays\nThe simplest type of arrays are linear/one-dimensional arrays, to which the closest mathematical equivalent would be tupels:\n\n\\`\\`\\`js\n// A 1-dimensional array\n[ 0, 1, 2, 3 ];\n\n// The equivelant tupel\n\\`\\`\\`\n\n',"\n<br>\n\n#### Multi-dimensional arrays\nBy nesting arrays (having arrays filled with arrays), you can also represent more dimensons, for example, a two-dimensions array would be the equivalent of a matrix:\n\n\\`\\`\\`js\n// A 2-dimensional array\n[ [0, 1], [2, 3] ];\n\n// The equivelant matrix\n\\`\\`\\`\n\n","\n\n<br>\n#### Static and dynamic arrays\nArrays can be static, meaning their size has to be defined when they are created and elements can't be added or removed later. A lot of languages also support dynamic arrays, which don't have a fixed capacity.\n\n#### Other use cases\nOutside of these use cases, arrays are often used to implement other data structures such as [queues](#queues), [stacks](#stacks), [hash tables](#hash) and strings\n\n#### Arrays in programming languages\nArrays work differently depending on the programming language they are used in.\nThe array data type in programming languages can be implemented using array structures, [linked lists](#ll), [hash tables](#hash) or other data structures.\n\n#### Lists\nLists are an *abstract data type*, essentially an abstraction layer on top of a data structures such as arrays, that contain a countable collection of elements. In most programming languages, lists are implemented using dynamic arrays or [linked lists](#ll). How they work exactly depends strongly on the specific implementation of the programming language."]);return Ei=function(){return e},e}function Li(){var e=Object(Ut.a)(["\n<br>\n# 2. Basic Datastructures"]);return Li=function(){return e},e}function Ti(){var e=Object(Ut.a)(["gcd(",", ",") === **","**"]);return Ti=function(){return e},e}function Ci(){var e=Object(Ut.a)(["<form>\n<h4>Try it out:</h4>  \n<div><i>a</i> <input min=1 name=a value=348 type=number></div>\n  <div><i>b</i> <input min=1 name=b value=290 type=number></div>\n</form>"]);return Ci=function(){return e},e}function qi(){var e=Object(Ut.a)(["```js\ngcd = (a, b) => {\n  while (b != 0)\n    [a, b] = [b, a % b]\n  return a\n}\n```"],["\\`\\`\\`js\ngcd = (a, b) => {\n  while (b != 0)\n    [a, b] = [b, a % b]\n  return a\n}\n\\`\\`\\`"]);return qi=function(){return e},e}function Ai(){var e=Object(Ut.a)(["adiv b"],["a\\div b"]);return Ai=function(){return e},e}function Mi(){var e=Object(Ut.a)(["O(h^2)"]);return Mi=function(){return e},e}function Vi(){var e=Object(Ut.a)(["log{b}"],["\\log{b}"]);return Vi=function(){return e},e}function Ni(){var e=Object(Ut.a)(["F_n = \frac{phi^n}{sqrt{5}}"],["F_n = \\frac{\\phi^n}{\\sqrt{5}}"]);return Ni=function(){return e},e}function Hi(){var e=Object(Ut.a)(["b = F_{n+1}"]);return Hi=function(){return e},e}function Fi(){var e=Object(Ut.a)(["a = F_{n+2}"]);return Fi=function(){return e},e}function Ri(){var e=Object(Ut.a)(["b"]);return Ri=function(){return e},e}function Di(){var e=Object(Ut.a)(["a"]);return Di=function(){return e},e}function Gi(){var e=Object(Ut.a)(["a"]);return Gi=function(){return e},e}function Ii(){var e=Object(Ut.a)(["h"]);return Ii=function(){return e},e}function Pi(){var e=Object(Ut.a)(["O(h^2)"]);return Pi=function(){return e},e}function Bi(){var e=Object(Ut.a)(["log{a}"],["\\log{a}"]);return Bi=function(){return e},e}function Ui(){var e=Object(Ut.a)(["log^2{a}"],["\\log^2{a}"]);return Ui=function(){return e},e}function Zi(){var e=Object(Ut.a)(["a"]);return Zi=function(){return e},e}function $i(){var e=Object(Ut.a)(["T(a) = T(\frac{a}{2}) + 2 cdot log{a})\\\nT(a) = O(log^2{a})"],["T(a) = T(\\frac{a}{2}) + 2 \\cdot \\log{a})\\\\\nT(a) = O(\\log^2{a})"]);return $i=function(){return e},e}function Wi(){var e=Object(Ut.a)(["O(log^2{a})"],["O(\\log^2{a})"]);return Wi=function(){return e},e}function Xi(){var e=Object(Ut.a)(["mod"]);return Xi=function(){return e},e}function Yi(){var e=Object(Ut.a)(["T(a) = T(\frac{a}{2}) + 2"],["T(a) = T(\\frac{a}{2}) + 2"]);return Yi=function(){return e},e}function Ki(){var e=Object(Ut.a)(["a"]);return Ki=function(){return e},e}function Ji(){var e=Object(Ut.a)(["h"]);return Ji=function(){return e},e}function Qi(){var e=Object(Ut.a)(["a"]);return Qi=function(){return e},e}function er(){var e=Object(Ut.a)(["h"]);return er=function(){return e},e}function tr(){var e=Object(Ut.a)(["a"]);return tr=function(){return e},e}function nr(){var e=Object(Ut.a)(["b"]);return nr=function(){return e},e}function ir(){var e=Object(Ut.a)(["O(1)"]);return ir=function(){return e},e}function rr(){var e=Object(Ut.a)(["h"]);return rr=function(){return e},e}function ar(){var e=Object(Ut.a)(["O(h^2)"]);return ar=function(){return e},e}function or(){var e=Object(Ut.a)(["## 1.1 Euclid's algorithm\n<style>table {width: auto}</style>\n\n|||\n| ---------------- | ----------------- |\n| Worst-Case Time Complexity  | "," Where "," is the number of base-10 digits of the smaller number |\n| Space Complexity | "," |\n\nI want to start off with a seemingly simple algorithm, Euclid's algorithm for calculating the greatest common denominator (gcd) of two real numbers.\n\nEuklid calculated the gcd by continuously subtracting the smaller value "," from the bigger value ",". When this wasn't possible anymore (since the resulting value "," was smaller than ","), he repeated this process with "," as the new smallest value.\n\n### Time Complexity\n\nEuclid's algorithm's time complexity has been studied since the early 19th century.",". Based on some of the findings, I have analyzed the algorithm myself:\n\nWhen looking at our implementation below, we can induce that, after two itereations of our loop, "," will be no more than half of its original value: "," \n\nSince the "," operator (`%`) doesn't take constant time, but instead depends on the number of digits of the number, this results in a time complexity of ",":\n","\n\nSince here, "," is the value of our input and not the size, Euclid's algorithm runs in "," time when given "," bits/digits. This makes it quadratically related to the input size, so ",", where "," is the number of digits of the smaller number, in this case ","\n\nNow, let's look if theres actually a case where our algorithm has this complexity, or if we can improve it further: \nBy looking at the possible values for "," and ",", we can induce that the worst-case scenario are two consecutive fibonacci numbers "," and ","\n\nSince ",", the algorithm can take\n"," steps.\n\nTherefore, because the modulo operator doesn't take a constant amount of time, we can deduce that our result of "," is correct.\n\n### Implementation\n\nIn the example below I've implemented a more modern version of this, utilising the *mod* operator `%`. This calculates the remainder of "," which is the equivalent to continuing to subtraction `b` (dividing is essentially repeated substraction).\n"],["## 1.1 Euclid's algorithm\n<style>table {width: auto}</style>\n\n|||\n| ---------------- | ----------------- |\n| Worst-Case Time Complexity  | "," Where "," is the number of base-10 digits of the smaller number |\n| Space Complexity | "," |\n\nI want to start off with a seemingly simple algorithm, Euclid's algorithm for calculating the greatest common denominator (gcd) of two real numbers.\n\nEuklid calculated the gcd by continuously subtracting the smaller value "," from the bigger value ",". When this wasn't possible anymore (since the resulting value "," was smaller than ","), he repeated this process with "," as the new smallest value.\n\n### Time Complexity\n\nEuclid's algorithm's time complexity has been studied since the early 19th century.",". Based on some of the findings, I have analyzed the algorithm myself:\n\nWhen looking at our implementation below, we can induce that, after two itereations of our loop, "," will be no more than half of its original value: "," \n\nSince the "," operator (\\`%\\`) doesn't take constant time, but instead depends on the number of digits of the number, this results in a time complexity of ",":\n","\n\nSince here, "," is the value of our input and not the size, Euclid's algorithm runs in "," time when given "," bits/digits. This makes it quadratically related to the input size, so ",", where "," is the number of digits of the smaller number, in this case ","\n\nNow, let's look if theres actually a case where our algorithm has this complexity, or if we can improve it further: \nBy looking at the possible values for "," and ",", we can induce that the worst-case scenario are two consecutive fibonacci numbers "," and ","\n\nSince ",", the algorithm can take\n"," steps.\n\nTherefore, because the modulo operator doesn't take a constant amount of time, we can deduce that our result of "," is correct.\n\n### Implementation\n\nIn the example below I've implemented a more modern version of this, utilising the *mod* operator \\`%\\`. This calculates the remainder of "," which is the equivalent to continuing to subtraction \\`b\\` (dividing is essentially repeated substraction).\n"]);return or=function(){return e},e}function sr(){var e=Object(Ut.a)(["<br>\n\n# 1. Abstract\n### TODO\nWelcome to my portfolio for *SE_02*, Algorithms and Data Structures. \n"]);return sr=function(){return e},e}function lr(){var e=Object(Ut.a)(["# Algorithms and Data Structures \n## *by* Henry Gressmann\n<br>\n\n## Table of Contents\n\n1. [Abstract](#abstract)<br>\n  1.1 [Euclid's algorithm](#euclid)\n\n2. [Basic Data Structures](#basic)<br>\n  2.1 [Arrays](#array)<br>\n  2.2 [Linked Lists](#ll)<br>\n  2.3 [Stacks](#stacks)<br>\n  2.4 [Queues](#queues)<br>\n  2.5 [Hash Tables](#hash)\n\n3. [Graphs](#graphs)<br>\n  3.1 [Trees](#trees)<br>\n  3.2 [Depth-First Search](#dfs)\n\n4. [Advanced Algorithms and Data Structures](#advanced)<br>\n  4.1 [Bloom Filters](#bloom)<br>\n  4.2 [Radix Sort](#radix)"]);return lr=function(){return e},e}function cr(e,t){var n=e.module();return n.variable(t("intro")).define("intro",["md"],(function(e){return e(lr())})),n.variable(t("abstract")).define("abstract",["md"],(function(e){return e(sr())})),n.variable(t("euclid")).define("euclid",["md","tex","reference"],(function(e,t,n){return e(or(),t(ar()),t(rr()),t(ir()),t(nr()),t(tr()),t(er()),t(Qi()),t(Ji()),n("https://www.sciencedirect.com/science/article/pii/S0315086084710317?via%3Dihub"),t(Ki()),t(Yi()),t(Xi()),t(Wi()),t($i()),t(Zi()),t(Ui()),t(Bi()),t(Pi()),t(Ii()),t(Gi()),t(Di()),t(Ri()),t(Fi()),t(Hi()),t(Ni()),t(Vi()),t(Mi()),t(Ai()))})),n.variable(t("gcd")).define("gcd",(function(){return function(e,t){for(;0!=t;){var n=[t,e%t];e=n[0],t=n[1]}return e}})),n.variable(t("gcdmd")).define("gcdmd",["md"],(function(e){return e(qi())})),n.variable(t("viewof args")).define("viewof args",["html"],(function(e){var t=e(Ci());return t.oninput=function(){return t.value=[t.a.valueAsNumber,t.b.valueAsNumber]},t.oninput(),t})),n.variable(t("args")).define("args",["Generators","viewof args"],(function(e,t){return e.input(t)})),n.variable(t("gcdview")).define("gcdview",["md","args","gcd"],(function(e,t,n){return e(Ti(),t[0]||1,t[1]||1,n(t[0]||1,t[1]||1))})),n.variable(t("basic")).define("basic",["md"],(function(e){return e(Li())})),n.variable(t("array")).define("array",["md","tex"],(function(e,t){return e(Ei(),t(Si()),t(zi()),t(_i()),t(Oi()),t(ji()),t(ki()),t(yi()))})),n.variable(t("ll")).define("ll",["md","tex","linkedlistsvg","doublell","circlell"],(function(e,t,n,i,r){return e(xi(),t(bi()),t(wi()),t(vi()),t(gi()),t(mi()),n,t(pi()),t(hi()),t(ui()),i,r)})),n.variable(t("stacks")).define("stacks",["md","tex","stacksvg"],(function(e,t,n){return e(di(),t(fi()),t(ci()),t(li()),t(si()),t(oi()),n)})),n.variable(t("queues")).define("queues",["md","tex","queuesvg"],(function(e,t,n){return e(ai(),t(ri()),t(ii()),t(ni()),t(ti()),t(ei()),n)})),n.variable(t("hash")).define("hash",["md","tex","hashtablesvg"],(function(e,t,n){return e(Qn(),t(Jn()),t(Kn()),t(Yn()),n)})),n.variable(t("graphs")).define("graphs",["md","sampleGraph","tex"],(function(e,t,n){return e(Xn(),t,n(Wn()),n($n()),n(Zn()),n(Un()),n(Bn()),n(Pn()),n(In()),n(Gn()),n(Dn()),n(Rn()),n(Fn()),n(Hn()),n(Nn()),n(Vn()),n(Mn()),n(An()),n(qn()),n(Cn()),n(Tn()),n(Ln()),n(En()),n(Sn()),n(zn()))})),n.variable(t("Graph")).define("Graph",(function(){return function(){function e(){Object(Pt.a)(this,e),this.adjacencyList=new Map}return Object(Bt.a)(e,[{key:"addVertex",value:function(e){return this.adjacencyList.set(e,[])}},{key:"addEdge",value:function(e,t){return this.adjacencyList.get(e).push(t)}},{key:"get",value:function(e){return this.adjacencyList.get(e)}}]),e}()})),n.variable(t("graphmd")).define("graphmd",["md"],(function(e){return e(_n())})),n.variable(t("trees")).define("trees",["md","treesvg"],(function(e,t){return e(On(),t)})),n.variable(t("dfs")).define("dfs",["md","tex"],(function(e,t){return e(jn(),t(kn()),t(yn()))})),n.variable(t("depthFirstSearch")).define("depthFirstSearch",(function(){return function(e){for(var t=e.graph,n=e.start,i=(e.target,new Set),r=[n];0!==r.length;){var a=r.pop();if(!i.has(a)){i.add(a);var o,s=bn(t.get(a).slice().reverse());try{for(s.s();!(o=s.n()).done;){var l=o.value;r.push(l)}}catch(c){s.e(c)}finally{s.f()}}}return i}})),n.variable(t("dfsmd")).define("dfsmd",["md"],(function(e){return e(wn())})),n.variable(t("depthFirstSearchResult")).define("depthFirstSearchResult",["Graph","depthFirstSearch"],(function(e,t){var n=new e;return n.addVertex("a"),n.addVertex("b"),n.addVertex("c"),n.addVertex("d"),n.addVertex("e"),n.addVertex("f"),n.addVertex("g"),n.addEdge("a","b"),n.addEdge("a","c"),n.addEdge("a","e"),n.addEdge("b","d"),n.addEdge("b","f"),n.addEdge("c","g"),n.addEdge("e","f"),n.addEdge("f","e"),t({graph:n,start:"a",target:"d"})})),n.variable(t("advanced")).define("advanced",["md"],(function(e){return e(vn())})),n.variable(t("bloom")).define("bloom",["md","tex"],(function(e,t){return e(gn(),t(mn()),t(pn()),t(hn()))})),n.variable(t("BloomFilter")).define("BloomFilter",["mmh"],(function(e){return function(){function t(e){var n=e.probability,i=void 0===n?.05:n,r=e.itemCount,a=void 0===r?20:r;Object(Pt.a)(this,t);var o=Math.floor(-a*Math.log(i)/Math.pow(Math.log(2),2));Object.assign(this,{probability:i,size:o,hashCount:o/a*Math.log(2),value:Array(o).fill(0)})}return Object(Bt.a)(t,[{key:"add",value:function(t){for(var n=0;n<this.hashCount;n++){var i=e(t,n)%this.size;this.value[i]=1}}},{key:"check",value:function(t){for(var n=0;n<this.hashCount;n++){var i=e(t,n)%this.size;if(!this.value[i])return!1}return!0}}]),t}()})),n.variable(t("bloommd")).define("bloommd",["md"],(function(e){return e(un())})),n.variable(t()).define(["BloomFilter"],(function(e){var t=new e({itemCount:10});return t.add("blue"),t.check("green"),t.check("blue"),t.value.join("")})),n.variable(t("radix")).define("radix",["md","tex"],(function(e,t){return e(dn(),t(fn()),t(cn()))})),n.variable(t("radixSort")).define("radixSort",["getDigitRight"],(function(e){return function(t){for(var n=Math.max.apply(Math,It(t.map((function(e){return e.toString().length})))),i=0;i<n;i++){for(var r=Array(10).fill().map((function(){return[]})),a=0;a<t.length;a++)t[a]&&r[e(t[a],i)].push(t[a]);t=r.flat()}return t}})),n.variable(t("radixmd")).define("radixmd",["md"],(function(e){return e(ln())})),n.variable(t()).define(["md"],(function(e){return e(sn())})),n.variable(t("viewof randomArray")).define("viewof randomArray",["generateRandomArray","html"],(function(e,t){var n=e(15),i=t(on());return Object.defineProperty(i,"value",{get:function(){return n}}),i.onclick=function(){return n=e(15)},i})),n.variable(t("randomArray")).define("randomArray",["Generators","viewof randomArray"],(function(e,t){return e.input(t)})),n.variable(t("radixView")).define("radixView",["md","randomArray","radixSort"],(function(e,t,n){return e(an(),t.join(", "),n(t).join(", "))})),n.variable(t("credits")).define("credits",["md","referenceData","html","DOM"],(function(e,t,n,i){return e(rn(),t.map((function(e){return n(nn(),e.title,e.url,i.text(e.url.replace(/^http[s]\:\/\//,"")))})))})),n.variable(t()).define(["md"],(function(e){return e(tn())})),n.variable(t("mmh")).define("mmh",["require"],(function(e){return e("murmurhash@2.0.0/murmurhash.js").catch((function(){return window.murmur}))})),n.variable(t("generateRandomArray")).define("generateRandomArray",(function(){return function(e){return Array(e).fill().map((function(){return Math.floor(40*Math.random())+1}))}})),n.variable(t("getDigitRight")).define("getDigitRight",(function(){return function(e,t){return parseInt(e.toString().split("").reverse().join("").charAt(t))||0}})),n.define("initial referenceData",(function(){return[]})),n.variable(t("mutable referenceData")).define("mutable referenceData",["Mutable","initial referenceData"],(function(e,t){return new e(t)})),n.variable(t("referenceData")).define("referenceData",["mutable referenceData"],(function(e){return e.generator})),n.variable(t("reference")).define("reference",["referenceData","html","mutable referenceData"],(function(e,t,n){return function(i){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";e.length||document.head.appendChild(t(en()));var a=n.value.findIndex((function(e){return e.url===i}));if(a<0)a=n.value.push({url:i,title:r}),n.value=n.value;else{var o=n.value[a];i=o.url,r=o.title,++a}var s=document.createElement("A");return s.className="reference",s.title=r,s.rel="noreferrer",s.target="_blank",s.textContent=a.toString().replace(/\d/g,(function(e){return"\u2070\xb9\xb2\xb3\u2074\u2075\u2076\u2077\u2078\u2079"[e]})),s.href=i,s}})),n.variable(t("sampleGraph")).define("sampleGraph",["svg"],(function(e){return e(Qt())})),n.variable(t("linkedlistsvg")).define("linkedlistsvg",["svg"],(function(e){return e(Jt())})),n.variable(t("doublell")).define("doublell",["svg"],(function(e){return e(Kt())})),n.variable(t("circlell")).define("circlell",["svg"],(function(e){return e(Yt())})),n.variable(t("stacksvg")).define("stacksvg",["svg"],(function(e){return e(Xt())})),n.variable(t("queuesvg")).define("queuesvg",["svg"],(function(e){return e(Wt())})),n.variable(t("hashtablesvg")).define("hashtablesvg",["svg"],(function(e){return e($t())})),n.variable(t("treesvg")).define("treesvg",["svg"],(function(e){return e(Zt())})),n}var fr=n("vOnD"),dr=n("CafY"),ur=Object(fr.c)(dr.a).withConfig({displayName:"algorithms-and-datastructures__LayoutWrapper",componentId:"sc-1r2l8b-0"})(["background-color:rgba(40,42,54,1) !important;"]),hr=fr.c.div.withConfig({displayName:"algorithms-and-datastructures__Wrapper",componentId:"sc-1r2l8b-1"})(["display:flex;justify-content:center;.Notebook{max-width:85ch;width:100%;}font-family:'Source Serif Pro',Iowan Old Style,Apple Garamond,Palatino Linotype,Times New Roman,'Droid Serif',Times,serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-size:17px;line-height:1.5;"," .hljs{background:#1c1c1c;border-radius:9px;box-shadow:1px 0px 10px rgb(0 0 0);}svg{filter:invert(1);background-color:transparent !important;}a,a *{color:rgba(80,250,123,1) !important;background-color:transparent !important;}a:hover,a:hover *,a:visited:hover,a:visited:hover *,span[onclick]:hover,div[onclick]:hover,[role='link']:hover,[role='link']:hover *,[role='button']:hover *,[role='menuitem']:hover,[role='menuitem']:hover *,.link:hover,.link:hover *{color:rgba(241,250,140,1) !important;}h1,h2,h3,h4,h5,h6,strong,[id*='headline'],[class*='headline'],[id*='header'],[class*='header'],[class*='header'] td{color:rgba(255,184,108,1) !important;}h4{margin:2rem 0 1rem 0;}table{background-color:rgba(40,42,54,1) !important;}"],".hljs{display:block;overflow-x:auto;padding:.5em;background:#282a36}.hljs-built_in,.hljs-selector-tag,.hljs-section,.hljs-link{color:#8be9fd}.hljs-keyword{color:#ff79c6}.hljs,.hljs-subst{color:#f8f8f2}.hljs-title{color:#50fa7b}.hljs-string,.hljs-meta,.hljs-name,.hljs-type,.hljs-attr,.hljs-symbol,.hljs-bullet,.hljs-addition,.hljs-variable,.hljs-template-tag,.hljs-template-variable{color:#f1fa8c}.hljs-comment,.hljs-quote,.hljs-deletion{color:#6272a4}.hljs-keyword,.hljs-selector-tag,.hljs-literal,.hljs-title,.hljs-section,.hljs-doctag,.hljs-type,.hljs-name,.hljs-strong{font-weight:700}.hljs-literal,.hljs-number{color:#bd93f9}.hljs-emphasis{font-style:italic}"),pr=(t.default=function(){return Object(i.jsx)(ur,{disableBackground:!0,children:Object(i.jsx)(hr,{children:Object(i.jsx)(pr,{})})})},function(){var e=Object(r.useRef)();return Object(r.useEffect)((function(){(new Lt).module(cr,(function(t){return"intro"===t?he.into(e.current.querySelector(".intro"))():"abstract"===t?he.into(e.current.querySelector(".abstract"))():"euclid"===t?he.into(e.current.querySelector(".euclid"))():"gcdmd"===t?he.into(e.current.querySelector(".gcdmd"))():"viewof args"===t?he.into(e.current.querySelector(".viewof-args"))():"gcdview"===t?he.into(e.current.querySelector(".gcdview"))():"basic"===t?he.into(e.current.querySelector(".basic"))():"array"===t?he.into(e.current.querySelector(".array"))():"ll"===t?he.into(e.current.querySelector(".ll"))():"stacks"===t?he.into(e.current.querySelector(".stacks"))():"queues"===t?he.into(e.current.querySelector(".queues"))():"hash"===t?he.into(e.current.querySelector(".hash"))():"graphs"===t?he.into(e.current.querySelector(".graphs"))():"graphmd"===t?he.into(e.current.querySelector(".graphmd"))():"trees"===t?he.into(e.current.querySelector(".trees"))():"dfs"===t?he.into(e.current.querySelector(".dfs"))():"depthFirstSearchResult"===t?he.into(e.current.querySelector(".depthFirstSearchResult"))():"dfsmd"===t?he.into(e.current.querySelector(".dfsmd"))():"advanced"===t?he.into(e.current.querySelector(".advanced"))():"bloom"===t?he.into(e.current.querySelector(".bloom"))():"bloommd"===t?he.into(e.current.querySelector(".bloommd"))():"radix"===t?he.into(e.current.querySelector(".radix"))():"radixSort"===t?he.into(e.current.querySelector(".radixSort"))():"radixmd"===t?he.into(e.current.querySelector(".radixmd"))():"viewof randomArray"===t?he.into(e.current.querySelector(".viewof-randomArray"))():"radixView"===t?he.into(e.current.querySelector(".radixView"))():"credits"===t?he.into(e.current.querySelector(".credits"))():void 0}))}),[]),Object(i.jsxs)("div",{className:"Notebook",ref:e,children:[Object(i.jsx)("div",{className:"intro",id:"intro"}),Object(i.jsx)("div",{className:"abstract",id:"abstract"}),Object(i.jsx)("div",{className:"euclid",id:"euclid"}),Object(i.jsx)("div",{className:"gcdmd",id:"gcdmd"}),Object(i.jsx)("div",{className:"viewof-args",id:"viewof-args"}),Object(i.jsx)("div",{className:"gcdview",id:"gcdview"}),Object(i.jsx)("div",{className:"basic",id:"basic"}),Object(i.jsx)("div",{className:"array",id:"array"}),Object(i.jsx)("div",{className:"ll",id:"ll"}),Object(i.jsx)("div",{className:"stacks",id:"stacks"}),Object(i.jsx)("div",{className:"queues",id:"queues"}),Object(i.jsx)("div",{className:"hash",id:"hash"}),Object(i.jsx)("div",{className:"graphs",id:"graphs"}),Object(i.jsx)("div",{className:"graphmd",id:"graphmd"}),Object(i.jsx)("div",{className:"trees",id:"trees"}),Object(i.jsx)("div",{className:"dfs",id:"dfs"}),Object(i.jsx)("div",{className:"depthFirstSearchResult",id:"depthFirstSearchResult"}),Object(i.jsx)("div",{className:"dfsmd",id:"dfsmd"}),Object(i.jsx)("div",{className:"advanced",id:"advanced"}),Object(i.jsx)("div",{className:"bloom",id:"bloom"}),Object(i.jsx)("div",{className:"BloomFilter",id:"BloomFilter"}),Object(i.jsx)("div",{className:"bloommd",id:"bloommd"}),Object(i.jsx)("div",{className:"radix",id:"radix"}),Object(i.jsx)("div",{className:"radixSort",id:"radixSort"}),Object(i.jsx)("div",{className:"radixmd",id:"radixmd"}),Object(i.jsx)("div",{className:"viewof-randomArray",id:"viewof-randomArray"}),Object(i.jsx)("div",{className:"radixView",id:"radixView"}),Object(i.jsx)("div",{className:"credits",id:"credits"})]})})}},[["8vYA",1,2,4,0,3]]]);